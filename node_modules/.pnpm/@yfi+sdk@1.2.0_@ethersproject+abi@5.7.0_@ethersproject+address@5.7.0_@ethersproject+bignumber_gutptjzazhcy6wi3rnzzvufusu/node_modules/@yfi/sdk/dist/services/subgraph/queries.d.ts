export declare const VAULT_EARNINGS = "query VaultEarnings($vault: ID!) {\n    vault(id: $vault) {\n      token {\n        id\n        decimals\n      }\n      latestUpdate {\n        returnsGenerated\n      }\n    }\n  }\n";
export declare const PROTOCOL_EARNINGS = "query ProtocolEarnings {\n    vaults {\n      token {\n        id\n        decimals\n      }\n      latestUpdate {\n        returnsGenerated\n      }\n    }\n  }\n";
export declare const buildAccountEarningsVariables: (id: string) => {
    id: string;
    ignoredVaults: string[];
};
export declare const ACCOUNT_EARNINGS = "\n  query AccountEarnings($id: ID!, $ignoredVaults: [String!]) {\n    account(id: $id) {\n      vaultPositions(where: { vault_not_in: $ignoredVaults } ) {\n        balanceShares\n        token {\n          id\n          decimals\n        }\n        shareToken {\n          symbol\n        }\n        updates {\n          deposits\n          withdrawals\n          tokensReceived\n          tokensSent\n        }\n        vault {\n          id\n          latestUpdate {\n            pricePerShare\n          }\n        }\n      }\n    }\n  }\n";
export declare const ASSET_HISTORIC_EARNINGS: (blocks: number[]) => string;
export declare const ACCOUNT_HISTORIC_EARNINGS = "query AccountHistoricEarnings($id: ID!, $shareToken: String!, $fromDate: String!, $toDate: BigInt!) {\n  account(id: $id) {\n      vaultPositions(where: { shareToken: $shareToken }) {\n        balanceShares\n        token {\n          id\n          decimals\n        }\n        vault {\n          vaultDayData(where: { timestamp_gte: $fromDate, timestamp_lte: $toDate }, orderBy: timestamp, orderDirection: asc, first: 1000) {\n            pricePerShare\n            timestamp\n          }\n        }\n        updates(orderBy: timestamp, orderDirection: asc, first: 1000) {\n          balanceShares\n          timestamp\n          deposits\n          withdrawals\n          tokensReceived\n          tokensSent\n        }\n      }\n    }\n  }\n";
export declare const PROTOCOL_FEES = "query ProtocolFees($sinceDate: BigInt!) {\n    transfers(where: { timestamp_gt: $sinceDate }, first: 1000) {\n      tokenAmountUsdc\n    }\n  }\n";
