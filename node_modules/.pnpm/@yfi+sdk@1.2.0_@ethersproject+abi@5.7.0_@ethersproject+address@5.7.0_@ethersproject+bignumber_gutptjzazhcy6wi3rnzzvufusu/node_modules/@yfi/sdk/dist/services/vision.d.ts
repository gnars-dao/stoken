import { Service } from "../common";
import { Address, Apy, ApyMap } from "../types";
/**
 * Fix for backscratcher vaults returning different casing and property names so it's all normalized.
 */
export declare function convertCompositeApyToSnakeCase(apy: Apy | undefined): Apy | undefined;
/**
 * [[VisionService]] provides access to off chain apy calculations for yearn
 * products.
 */
export declare class VisionService extends Service {
    /**
     * Fetch APY from a list of yearn's vault addresses (or all of them is address
     * is not provided).
     * @param addresses
     */
    apy<T extends Address>(addresses?: T[]): Promise<ApyMap<T>>;
    /**
     * Fetch API for a specific yearn's vault address.
     * @param addresses
     */
    apy(address: Address): Promise<Apy | undefined>;
}
