export declare const createDeferred: <T, P = string | number | undefined>(id?: P | undefined) => {
    id: P | undefined;
    resolve: (t: T) => void;
    reject: (e?: Error) => void;
    promise: Promise<T>;
};
export interface Deferred<T, P = string | number | undefined> {
    id: P;
    promise: Promise<T>;
    resolve: (t: T) => void;
    reject: (e: Error) => void;
}
export type DeferredResponse<D> = D extends Deferred<infer R> ? R : never;
//# sourceMappingURL=createDeferred.d.ts.map