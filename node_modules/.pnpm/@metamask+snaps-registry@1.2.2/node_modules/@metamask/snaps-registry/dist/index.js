"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnapsRegistryDatabaseStruct = exports.BlockedSnapStruct = exports.BlockReasonStruct = exports.VerifiedSnapStruct = void 0;
const utils_1 = require("@metamask/utils");
const superstruct_1 = require("superstruct");
const VerifiedSnapVersionStruct = (0, superstruct_1.object)({
    checksum: utils_1.ChecksumStruct,
});
exports.VerifiedSnapStruct = (0, superstruct_1.object)({
    id: (0, superstruct_1.string)(),
    metadata: (0, superstruct_1.object)({
        name: (0, superstruct_1.string)(),
    }),
    versions: (0, superstruct_1.record)(utils_1.VersionStruct, VerifiedSnapVersionStruct),
});
exports.BlockReasonStruct = (0, superstruct_1.object)({
    explanation: (0, superstruct_1.optional)((0, superstruct_1.string)()),
    url: (0, superstruct_1.optional)((0, superstruct_1.string)()),
});
exports.BlockedSnapStruct = (0, superstruct_1.union)([
    (0, superstruct_1.object)({
        id: (0, superstruct_1.string)(),
        versionRange: utils_1.VersionRangeStruct,
        reason: (0, superstruct_1.optional)(exports.BlockReasonStruct),
    }),
    (0, superstruct_1.object)({ checksum: utils_1.ChecksumStruct, reason: (0, superstruct_1.optional)(exports.BlockReasonStruct) }),
]);
exports.SnapsRegistryDatabaseStruct = (0, superstruct_1.object)({
    verifiedSnaps: (0, superstruct_1.record)((0, superstruct_1.string)(), exports.VerifiedSnapStruct),
    blockedSnaps: (0, superstruct_1.array)(exports.BlockedSnapStruct),
});
__exportStar(require("./verify"), exports);
//# sourceMappingURL=index.js.map