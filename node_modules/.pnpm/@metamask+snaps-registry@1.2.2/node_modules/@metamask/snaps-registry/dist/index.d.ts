import { Infer } from 'superstruct';
export declare const VerifiedSnapStruct: import("superstruct").Struct<{
    id: string;
    metadata: {
        name: string;
    };
    versions: Record<import("@metamask/utils").SemVerVersion, {
        checksum: string;
    }>;
}, {
    id: import("superstruct").Struct<string, null>;
    metadata: import("superstruct").Struct<{
        name: string;
    }, {
        name: import("superstruct").Struct<string, null>;
    }>;
    versions: import("superstruct").Struct<Record<import("@metamask/utils").SemVerVersion, {
        checksum: string;
    }>, null>;
}>;
export declare const BlockReasonStruct: import("superstruct").Struct<{
    url?: string | undefined;
    explanation?: string | undefined;
}, {
    explanation: import("superstruct").Struct<string | undefined, null>;
    url: import("superstruct").Struct<string | undefined, null>;
}>;
export declare type BlockReason = Infer<typeof BlockReasonStruct>;
export declare const BlockedSnapStruct: import("superstruct").Struct<{
    id: string;
    versionRange: import("@metamask/utils").SemVerRange;
    reason?: {
        url?: string | undefined;
        explanation?: string | undefined;
    } | undefined;
} | {
    checksum: string;
    reason?: {
        url?: string | undefined;
        explanation?: string | undefined;
    } | undefined;
}, null>;
export declare const SnapsRegistryDatabaseStruct: import("superstruct").Struct<{
    verifiedSnaps: Record<string, {
        id: string;
        metadata: {
            name: string;
        };
        versions: Record<import("@metamask/utils").SemVerVersion, {
            checksum: string;
        }>;
    }>;
    blockedSnaps: ({
        id: string;
        versionRange: import("@metamask/utils").SemVerRange;
        reason?: {
            url?: string | undefined;
            explanation?: string | undefined;
        } | undefined;
    } | {
        checksum: string;
        reason?: {
            url?: string | undefined;
            explanation?: string | undefined;
        } | undefined;
    })[];
}, {
    verifiedSnaps: import("superstruct").Struct<Record<string, {
        id: string;
        metadata: {
            name: string;
        };
        versions: Record<import("@metamask/utils").SemVerVersion, {
            checksum: string;
        }>;
    }>, null>;
    blockedSnaps: import("superstruct").Struct<({
        id: string;
        versionRange: import("@metamask/utils").SemVerRange;
        reason?: {
            url?: string | undefined;
            explanation?: string | undefined;
        } | undefined;
    } | {
        checksum: string;
        reason?: {
            url?: string | undefined;
            explanation?: string | undefined;
        } | undefined;
    })[], import("superstruct").Struct<{
        id: string;
        versionRange: import("@metamask/utils").SemVerRange;
        reason?: {
            url?: string | undefined;
            explanation?: string | undefined;
        } | undefined;
    } | {
        checksum: string;
        reason?: {
            url?: string | undefined;
            explanation?: string | undefined;
        } | undefined;
    }, null>>;
}>;
export declare type SnapsRegistryDatabase = Infer<typeof SnapsRegistryDatabaseStruct>;
export * from './verify';
