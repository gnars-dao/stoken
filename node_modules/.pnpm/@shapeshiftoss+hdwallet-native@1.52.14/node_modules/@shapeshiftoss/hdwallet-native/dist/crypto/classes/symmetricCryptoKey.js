"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SymmetricCryptoKey = void 0;
/*
 Copied from portis: packages/portis-crypto/src/models/symmetricCryptoKey.ts
 */
const utils_1 = require("../utils");
const encryptionType_1 = require("./encryptionType");
class SymmetricCryptoKey {
    constructor(hashKey, encKey, mac) {
        this.encType = encryptionType_1.EncryptionType.AesCbc256_HmacSha256_B64;
        if (hashKey == null)
            throw new Error("Required parameter [hashKey] was not provided");
        if (encKey == null)
            throw new Error("Required parameter [encKey] was not provided");
        if (mac == null)
            throw new Error("Required parameter [mac] was not provided");
        if (hashKey.byteLength !== 32 || encKey.byteLength !== 32 || mac.byteLength !== 32)
            throw new Error("Keys must be 32 bytes");
        this.hashKey = hashKey;
        this.encKey = encKey;
        this.macKey = mac;
        this.hashKeyB64 = (0, utils_1.fromBufferToB64)(this.hashKey);
        this.encKeyB64 = (0, utils_1.fromBufferToB64)(this.encKey);
        this.macKeyB64 = (0, utils_1.fromBufferToB64)(this.macKey);
    }
}
exports.SymmetricCryptoKey = SymmetricCryptoKey;
//# sourceMappingURL=symmetricCryptoKey.js.map