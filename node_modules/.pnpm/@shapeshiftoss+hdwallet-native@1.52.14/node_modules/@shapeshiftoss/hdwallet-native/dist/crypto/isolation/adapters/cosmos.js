"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletAdapter = void 0;
class WalletAdapter {
    constructor(isolatedKey, publicKey) {
        this._isolatedKey = isolatedKey;
        this._publicKey = publicKey;
    }
    static create(isolatedKey) {
        return __awaiter(this, void 0, void 0, function* () {
            return new WalletAdapter(isolatedKey, yield isolatedKey.getPublicKey());
        });
    }
    get publicKey() {
        return Buffer.from(this._publicKey).toString("hex");
    }
    sign(signMessage) {
        return __awaiter(this, void 0, void 0, function* () {
            const signBuf = Buffer.from(signMessage.normalize("NFKD"), "utf8");
            return Buffer.from(yield this._isolatedKey.ecdsaSign("sha256", signBuf));
        });
    }
}
exports.WalletAdapter = WalletAdapter;
exports.default = WalletAdapter;
//# sourceMappingURL=cosmos.js.map