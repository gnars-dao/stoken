"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getValidatedParams = exports.invokeSnapSugar = exports.invokeSnapSugarHandler = void 0;
const utils_1 = require("@metamask/utils");
const eth_rpc_errors_1 = require("eth-rpc-errors");
/**
 * `wallet_invokeSnap` attempts to invoke an RPC method of the specified Snap.
 */
exports.invokeSnapSugarHandler = {
    methodNames: ['wallet_invokeSnap'],
    implementation: invokeSnapSugar,
    hookNames: undefined,
};
/**
 * The `wallet_invokeSnap` method implementation.
 * Reroutes incoming JSON-RPC requests that are targeting snaps, by modifying the method and params.
 *
 * @param req - The JSON-RPC request object.
 * @param _res - The JSON-RPC response object. Not used by this
 * function.
 * @param next - The `json-rpc-engine` "next" callback.
 * @param end - The `json-rpc-engine` "end" callback.
 * @returns Nothing.
 * @throws If the params are invalid.
 */
function invokeSnapSugar(req, _res, next, end) {
    let params;
    try {
        params = getValidatedParams(req.params);
    }
    catch (error) {
        return end(error);
    }
    req.method = 'wallet_snap';
    req.params = params;
    return next();
}
exports.invokeSnapSugar = invokeSnapSugar;
/**
 * Validates the wallet_invokeSnap method `params` and returns them cast to the correct
 * type. Throws if validation fails.
 *
 * @param params - The unvalidated params object from the method request.
 * @returns The validated method parameter object.
 */
function getValidatedParams(params) {
    if (!(0, utils_1.isObject)(params)) {
        throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({
            message: 'Expected params to be a single object.',
        });
    }
    const { snapId, request } = params;
    if (!snapId || typeof snapId !== 'string' || snapId === '') {
        throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({
            message: 'Must specify a valid snap ID.',
        });
    }
    if (!(0, utils_1.isObject)(request)) {
        throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({
            message: 'Expected request to be a single object.',
        });
    }
    return params;
}
exports.getValidatedParams = getValidatedParams;
//# sourceMappingURL=invokeSnapSugar.js.map