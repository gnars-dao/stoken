{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/restricted/caveats/index.ts"],"names":[],"mappings":";;;AAGA,wDAA4D;AAC5D,4DAAgE;AAChE,wDAA4D;AAC5D,6DAG8B;AAC9B,yEAGoC;AACpC,uCAAuD;AAE1C,QAAA,oBAAoB,GAAG;IAClC,GAAG,sEAA2C;IAC9C,GAAG,0DAAqC;IACxC,GAAG,oCAA0B;CACrB,CAAC;AAEE,QAAA,aAAa,GAGtB;IACF,CAAC,wCAAsB,CAAC,UAAU,CAAC,EAAE,+DAAoC;IACzE,CAAC,4CAAwB,CAAC,UAAU,CAAC,EAAE,+DAAoC;IAC3E,CAAC,wCAAsB,CAAC,UAAU,CAAC,EAAE,mDAA8B;CACpE,CAAC","sourcesContent":["import { PermissionConstraint } from '@metamask/permission-controller';\nimport { Json } from '@metamask/utils';\n\nimport { getBip32EntropyBuilder } from '../getBip32Entropy';\nimport { getBip32PublicKeyBuilder } from '../getBip32PublicKey';\nimport { getBip44EntropyBuilder } from '../getBip44Entropy';\nimport {\n  permittedCoinTypesCaveatMapper,\n  PermittedCoinTypesCaveatSpecification,\n} from './permittedCoinTypes';\nimport {\n  permittedDerivationPathsCaveatMapper,\n  PermittedDerivationPathsCaveatSpecification,\n} from './permittedDerivationPaths';\nimport { SnapIdsCaveatSpecification } from './snapIds';\n\nexport const caveatSpecifications = {\n  ...PermittedDerivationPathsCaveatSpecification,\n  ...PermittedCoinTypesCaveatSpecification,\n  ...SnapIdsCaveatSpecification,\n} as const;\n\nexport const caveatMappers: Record<\n  string,\n  (value: Json) => Pick<PermissionConstraint, 'caveats'>\n> = {\n  [getBip32EntropyBuilder.targetName]: permittedDerivationPathsCaveatMapper,\n  [getBip32PublicKeyBuilder.targetName]: permittedDerivationPathsCaveatMapper,\n  [getBip44EntropyBuilder.targetName]: permittedCoinTypesCaveatMapper,\n};\n"]}