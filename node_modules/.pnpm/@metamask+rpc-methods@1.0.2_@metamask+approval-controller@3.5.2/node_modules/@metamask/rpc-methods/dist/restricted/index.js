"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.restrictedMethodPermissionBuilders = exports.WALLET_SNAP_PERMISSION_KEY = exports.ManageStateOperation = exports.DialogType = void 0;
const dialog_1 = require("./dialog");
const getBip32Entropy_1 = require("./getBip32Entropy");
const getBip32PublicKey_1 = require("./getBip32PublicKey");
const getBip44Entropy_1 = require("./getBip44Entropy");
const getEntropy_1 = require("./getEntropy");
const invokeSnap_1 = require("./invokeSnap");
const manageState_1 = require("./manageState");
const notify_1 = require("./notify");
var dialog_2 = require("./dialog");
Object.defineProperty(exports, "DialogType", { enumerable: true, get: function () { return dialog_2.DialogType; } });
var manageState_2 = require("./manageState");
Object.defineProperty(exports, "ManageStateOperation", { enumerable: true, get: function () { return manageState_2.ManageStateOperation; } });
var invokeSnap_2 = require("./invokeSnap");
Object.defineProperty(exports, "WALLET_SNAP_PERMISSION_KEY", { enumerable: true, get: function () { return invokeSnap_2.WALLET_SNAP_PERMISSION_KEY; } });
exports.restrictedMethodPermissionBuilders = {
    [dialog_1.dialogBuilder.targetName]: dialog_1.dialogBuilder,
    [getBip32Entropy_1.getBip32EntropyBuilder.targetName]: getBip32Entropy_1.getBip32EntropyBuilder,
    [getBip32PublicKey_1.getBip32PublicKeyBuilder.targetName]: getBip32PublicKey_1.getBip32PublicKeyBuilder,
    [getBip44Entropy_1.getBip44EntropyBuilder.targetName]: getBip44Entropy_1.getBip44EntropyBuilder,
    [getEntropy_1.getEntropyBuilder.targetName]: getEntropy_1.getEntropyBuilder,
    [invokeSnap_1.invokeSnapBuilder.targetName]: invokeSnap_1.invokeSnapBuilder,
    [manageState_1.manageStateBuilder.targetName]: manageState_1.manageStateBuilder,
    [notify_1.notifyBuilder.targetName]: notify_1.notifyBuilder,
};
__exportStar(require("./caveats"), exports);
//# sourceMappingURL=index.js.map