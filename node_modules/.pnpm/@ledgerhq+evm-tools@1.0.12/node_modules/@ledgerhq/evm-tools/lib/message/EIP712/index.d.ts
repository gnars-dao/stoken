import { EIP712Message } from "@ledgerhq/types-live";
import { MessageFilters } from "./types";
export declare function isEIP712Message(message: unknown): message is EIP712Message;
export declare const sortObjectAlphabetically: (obj: Record<string, unknown>) => Record<string, unknown>;
export declare const getSchemaHashForMessage: (message: EIP712Message) => string;
/**
 * Tries to find the proper filters for a given EIP712 message
 * in the CAL
 *
 * @param {EIP712Message} message
 * @returns {MessageFilters | undefined}
 */
export declare const getFiltersForMessage: (message: EIP712Message, remoteCryptoAssetsListURI?: string | null) => Promise<MessageFilters | undefined>;
/**
 * Gets the fields visible on the nano for a specific EIP712 message
 */
export declare const getEIP712FieldsDisplayedOnNano: (messageData: EIP712Message, remoteCryptoAssetsListURI?: string) => Promise<{
    label: string;
    value: string | string[];
}[] | null>;
//# sourceMappingURL=index.d.ts.map