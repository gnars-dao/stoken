import type { ExternalProvider } from '@ethersproject/providers';
import type { EnableShapeShiftMultichainResult, RPCHandlerResponse, ShapeShiftSnapRPCRequest, ShapeShiftSnapRPCResponse } from '@shapeshiftoss/metamask-snaps-types';
export declare type Provider = Omit<ExternalProvider, 'request'> & {
    request?: (request: {
        method: string;
        params?: any;
    }) => Promise<any>;
};
export declare const getMetaMaskProvider: () => Promise<Provider | undefined>;
export declare const shapeShiftSnapInstalled: (snapId: string) => Promise<boolean>;
export declare const isLocked: () => Promise<boolean>;
/**
 * Prompt the user to allow the snap
 */
export declare const enableShapeShiftSnap: (snapId: string, version?: string) => Promise<EnableShapeShiftMultichainResult>;
export declare const sendFlaskRPCRequest: <T extends ShapeShiftSnapRPCResponse>(request: ShapeShiftSnapRPCRequest, snapId: string) => Promise<T>;
