{
  "compilerOptions": {
    "alwaysStrict": true,
    "declaration": true,
    "esModuleInterop": true,
    "listEmittedFiles": false /* Print names of generated files part of the compilation. */,
    "listFiles": false /* Print names of files part of the compilation. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    "noImplicitAny": true,
    "noImplicitOverride": true,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noImplicitThis": true,
    "noUnusedLocals": true /* Report errors on unused locals. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "outDir": "./dist",
    "pretty": true /* Stylize errors and messages using color and context. */,
    "rootDir": "./src",
    "skipLibCheck": true,
    "strictBindCallApply": true,
    "strictFunctionTypes": true,
    "strictNullChecks": true,
    "traceResolution": false /* Report module resolution log messages. */
  },
  "exclude": ["node_modules", "dist"],
  "extends": "../../tsconfig.json",
  "include": [
    "src/cosmossdk/terra/terra.ts",
    "src/cosmossdk/terra/terra.test.ts",
    "src/cosmossdk/terra/index.ts",
    "src/cosmossdk/thorchain/thorchain.ts",
    "src/cosmossdk/thorchain/thorchain.test.ts",
    "src/cosmossdk/thorchain/index.ts",
    "src/cosmossdk/kava/kava.ts",
    "src/cosmossdk/kava/kava.test.ts",
    "src/cosmossdk/kava/index.ts",
    "src/cosmossdk/cosmos/cosmos.ts",
    "src/cosmossdk/cosmos/cosmos.test.ts",
    "src/cosmossdk/cosmos/index.ts",
    "src/cosmossdk/osmosis/osmosis.test.ts",
    "src/cosmossdk/osmosis/osmosis.ts",
    "src/cosmossdk/osmosis/index.ts",
    "src/cosmossdk/index.ts",
    "src/cosmossdk/secret/secret.ts",
    "src/cosmossdk/secret/secret.test.ts",
    "src/cosmossdk/secret/index.ts",
    "src/cosmossdk/binance/binance.ts",
    "src/cosmossdk/binance/binance.test.ts",
    "src/cosmossdk/binance/index.ts",
    "src/utils.test.ts",
    "src/utils.ts",
    "src/utxo/bitcoincash/bitcoincash.ts",
    "src/utxo/bitcoincash/index.ts",
    "src/utxo/bitcoincash/bitcoincash.test.ts",
    "src/utxo/bitcoin/bitcoin.ts",
    "src/utxo/bitcoin/bitcoin.test.ts",
    "src/utxo/bitcoin/index.ts",
    "src/utxo/index.ts",
    "src/utxo/dogecoin/dogecoin.ts",
    "src/utxo/dogecoin/index.ts",
    "src/utxo/dogecoin/dogecoin.test.ts",
    "src/utxo/litecoin/litecoin.test.ts",
    "src/utxo/litecoin/litecoin.ts",
    "src/utxo/litecoin/index.ts",
    "src/metamask/metamask.ts",
    "src/metamask/metamask.test.ts",
    "src/metamask/index.ts",
    "src/lib/logger.ts",
    "src/evm/avalanche/avalanche.test.ts",
    "src/evm/avalanche/avalanche.ts",
    "src/evm/avalanche/index.ts",
    "src/evm/index.ts",
    "src/evm/ethereum/ethereum.ts",
    "src/evm/ethereum/index.ts",
    "src/evm/ethereum/ethereum.test.ts",
    "src/index.ts"
  ]
}
