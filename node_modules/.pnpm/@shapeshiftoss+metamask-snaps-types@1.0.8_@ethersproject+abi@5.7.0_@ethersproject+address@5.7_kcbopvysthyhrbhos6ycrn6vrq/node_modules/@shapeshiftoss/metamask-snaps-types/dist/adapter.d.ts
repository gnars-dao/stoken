import type { AvalancheGetAddress, AvalancheSignMessage, AvalancheSignTransaction, BinanceGetAddress, BinanceSignedTransaction, BinanceSignTransaction, BitcoinCashGetAddress, BitcoinCashSignedTransaction, BitcoinCashSignTransaction, BitcoinGetAddress, BitcoinSignedTransaction, BitcoinSignTransaction, CosmosGetAddress, CosmosSignedTransaction, CosmosSignTransaction, DogecoinGetAddress, DogecoinSignedTransaction, DogecoinSignTransaction, EthereumGetAddress, EthereumSignMessage, EthereumSignTransaction, KavaGetAddress, KavaSignedTransaction, KavaSignTransaction, LitecoinGetAddress, LitecoinSignedTransaction, LitecoinSignTransaction, OsmosisGetAddress, OsmosisSignedTransaction, OsmosisSignTransaction, SecretGetAddress, SecretSignedTransaction, SecretSignTransaction, TerraGetAddress, TerraSignedTransaction, TerraSignTransaction, ThorchainGetAddress, ThorchainSignedTransaction, ThorchainSignTransaction } from './common';
import type { BroadcastTransactionParams, GetAddressParams, SignMessageParams, SignTransactionParams, VerifyMessageParams } from './snap';
export declare type BroadcastTransactionAdapterParams<T> = BroadcastTransactionParams<T> & {
    snapId: string;
};
export declare type GetAddressAdapterParams<T> = GetAddressParams<T> & {
    snapId: string;
};
export declare type SignMessageAdapterParams<T> = SignMessageParams<T> & {
    snapId: string;
};
export declare type SignTransactionAdapterParams<T> = SignTransactionParams<T> & {
    snapId: string;
};
export declare type VerifyMessageAdapterParams<T> = VerifyMessageParams<T> & {
    snapId: string;
};
export declare type AvalancheGetAddressAdapterParams = GetAddressAdapterParams<AvalancheGetAddress>;
export declare type AvalancheSignMessageAdapterParams = SignMessageAdapterParams<AvalancheSignMessage>;
export declare type AvalancheSendTransactionAdapterParams = SignTransactionAdapterParams<AvalancheSignTransaction>;
export declare type BinanceBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<BinanceSignedTransaction>;
export declare type BinanceGetAddressAdapterParams = GetAddressAdapterParams<BinanceGetAddress>;
export declare type BinanceSignTransactionAdapterParams = SignTransactionAdapterParams<BinanceSignTransaction>;
export declare type BitcoinBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<BitcoinSignedTransaction>;
export declare type BitcoinCashBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<BitcoinCashSignedTransaction>;
export declare type BitcoinCashGetAddressAdapterParams = GetAddressAdapterParams<BitcoinCashGetAddress>;
export declare type BitcoinCashSignTransactionAdapterParams = SignTransactionAdapterParams<BitcoinCashSignTransaction>;
export declare type BitcoinGetAddressAdapterParams = GetAddressAdapterParams<BitcoinGetAddress>;
export declare type BitcoinSignTransactionAdapterParams = SignTransactionAdapterParams<BitcoinSignTransaction>;
export declare type CosmosBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<CosmosSignedTransaction>;
export declare type CosmosGetAddressAdapterParams = GetAddressAdapterParams<CosmosGetAddress>;
export declare type CosmosSignTransactionAdapterParams = SignTransactionAdapterParams<CosmosSignTransaction>;
export declare type DecretBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<SecretSignedTransaction>;
export declare type DogecoinBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<DogecoinSignedTransaction>;
export declare type DogecoinGetAddressAdapterParams = GetAddressAdapterParams<DogecoinGetAddress>;
export declare type DogecoinSignTransactionAdapterParams = SignTransactionAdapterParams<DogecoinSignTransaction>;
export declare type EthereumGetAddressAdapterParams = GetAddressAdapterParams<EthereumGetAddress>;
export declare type EthereumSignMessageAdapterParams = SignMessageAdapterParams<EthereumSignMessage>;
export declare type EthereumSendTransactionAdapterParams = SignTransactionAdapterParams<EthereumSignTransaction>;
export declare type KavaBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<KavaSignedTransaction>;
export declare type KavaGetAddressAdapterParams = GetAddressAdapterParams<KavaGetAddress>;
export declare type KavaSignTransactionAdapterParams = SignTransactionAdapterParams<KavaSignTransaction>;
export declare type LitecoinBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<LitecoinSignedTransaction>;
export declare type LitecoinGetAddressAdapterParams = GetAddressAdapterParams<LitecoinGetAddress>;
export declare type LitecoinSignTransactionAdapterParams = SignTransactionAdapterParams<LitecoinSignTransaction>;
export declare type OsmosisBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<OsmosisSignedTransaction>;
export declare type OsmosisGetAddressAdapterParams = GetAddressAdapterParams<OsmosisGetAddress>;
export declare type OsmosisSignTransactionAdapterParams = SignTransactionAdapterParams<OsmosisSignTransaction>;
export declare type SecretBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<SecretSignedTransaction>;
export declare type SecretGetAddressAdapterParams = GetAddressAdapterParams<SecretGetAddress>;
export declare type SecretSignTransactionAdapterParams = SignTransactionAdapterParams<SecretSignTransaction>;
export declare type TerraBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<TerraSignedTransaction>;
export declare type TerraGetAddressAdapterParams = GetAddressAdapterParams<TerraGetAddress>;
export declare type TerraSignTransactionAdapterParams = SignTransactionAdapterParams<TerraSignTransaction>;
export declare type ThorchainBroadcastTransactionAdapterParams = BroadcastTransactionAdapterParams<ThorchainSignedTransaction>;
export declare type ThorchainGetAddressAdapterParams = GetAddressAdapterParams<ThorchainGetAddress>;
export declare type ThorchainSignTransactionAdapterParams = SignTransactionAdapterParams<ThorchainSignTransaction>;
