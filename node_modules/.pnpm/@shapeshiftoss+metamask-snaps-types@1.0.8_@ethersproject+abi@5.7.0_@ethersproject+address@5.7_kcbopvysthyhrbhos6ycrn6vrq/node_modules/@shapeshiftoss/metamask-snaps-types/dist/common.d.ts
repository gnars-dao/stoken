import type { PublicKey } from '@shapeshiftoss/hdwallet-core';
export { ETHGetAddress as AvalancheGetAddress, ETHSignedMessage as AvalancheSignedMessage, ETHSignedTx as AvalancheSignedTransaction, ETHSignMessage as AvalancheSignMessage, ETHSignTx as AvalancheSignTransaction, BinanceGetAddress, BinanceSignedTx as BinanceSignedTransaction, BinanceSignTx as BinanceSignTransaction, BTCGetAddress as BitcoinCashGetAddress, BTCSignedTx as BitcoinCashSignedTransaction, BTCSignTx as BitcoinCashSignTransaction, BTCGetAddress as BitcoinGetAddress, BTCSignedTx as BitcoinSignedTransaction, BTCSignTx as BitcoinSignTransaction, CosmosGetAddress, CosmosSignedTx as CosmosSignedTransaction, CosmosSignTx as CosmosSignTransaction, BTCGetAddress as DogecoinGetAddress, BTCSignedTx as DogecoinSignedTransaction, BTCSignTx as DogecoinSignTransaction, ETHGetAddress as EthereumGetAddress, ETHSignedMessage as EthereumSignedMessage, ETHSignedTx as EthereumSignedTransaction, ETHSignMessage as EthereumSignMessage, ETHSignTx as EthereumSignTransaction, KavaGetAddress, KavaSignedTx as KavaSignedTransaction, KavaSignTx as KavaSignTransaction, BTCGetAddress as LitecoinGetAddress, BTCSignedTx as LitecoinSignedTransaction, BTCSignTx as LitecoinSignTransaction, OsmosisGetAddress, OsmosisSignedTx as OsmosisSignedTransaction, OsmosisSignTx as OsmosisSignTransaction, SecretGetAddress, SecretSignedTx as SecretSignedTransaction, SecretSignTx as SecretSignTransaction, TerraGetAddress, TerraSignedTx as TerraSignedTransaction, TerraSignTx as TerraSignTransaction, ThorchainGetAddress, ThorchainSignedTx as ThorchainSignedTransaction, ThorchainSignTx as ThorchainSignTransaction, } from '@shapeshiftoss/hdwallet-core';
export declare type AvalancheAddress = string | null;
export declare type BinanceAddress = string | null;
export declare type BitcoinAddress = string | null;
export declare type BitcoinCashAddress = string | null;
export declare type CosmosAddress = string | null;
export declare type DogecoinAddress = string | null;
export declare type EthereumAddress = string | null;
export declare type KavaAddress = string | null;
export declare type LitecoinAddress = string | null;
export declare type OsmosisAddress = string | null;
export declare type SecretAddress = string | null;
export declare type TerraAddress = string | null;
export declare type ThorchainAddress = string | null;
export declare type PublicKeys = (PublicKey | null)[];
export interface WalletEnableParam {
    params: {
        [snapId: string]: {
            version?: string;
        };
    };
    permissionName?: Record<string, never>;
}
export interface userConfirmParam {
    prompt: string;
    description: string;
    textAreaContent: string;
}
export interface WalletEnableResult {
    accounts: string[];
    permissions: any[];
    snaps: any;
    errors?: Error[];
}
export interface EnableShapeShiftMultichainResult {
    success: boolean;
    message: WalletEnableResult;
}
export interface RequestSnapsParams {
    [snapId: string]: {
        version?: string;
    };
}
export interface WalletGetSnapsResult {
    [snapId: string]: {
        /**
         * The ID of the Snap.
         */
        id: string;
        /**
         * The initial permissions of the Snap, which will be requested when it is
         * installed.
         */
        initialPermissions: any[];
        /**
         * The name of the permission used to invoke the Snap.
         */
        permissionName: string;
        /**
         * The version of the Snap.
         */
        version: string;
    };
}
export interface RequestSnapsResult {
    [snapId: string]: WalletGetSnapsResult[string];
}
