export type HttpRequestOptions = {
    body?: Array<any> | Record<string, unknown> | string;
    url: string;
    method: 'POST' | 'GET';
    skipContentTypeHeader?: boolean;
    signal?: AbortSignal;
    timeout?: number;
};
export declare function bridgeApiCall(options: HttpRequestOptions): Promise<{
    success: false;
    error: "Unable to open device";
    message: string | undefined;
} | {
    success: false;
    error: "Malformed protocol format";
    message: string | undefined;
} | {
    success: false;
    error: NonNullable<"device not found" | "wrong previous session" | "session not found" | "device disconnected during action" | "other call in progress" | "Network request failed">;
    message: string | undefined;
} | {
    success: false;
    error: "unexpected error";
    message: string;
} | import("../types").Success<string | Record<string, unknown>>>;
//# sourceMappingURL=bridgeApiCall.d.ts.map