{"version":3,"sources":["../../src/options.ts"],"names":["OPTIONS_TYPE","domain","verifyDomain","getOptions","options"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,YAAY,GAAG,yBAAO;AAMjCC,EAAAA,MAAM,EAAE,4BAAU,0BAAV,EAAoB,cAApB,CANyB;AAcjCC,EAAAA,YAAY,EAAE,4BAAU,2BAAV,EAAqB,IAArB;AAdmB,CAAP,CAArB;;;AAmBA,MAAMC,UAAU,GAAIC,OAAD,IAAyC;AACjE,SAAO,yBAAOA,OAAO,IAAI,EAAlB,EAAsBJ,YAAtB,CAAP;AACD,CAFM","sourcesContent":["import { boolean, create, defaulted, Infer, object, string } from 'superstruct';\n\nexport const OPTIONS_TYPE = object({\n  /**\n   * The name of the domain struct.\n   *\n   * Default: \"EIP712Domain\"\n   */\n  domain: defaulted(string(), 'EIP712Domain'),\n\n  /**\n   * Whether to verify if the domain matches the EIP-712 specification. When this is disabled, you can use any arbitrary\n   * fields in the domain.\n   *\n   * Default: true\n   */\n  verifyDomain: defaulted(boolean(), true)\n});\n\nexport type Options = Partial<Infer<typeof OPTIONS_TYPE>>;\n\nexport const getOptions = (options: unknown): Required<Options> => {\n  return create(options ?? {}, OPTIONS_TYPE);\n};\n"],"file":"options.js"}