import _m0 from "protobufjs/minimal";
import { Coin } from "../../cosmos/base/v1beta1/coin";
import { Duration } from "../../google/protobuf/duration";
export declare const protobufPackage = "arkeo.claim";
/** Params defines the parameters for the module. */
export interface Params {
    airdropStartTime: Date | undefined;
    durationUntilDecay: Duration | undefined;
    durationOfDecay: Duration | undefined;
    /** denom of claimable asset */
    claimDenom: string;
    /** uarkeo to distribute to arkeo account for gas to make claiming easier */
    initialGasAmount: Coin | undefined;
}
export declare const Params: {
    encode(message: Params, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Params;
    fromJSON(object: any): Params;
    toJSON(message: Params): unknown;
    fromPartial<I extends {
        airdropStartTime?: Date | undefined;
        durationUntilDecay?: {
            seconds?: number | undefined;
            nanos?: number | undefined;
        } | undefined;
        durationOfDecay?: {
            seconds?: number | undefined;
            nanos?: number | undefined;
        } | undefined;
        claimDenom?: string | undefined;
        initialGasAmount?: {
            denom?: string | undefined;
            amount?: string | undefined;
        } | undefined;
    } & {
        airdropStartTime?: Date | undefined;
        durationUntilDecay?: ({
            seconds?: number | undefined;
            nanos?: number | undefined;
        } & {
            seconds?: number | undefined;
            nanos?: number | undefined;
        } & { [K in Exclude<keyof I["durationUntilDecay"], keyof Duration>]: never; }) | undefined;
        durationOfDecay?: ({
            seconds?: number | undefined;
            nanos?: number | undefined;
        } & {
            seconds?: number | undefined;
            nanos?: number | undefined;
        } & { [K_1 in Exclude<keyof I["durationOfDecay"], keyof Duration>]: never; }) | undefined;
        claimDenom?: string | undefined;
        initialGasAmount?: ({
            denom?: string | undefined;
            amount?: string | undefined;
        } & {
            denom?: string | undefined;
            amount?: string | undefined;
        } & { [K_2 in Exclude<keyof I["initialGasAmount"], keyof Coin>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, keyof Params>]: never; }>(object: I): Params;
};
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
