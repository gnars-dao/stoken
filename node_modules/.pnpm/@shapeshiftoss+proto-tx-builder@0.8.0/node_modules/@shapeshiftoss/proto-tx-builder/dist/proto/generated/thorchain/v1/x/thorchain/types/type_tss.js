"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TssVoter = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
function createBaseTssVoter() {
    return {
        id: "",
        poolPubKey: "",
        pubKeys: [],
        blockHeight: long_1.default.ZERO,
        chains: [],
        signers: [],
        majorityConsensusBlockHeight: long_1.default.ZERO,
    };
}
exports.TssVoter = {
    encode: function (message, writer) {
        var e_1, _a, e_2, _b, e_3, _c;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.id !== "") {
            writer.uint32(10).string(message.id);
        }
        if (message.poolPubKey !== "") {
            writer.uint32(18).string(message.poolPubKey);
        }
        try {
            for (var _d = __values(message.pubKeys), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                writer.uint32(26).string(v);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (!message.blockHeight.isZero()) {
            writer.uint32(32).int64(message.blockHeight);
        }
        try {
            for (var _f = __values(message.chains), _g = _f.next(); !_g.done; _g = _f.next()) {
                var v = _g.value;
                writer.uint32(42).string(v);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_2) throw e_2.error; }
        }
        try {
            for (var _h = __values(message.signers), _j = _h.next(); !_j.done; _j = _h.next()) {
                var v = _j.value;
                writer.uint32(50).string(v);
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_3) throw e_3.error; }
        }
        if (!message.majorityConsensusBlockHeight.isZero()) {
            writer.uint32(56).int64(message.majorityConsensusBlockHeight);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseTssVoter();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.id = reader.string();
                    break;
                case 2:
                    message.poolPubKey = reader.string();
                    break;
                case 3:
                    message.pubKeys.push(reader.string());
                    break;
                case 4:
                    message.blockHeight = reader.int64();
                    break;
                case 5:
                    message.chains.push(reader.string());
                    break;
                case 6:
                    message.signers.push(reader.string());
                    break;
                case 7:
                    message.majorityConsensusBlockHeight = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            id: isSet(object.id) ? String(object.id) : "",
            poolPubKey: isSet(object.poolPubKey) ? String(object.poolPubKey) : "",
            pubKeys: Array.isArray(object === null || object === void 0 ? void 0 : object.pubKeys)
                ? object.pubKeys.map(function (e) { return String(e); })
                : [],
            blockHeight: isSet(object.blockHeight)
                ? long_1.default.fromString(object.blockHeight)
                : long_1.default.ZERO,
            chains: Array.isArray(object === null || object === void 0 ? void 0 : object.chains)
                ? object.chains.map(function (e) { return String(e); })
                : [],
            signers: Array.isArray(object === null || object === void 0 ? void 0 : object.signers)
                ? object.signers.map(function (e) { return String(e); })
                : [],
            majorityConsensusBlockHeight: isSet(object.majorityConsensusBlockHeight)
                ? long_1.default.fromString(object.majorityConsensusBlockHeight)
                : long_1.default.ZERO,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.id !== undefined && (obj.id = message.id);
        message.poolPubKey !== undefined && (obj.poolPubKey = message.poolPubKey);
        if (message.pubKeys) {
            obj.pubKeys = message.pubKeys.map(function (e) { return e; });
        }
        else {
            obj.pubKeys = [];
        }
        message.blockHeight !== undefined &&
            (obj.blockHeight = (message.blockHeight || long_1.default.ZERO).toString());
        if (message.chains) {
            obj.chains = message.chains.map(function (e) { return e; });
        }
        else {
            obj.chains = [];
        }
        if (message.signers) {
            obj.signers = message.signers.map(function (e) { return e; });
        }
        else {
            obj.signers = [];
        }
        message.majorityConsensusBlockHeight !== undefined &&
            (obj.majorityConsensusBlockHeight = (message.majorityConsensusBlockHeight || long_1.default.ZERO).toString());
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseTssVoter();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : "";
        message.poolPubKey = (_b = object.poolPubKey) !== null && _b !== void 0 ? _b : "";
        message.pubKeys = ((_c = object.pubKeys) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.blockHeight =
            object.blockHeight !== undefined && object.blockHeight !== null
                ? long_1.default.fromValue(object.blockHeight)
                : long_1.default.ZERO;
        message.chains = ((_d = object.chains) === null || _d === void 0 ? void 0 : _d.map(function (e) { return e; })) || [];
        message.signers = ((_e = object.signers) === null || _e === void 0 ? void 0 : _e.map(function (e) { return e; })) || [];
        message.majorityConsensusBlockHeight =
            object.majorityConsensusBlockHeight !== undefined &&
                object.majorityConsensusBlockHeight !== null
                ? long_1.default.fromValue(object.majorityConsensusBlockHeight)
                : long_1.default.ZERO;
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
