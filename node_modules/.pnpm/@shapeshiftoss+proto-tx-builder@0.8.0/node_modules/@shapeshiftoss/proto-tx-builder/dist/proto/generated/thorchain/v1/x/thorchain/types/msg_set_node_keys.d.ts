import _m0 from "protobufjs/minimal";
import { PubKeySet } from "../../../../../thorchain/v1/common/common";
export interface MsgSetNodeKeys {
    pubKeySetSet?: PubKeySet;
    validatorConsPubKey: string;
    signer: Uint8Array;
}
export declare const MsgSetNodeKeys: {
    encode(message: MsgSetNodeKeys, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgSetNodeKeys;
    fromJSON(object: any): MsgSetNodeKeys;
    toJSON(message: MsgSetNodeKeys): unknown;
    fromPartial<I extends {
        pubKeySetSet?: {
            secp256k1?: string | undefined;
            ed25519?: string | undefined;
        } | undefined;
        validatorConsPubKey?: string | undefined;
        signer?: Uint8Array | undefined;
    } & {
        pubKeySetSet?: ({
            secp256k1?: string | undefined;
            ed25519?: string | undefined;
        } & {
            secp256k1?: string | undefined;
            ed25519?: string | undefined;
        } & Record<Exclude<keyof I["pubKeySetSet"], keyof PubKeySet>, never>) | undefined;
        validatorConsPubKey?: string | undefined;
        signer?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof MsgSetNodeKeys>, never>>(object: I): MsgSetNodeKeys;
};
