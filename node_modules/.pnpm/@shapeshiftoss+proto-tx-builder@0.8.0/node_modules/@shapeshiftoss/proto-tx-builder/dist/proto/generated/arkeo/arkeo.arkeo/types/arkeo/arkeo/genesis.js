"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = exports.protobufPackage = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var keeper_1 = require("./keeper");
var params_1 = require("./params");
exports.protobufPackage = "arkeo.arkeo";
function createBaseGenesisState() {
    return {
        params: undefined,
        providers: [],
        contracts: [],
        nextContractId: 0,
        contractExpirationSets: [],
        userContractSets: [],
    };
}
exports.GenesisState = {
    encode: function (message, writer) {
        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.params !== undefined) {
            params_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        try {
            for (var _e = __values(message.providers), _f = _e.next(); !_f.done; _f = _e.next()) {
                var v = _f.value;
                keeper_1.Provider.encode(v, writer.uint32(18).fork()).ldelim();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_a = _e.return)) _a.call(_e);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _g = __values(message.contracts), _h = _g.next(); !_h.done; _h = _g.next()) {
                var v = _h.value;
                keeper_1.Contract.encode(v, writer.uint32(26).fork()).ldelim();
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
            }
            finally { if (e_2) throw e_2.error; }
        }
        if (message.nextContractId !== 0) {
            writer.uint32(32).uint64(message.nextContractId);
        }
        try {
            for (var _j = __values(message.contractExpirationSets), _k = _j.next(); !_k.done; _k = _j.next()) {
                var v = _k.value;
                keeper_1.ContractExpirationSet.encode(v, writer.uint32(42).fork()).ldelim();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_k && !_k.done && (_c = _j.return)) _c.call(_j);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _l = __values(message.userContractSets), _m = _l.next(); !_m.done; _m = _l.next()) {
                var v = _m.value;
                keeper_1.UserContractSet.encode(v, writer.uint32(50).fork()).ldelim();
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_m && !_m.done && (_d = _l.return)) _d.call(_l);
            }
            finally { if (e_4) throw e_4.error; }
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseGenesisState();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = params_1.Params.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.providers.push(keeper_1.Provider.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.contracts.push(keeper_1.Contract.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.nextContractId = longToNumber(reader.uint64());
                    break;
                case 5:
                    message.contractExpirationSets.push(keeper_1.ContractExpirationSet.decode(reader, reader.uint32()));
                    break;
                case 6:
                    message.userContractSets.push(keeper_1.UserContractSet.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            params: isSet(object.params) ? params_1.Params.fromJSON(object.params) : undefined,
            providers: Array.isArray(object === null || object === void 0 ? void 0 : object.providers) ? object.providers.map(function (e) { return keeper_1.Provider.fromJSON(e); }) : [],
            contracts: Array.isArray(object === null || object === void 0 ? void 0 : object.contracts) ? object.contracts.map(function (e) { return keeper_1.Contract.fromJSON(e); }) : [],
            nextContractId: isSet(object.nextContractId) ? Number(object.nextContractId) : 0,
            contractExpirationSets: Array.isArray(object === null || object === void 0 ? void 0 : object.contractExpirationSets)
                ? object.contractExpirationSets.map(function (e) { return keeper_1.ContractExpirationSet.fromJSON(e); })
                : [],
            userContractSets: Array.isArray(object === null || object === void 0 ? void 0 : object.userContractSets)
                ? object.userContractSets.map(function (e) { return keeper_1.UserContractSet.fromJSON(e); })
                : [],
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.params !== undefined && (obj.params = message.params ? params_1.Params.toJSON(message.params) : undefined);
        if (message.providers) {
            obj.providers = message.providers.map(function (e) { return e ? keeper_1.Provider.toJSON(e) : undefined; });
        }
        else {
            obj.providers = [];
        }
        if (message.contracts) {
            obj.contracts = message.contracts.map(function (e) { return e ? keeper_1.Contract.toJSON(e) : undefined; });
        }
        else {
            obj.contracts = [];
        }
        message.nextContractId !== undefined && (obj.nextContractId = Math.round(message.nextContractId));
        if (message.contractExpirationSets) {
            obj.contractExpirationSets = message.contractExpirationSets.map(function (e) {
                return e ? keeper_1.ContractExpirationSet.toJSON(e) : undefined;
            });
        }
        else {
            obj.contractExpirationSets = [];
        }
        if (message.userContractSets) {
            obj.userContractSets = message.userContractSets.map(function (e) { return e ? keeper_1.UserContractSet.toJSON(e) : undefined; });
        }
        else {
            obj.userContractSets = [];
        }
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e;
        var message = createBaseGenesisState();
        message.params = (object.params !== undefined && object.params !== null)
            ? params_1.Params.fromPartial(object.params)
            : undefined;
        message.providers = ((_a = object.providers) === null || _a === void 0 ? void 0 : _a.map(function (e) { return keeper_1.Provider.fromPartial(e); })) || [];
        message.contracts = ((_b = object.contracts) === null || _b === void 0 ? void 0 : _b.map(function (e) { return keeper_1.Contract.fromPartial(e); })) || [];
        message.nextContractId = (_c = object.nextContractId) !== null && _c !== void 0 ? _c : 0;
        message.contractExpirationSets = ((_d = object.contractExpirationSets) === null || _d === void 0 ? void 0 : _d.map(function (e) { return keeper_1.ContractExpirationSet.fromPartial(e); }))
            || [];
        message.userContractSets = ((_e = object.userContractSets) === null || _e === void 0 ? void 0 : _e.map(function (e) { return keeper_1.UserContractSet.fromPartial(e); })) || [];
        return message;
    },
};
var globalThis = (function () {
    if (typeof globalThis !== "undefined") {
        return globalThis;
    }
    if (typeof self !== "undefined") {
        return self;
    }
    if (typeof window !== "undefined") {
        return window;
    }
    if (typeof global !== "undefined") {
        return global;
    }
    throw "Unable to locate global object";
})();
function longToNumber(long) {
    if (long.gt(Number.MAX_SAFE_INTEGER)) {
        throw new globalThis.Error("Value is larger than Number.MAX_SAFE_INTEGER");
    }
    return long.toNumber();
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
