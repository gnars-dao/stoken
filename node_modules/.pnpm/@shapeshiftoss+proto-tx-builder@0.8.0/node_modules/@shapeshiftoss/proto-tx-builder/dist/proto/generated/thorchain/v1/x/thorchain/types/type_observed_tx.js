"use strict";
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObservedTxVoter = exports.ObservedTx = exports.statusToJSON = exports.statusFromJSON = exports.Status = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var common_1 = require("../../../../../thorchain/v1/common/common");
var type_tx_out_1 = require("../../../../../thorchain/v1/x/thorchain/types/type_tx_out");
var Status;
(function (Status) {
    Status[Status["incomplete"] = 0] = "incomplete";
    Status[Status["done"] = 1] = "done";
    Status[Status["reverted"] = 2] = "reverted";
    Status[Status["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(Status = exports.Status || (exports.Status = {}));
function statusFromJSON(object) {
    switch (object) {
        case 0:
        case "incomplete":
            return Status.incomplete;
        case 1:
        case "done":
            return Status.done;
        case 2:
        case "reverted":
            return Status.reverted;
        case -1:
        case "UNRECOGNIZED":
        default:
            return Status.UNRECOGNIZED;
    }
}
exports.statusFromJSON = statusFromJSON;
function statusToJSON(object) {
    switch (object) {
        case Status.incomplete:
            return "incomplete";
        case Status.done:
            return "done";
        case Status.reverted:
            return "reverted";
        default:
            return "UNKNOWN";
    }
}
exports.statusToJSON = statusToJSON;
function createBaseObservedTx() {
    return {
        tx: undefined,
        status: 0,
        outHashes: [],
        blockHeight: long_1.default.ZERO,
        signers: [],
        observedPubKey: "",
        keysignMs: long_1.default.ZERO,
        finaliseHeight: long_1.default.ZERO,
    };
}
exports.ObservedTx = {
    encode: function (message, writer) {
        var e_1, _a, e_2, _b;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.tx !== undefined) {
            common_1.Tx.encode(message.tx, writer.uint32(10).fork()).ldelim();
        }
        if (message.status !== 0) {
            writer.uint32(16).int32(message.status);
        }
        try {
            for (var _c = __values(message.outHashes), _d = _c.next(); !_d.done; _d = _c.next()) {
                var v = _d.value;
                writer.uint32(26).string(v);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (!message.blockHeight.isZero()) {
            writer.uint32(32).int64(message.blockHeight);
        }
        try {
            for (var _e = __values(message.signers), _f = _e.next(); !_f.done; _f = _e.next()) {
                var v = _f.value;
                writer.uint32(42).string(v);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        if (message.observedPubKey !== "") {
            writer.uint32(50).string(message.observedPubKey);
        }
        if (!message.keysignMs.isZero()) {
            writer.uint32(56).int64(message.keysignMs);
        }
        if (!message.finaliseHeight.isZero()) {
            writer.uint32(64).int64(message.finaliseHeight);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseObservedTx();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.tx = common_1.Tx.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.status = reader.int32();
                    break;
                case 3:
                    message.outHashes.push(reader.string());
                    break;
                case 4:
                    message.blockHeight = reader.int64();
                    break;
                case 5:
                    message.signers.push(reader.string());
                    break;
                case 6:
                    message.observedPubKey = reader.string();
                    break;
                case 7:
                    message.keysignMs = reader.int64();
                    break;
                case 8:
                    message.finaliseHeight = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            tx: isSet(object.tx) ? common_1.Tx.fromJSON(object.tx) : undefined,
            status: isSet(object.status) ? statusFromJSON(object.status) : 0,
            outHashes: Array.isArray(object === null || object === void 0 ? void 0 : object.outHashes)
                ? object.outHashes.map(function (e) { return String(e); })
                : [],
            blockHeight: isSet(object.blockHeight)
                ? long_1.default.fromString(object.blockHeight)
                : long_1.default.ZERO,
            signers: Array.isArray(object === null || object === void 0 ? void 0 : object.signers)
                ? object.signers.map(function (e) { return String(e); })
                : [],
            observedPubKey: isSet(object.observedPubKey)
                ? String(object.observedPubKey)
                : "",
            keysignMs: isSet(object.keysignMs)
                ? long_1.default.fromString(object.keysignMs)
                : long_1.default.ZERO,
            finaliseHeight: isSet(object.finaliseHeight)
                ? long_1.default.fromString(object.finaliseHeight)
                : long_1.default.ZERO,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.tx !== undefined &&
            (obj.tx = message.tx ? common_1.Tx.toJSON(message.tx) : undefined);
        message.status !== undefined && (obj.status = statusToJSON(message.status));
        if (message.outHashes) {
            obj.outHashes = message.outHashes.map(function (e) { return e; });
        }
        else {
            obj.outHashes = [];
        }
        message.blockHeight !== undefined &&
            (obj.blockHeight = (message.blockHeight || long_1.default.ZERO).toString());
        if (message.signers) {
            obj.signers = message.signers.map(function (e) { return e; });
        }
        else {
            obj.signers = [];
        }
        message.observedPubKey !== undefined &&
            (obj.observedPubKey = message.observedPubKey);
        message.keysignMs !== undefined &&
            (obj.keysignMs = (message.keysignMs || long_1.default.ZERO).toString());
        message.finaliseHeight !== undefined &&
            (obj.finaliseHeight = (message.finaliseHeight || long_1.default.ZERO).toString());
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d;
        var message = createBaseObservedTx();
        message.tx =
            object.tx !== undefined && object.tx !== null
                ? common_1.Tx.fromPartial(object.tx)
                : undefined;
        message.status = (_a = object.status) !== null && _a !== void 0 ? _a : 0;
        message.outHashes = ((_b = object.outHashes) === null || _b === void 0 ? void 0 : _b.map(function (e) { return e; })) || [];
        message.blockHeight =
            object.blockHeight !== undefined && object.blockHeight !== null
                ? long_1.default.fromValue(object.blockHeight)
                : long_1.default.ZERO;
        message.signers = ((_c = object.signers) === null || _c === void 0 ? void 0 : _c.map(function (e) { return e; })) || [];
        message.observedPubKey = (_d = object.observedPubKey) !== null && _d !== void 0 ? _d : "";
        message.keysignMs =
            object.keysignMs !== undefined && object.keysignMs !== null
                ? long_1.default.fromValue(object.keysignMs)
                : long_1.default.ZERO;
        message.finaliseHeight =
            object.finaliseHeight !== undefined && object.finaliseHeight !== null
                ? long_1.default.fromValue(object.finaliseHeight)
                : long_1.default.ZERO;
        return message;
    },
};
function createBaseObservedTxVoter() {
    return {
        txId: "",
        tx: undefined,
        height: long_1.default.ZERO,
        txs: [],
        actions: [],
        outTxs: [],
        finalisedHeight: long_1.default.ZERO,
        updatedVault: false,
        reverted: false,
        outboundHeight: long_1.default.ZERO,
    };
}
exports.ObservedTxVoter = {
    encode: function (message, writer) {
        var e_3, _a, e_4, _b, e_5, _c;
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (message.txId !== "") {
            writer.uint32(10).string(message.txId);
        }
        if (message.tx !== undefined) {
            exports.ObservedTx.encode(message.tx, writer.uint32(18).fork()).ldelim();
        }
        if (!message.height.isZero()) {
            writer.uint32(24).int64(message.height);
        }
        try {
            for (var _d = __values(message.txs), _e = _d.next(); !_e.done; _e = _d.next()) {
                var v = _e.value;
                exports.ObservedTx.encode(v, writer.uint32(34).fork()).ldelim();
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_3) throw e_3.error; }
        }
        try {
            for (var _f = __values(message.actions), _g = _f.next(); !_g.done; _g = _f.next()) {
                var v = _g.value;
                type_tx_out_1.TxOutItem.encode(v, writer.uint32(42).fork()).ldelim();
            }
        }
        catch (e_4_1) { e_4 = { error: e_4_1 }; }
        finally {
            try {
                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
            }
            finally { if (e_4) throw e_4.error; }
        }
        try {
            for (var _h = __values(message.outTxs), _j = _h.next(); !_j.done; _j = _h.next()) {
                var v = _j.value;
                common_1.Tx.encode(v, writer.uint32(50).fork()).ldelim();
            }
        }
        catch (e_5_1) { e_5 = { error: e_5_1 }; }
        finally {
            try {
                if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
            }
            finally { if (e_5) throw e_5.error; }
        }
        if (!message.finalisedHeight.isZero()) {
            writer.uint32(56).int64(message.finalisedHeight);
        }
        if (message.updatedVault === true) {
            writer.uint32(64).bool(message.updatedVault);
        }
        if (message.reverted === true) {
            writer.uint32(72).bool(message.reverted);
        }
        if (!message.outboundHeight.isZero()) {
            writer.uint32(80).int64(message.outboundHeight);
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseObservedTxVoter();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.txId = reader.string();
                    break;
                case 2:
                    message.tx = exports.ObservedTx.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.height = reader.int64();
                    break;
                case 4:
                    message.txs.push(exports.ObservedTx.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.actions.push(type_tx_out_1.TxOutItem.decode(reader, reader.uint32()));
                    break;
                case 6:
                    message.outTxs.push(common_1.Tx.decode(reader, reader.uint32()));
                    break;
                case 7:
                    message.finalisedHeight = reader.int64();
                    break;
                case 8:
                    message.updatedVault = reader.bool();
                    break;
                case 9:
                    message.reverted = reader.bool();
                    break;
                case 10:
                    message.outboundHeight = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            txId: isSet(object.txId) ? String(object.txId) : "",
            tx: isSet(object.tx) ? exports.ObservedTx.fromJSON(object.tx) : undefined,
            height: isSet(object.height) ? long_1.default.fromString(object.height) : long_1.default.ZERO,
            txs: Array.isArray(object === null || object === void 0 ? void 0 : object.txs)
                ? object.txs.map(function (e) { return exports.ObservedTx.fromJSON(e); })
                : [],
            actions: Array.isArray(object === null || object === void 0 ? void 0 : object.actions)
                ? object.actions.map(function (e) { return type_tx_out_1.TxOutItem.fromJSON(e); })
                : [],
            outTxs: Array.isArray(object === null || object === void 0 ? void 0 : object.outTxs)
                ? object.outTxs.map(function (e) { return common_1.Tx.fromJSON(e); })
                : [],
            finalisedHeight: isSet(object.finalisedHeight)
                ? long_1.default.fromString(object.finalisedHeight)
                : long_1.default.ZERO,
            updatedVault: isSet(object.updatedVault)
                ? Boolean(object.updatedVault)
                : false,
            reverted: isSet(object.reverted) ? Boolean(object.reverted) : false,
            outboundHeight: isSet(object.outboundHeight)
                ? long_1.default.fromString(object.outboundHeight)
                : long_1.default.ZERO,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.txId !== undefined && (obj.txId = message.txId);
        message.tx !== undefined &&
            (obj.tx = message.tx ? exports.ObservedTx.toJSON(message.tx) : undefined);
        message.height !== undefined &&
            (obj.height = (message.height || long_1.default.ZERO).toString());
        if (message.txs) {
            obj.txs = message.txs.map(function (e) { return (e ? exports.ObservedTx.toJSON(e) : undefined); });
        }
        else {
            obj.txs = [];
        }
        if (message.actions) {
            obj.actions = message.actions.map(function (e) {
                return e ? type_tx_out_1.TxOutItem.toJSON(e) : undefined;
            });
        }
        else {
            obj.actions = [];
        }
        if (message.outTxs) {
            obj.outTxs = message.outTxs.map(function (e) { return (e ? common_1.Tx.toJSON(e) : undefined); });
        }
        else {
            obj.outTxs = [];
        }
        message.finalisedHeight !== undefined &&
            (obj.finalisedHeight = (message.finalisedHeight || long_1.default.ZERO).toString());
        message.updatedVault !== undefined &&
            (obj.updatedVault = message.updatedVault);
        message.reverted !== undefined && (obj.reverted = message.reverted);
        message.outboundHeight !== undefined &&
            (obj.outboundHeight = (message.outboundHeight || long_1.default.ZERO).toString());
        return obj;
    },
    fromPartial: function (object) {
        var _a, _b, _c, _d, _e, _f;
        var message = createBaseObservedTxVoter();
        message.txId = (_a = object.txId) !== null && _a !== void 0 ? _a : "";
        message.tx =
            object.tx !== undefined && object.tx !== null
                ? exports.ObservedTx.fromPartial(object.tx)
                : undefined;
        message.height =
            object.height !== undefined && object.height !== null
                ? long_1.default.fromValue(object.height)
                : long_1.default.ZERO;
        message.txs = ((_b = object.txs) === null || _b === void 0 ? void 0 : _b.map(function (e) { return exports.ObservedTx.fromPartial(e); })) || [];
        message.actions =
            ((_c = object.actions) === null || _c === void 0 ? void 0 : _c.map(function (e) { return type_tx_out_1.TxOutItem.fromPartial(e); })) || [];
        message.outTxs = ((_d = object.outTxs) === null || _d === void 0 ? void 0 : _d.map(function (e) { return common_1.Tx.fromPartial(e); })) || [];
        message.finalisedHeight =
            object.finalisedHeight !== undefined && object.finalisedHeight !== null
                ? long_1.default.fromValue(object.finalisedHeight)
                : long_1.default.ZERO;
        message.updatedVault = (_e = object.updatedVault) !== null && _e !== void 0 ? _e : false;
        message.reverted = (_f = object.reverted) !== null && _f !== void 0 ? _f : false;
        message.outboundHeight =
            object.outboundHeight !== undefined && object.outboundHeight !== null
                ? long_1.default.fromValue(object.outboundHeight)
                : long_1.default.ZERO;
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
