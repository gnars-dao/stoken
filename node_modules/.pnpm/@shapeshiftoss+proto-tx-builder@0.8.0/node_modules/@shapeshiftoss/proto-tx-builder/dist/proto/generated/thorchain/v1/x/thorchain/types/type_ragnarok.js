"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RagnarokWithdrawPosition = void 0;
/* eslint-disable */
var long_1 = __importDefault(require("long"));
var minimal_1 = __importDefault(require("protobufjs/minimal"));
var common_1 = require("../../../../../thorchain/v1/common/common");
function createBaseRagnarokWithdrawPosition() {
    return { number: long_1.default.ZERO, pool: undefined };
}
exports.RagnarokWithdrawPosition = {
    encode: function (message, writer) {
        if (writer === void 0) { writer = minimal_1.default.Writer.create(); }
        if (!message.number.isZero()) {
            writer.uint32(8).int64(message.number);
        }
        if (message.pool !== undefined) {
            common_1.Asset.encode(message.pool, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode: function (input, length) {
        var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        var end = length === undefined ? reader.len : reader.pos + length;
        var message = createBaseRagnarokWithdrawPosition();
        while (reader.pos < end) {
            var tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.number = reader.int64();
                    break;
                case 2:
                    message.pool = common_1.Asset.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON: function (object) {
        return {
            number: isSet(object.number) ? long_1.default.fromString(object.number) : long_1.default.ZERO,
            pool: isSet(object.pool) ? common_1.Asset.fromJSON(object.pool) : undefined,
        };
    },
    toJSON: function (message) {
        var obj = {};
        message.number !== undefined &&
            (obj.number = (message.number || long_1.default.ZERO).toString());
        message.pool !== undefined &&
            (obj.pool = message.pool ? common_1.Asset.toJSON(message.pool) : undefined);
        return obj;
    },
    fromPartial: function (object) {
        var message = createBaseRagnarokWithdrawPosition();
        message.number =
            object.number !== undefined && object.number !== null
                ? long_1.default.fromValue(object.number)
                : long_1.default.ZERO;
        message.pool =
            object.pool !== undefined && object.pool !== null
                ? common_1.Asset.fromPartial(object.pool)
                : undefined;
        return message;
    },
};
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
