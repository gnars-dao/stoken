import _m0 from "protobufjs/minimal";
import { PageRequest, PageResponse } from "../../cosmos/base/query/v1beta1/pagination";
import { Contract, Provider } from "./keeper";
import { Params } from "./params";
export declare const protobufPackage = "arkeo.arkeo";
/** QueryParamsRequest is request type for the Query/Params RPC method. */
export interface QueryParamsRequest {
}
/** QueryParamsResponse is response type for the Query/Params RPC method. */
export interface QueryParamsResponse {
    /** params holds all the parameters of this module. */
    params: Params | undefined;
}
export interface QueryFetchProviderRequest {
    pubkey: string;
    service: string;
}
export interface QueryFetchProviderResponse {
    provider: Provider | undefined;
}
export interface QueryAllProviderRequest {
    pagination: PageRequest | undefined;
}
export interface QueryAllProviderResponse {
    provider: Provider[];
    pagination: PageResponse | undefined;
}
export interface QueryFetchContractRequest {
    contractId: number;
}
export interface QueryFetchContractResponse {
    contract: Contract | undefined;
}
export interface QueryAllContractRequest {
    pagination: PageRequest | undefined;
}
export interface QueryAllContractResponse {
    contract: Contract[];
    pagination: PageResponse | undefined;
}
/** this line is used by starport scaffolding # 3 */
export interface QueryActiveContractRequest {
    provider: string;
    service: string;
    spender: string;
}
export interface QueryActiveContractResponse {
    contract: Contract | undefined;
}
export declare const QueryParamsRequest: {
    encode(_: QueryParamsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryParamsRequest;
    fromJSON(_: any): QueryParamsRequest;
    toJSON(_: QueryParamsRequest): unknown;
    fromPartial<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(_: I): QueryParamsRequest;
};
export declare const QueryParamsResponse: {
    encode(message: QueryParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryParamsResponse;
    fromJSON(object: any): QueryParamsResponse;
    toJSON(message: QueryParamsResponse): unknown;
    fromPartial<I extends {
        params?: {} | undefined;
    } & {
        params?: ({} & {} & { [K in Exclude<keyof I["params"], never>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "params">]: never; }>(object: I): QueryParamsResponse;
};
export declare const QueryFetchProviderRequest: {
    encode(message: QueryFetchProviderRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryFetchProviderRequest;
    fromJSON(object: any): QueryFetchProviderRequest;
    toJSON(message: QueryFetchProviderRequest): unknown;
    fromPartial<I extends {
        pubkey?: string | undefined;
        service?: string | undefined;
    } & {
        pubkey?: string | undefined;
        service?: string | undefined;
    } & { [K in Exclude<keyof I, keyof QueryFetchProviderRequest>]: never; }>(object: I): QueryFetchProviderRequest;
};
export declare const QueryFetchProviderResponse: {
    encode(message: QueryFetchProviderResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryFetchProviderResponse;
    fromJSON(object: any): QueryFetchProviderResponse;
    toJSON(message: QueryFetchProviderResponse): unknown;
    fromPartial<I extends {
        provider?: {
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            payAsYouGoRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        } | undefined;
    } & {
        provider?: ({
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            payAsYouGoRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        } & {
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & { [K in Exclude<keyof I["provider"]["subscriptionRate"][number], keyof import("../../cosmos/base/v1beta1/coin").Coin>]: never; })[] & { [K_1 in Exclude<keyof I["provider"]["subscriptionRate"], keyof {
                denom?: string | undefined;
                amount?: string | undefined;
            }[]>]: never; }) | undefined;
            payAsYouGoRate?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & { [K_2 in Exclude<keyof I["provider"]["payAsYouGoRate"][number], keyof import("../../cosmos/base/v1beta1/coin").Coin>]: never; })[] & { [K_3 in Exclude<keyof I["provider"]["payAsYouGoRate"], keyof {
                denom?: string | undefined;
                amount?: string | undefined;
            }[]>]: never; }) | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        } & { [K_4 in Exclude<keyof I["provider"], keyof Provider>]: never; }) | undefined;
    } & { [K_5 in Exclude<keyof I, "provider">]: never; }>(object: I): QueryFetchProviderResponse;
};
export declare const QueryAllProviderRequest: {
    encode(message: QueryAllProviderRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryAllProviderRequest;
    fromJSON(object: any): QueryAllProviderRequest;
    toJSON(message: QueryAllProviderRequest): unknown;
    fromPartial<I extends {
        pagination?: {
            key?: Uint8Array | undefined;
            offset?: number | undefined;
            limit?: number | undefined;
            countTotal?: boolean | undefined;
            reverse?: boolean | undefined;
        } | undefined;
    } & {
        pagination?: ({
            key?: Uint8Array | undefined;
            offset?: number | undefined;
            limit?: number | undefined;
            countTotal?: boolean | undefined;
            reverse?: boolean | undefined;
        } & {
            key?: Uint8Array | undefined;
            offset?: number | undefined;
            limit?: number | undefined;
            countTotal?: boolean | undefined;
            reverse?: boolean | undefined;
        } & { [K in Exclude<keyof I["pagination"], keyof PageRequest>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "pagination">]: never; }>(object: I): QueryAllProviderRequest;
};
export declare const QueryAllProviderResponse: {
    encode(message: QueryAllProviderResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryAllProviderResponse;
    fromJSON(object: any): QueryAllProviderResponse;
    toJSON(message: QueryAllProviderResponse): unknown;
    fromPartial<I extends {
        provider?: {
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            payAsYouGoRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        }[] | undefined;
        pagination?: {
            nextKey?: Uint8Array | undefined;
            total?: number | undefined;
        } | undefined;
    } & {
        provider?: ({
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            payAsYouGoRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        }[] & ({
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            payAsYouGoRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        } & {
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & { [K in Exclude<keyof I["provider"][number]["subscriptionRate"][number], keyof import("../../cosmos/base/v1beta1/coin").Coin>]: never; })[] & { [K_1 in Exclude<keyof I["provider"][number]["subscriptionRate"], keyof {
                denom?: string | undefined;
                amount?: string | undefined;
            }[]>]: never; }) | undefined;
            payAsYouGoRate?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            }[] & ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & { [K_2 in Exclude<keyof I["provider"][number]["payAsYouGoRate"][number], keyof import("../../cosmos/base/v1beta1/coin").Coin>]: never; })[] & { [K_3 in Exclude<keyof I["provider"][number]["payAsYouGoRate"], keyof {
                denom?: string | undefined;
                amount?: string | undefined;
            }[]>]: never; }) | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        } & { [K_4 in Exclude<keyof I["provider"][number], keyof Provider>]: never; })[] & { [K_5 in Exclude<keyof I["provider"], keyof {
            pubKey?: Uint8Array | undefined;
            service?: number | undefined;
            metadataUri?: string | undefined;
            metadataNonce?: number | undefined;
            status?: import("./keeper").ProviderStatus | undefined;
            minContractDuration?: number | undefined;
            maxContractDuration?: number | undefined;
            subscriptionRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            payAsYouGoRate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            }[] | undefined;
            bond?: string | undefined;
            lastUpdate?: number | undefined;
            settlementDuration?: number | undefined;
        }[]>]: never; }) | undefined;
        pagination?: ({
            nextKey?: Uint8Array | undefined;
            total?: number | undefined;
        } & {
            nextKey?: Uint8Array | undefined;
            total?: number | undefined;
        } & { [K_6 in Exclude<keyof I["pagination"], keyof PageResponse>]: never; }) | undefined;
    } & { [K_7 in Exclude<keyof I, keyof QueryAllProviderResponse>]: never; }>(object: I): QueryAllProviderResponse;
};
export declare const QueryFetchContractRequest: {
    encode(message: QueryFetchContractRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryFetchContractRequest;
    fromJSON(object: any): QueryFetchContractRequest;
    toJSON(message: QueryFetchContractRequest): unknown;
    fromPartial<I extends {
        contractId?: number | undefined;
    } & {
        contractId?: number | undefined;
    } & { [K in Exclude<keyof I, "contractId">]: never; }>(object: I): QueryFetchContractRequest;
};
export declare const QueryFetchContractResponse: {
    encode(message: QueryFetchContractResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryFetchContractResponse;
    fromJSON(object: any): QueryFetchContractResponse;
    toJSON(message: QueryFetchContractResponse): unknown;
    fromPartial<I extends {
        contract?: {
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } | undefined;
    } & {
        contract?: ({
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } & {
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & { [K in Exclude<keyof I["contract"]["rate"], keyof import("../../cosmos/base/v1beta1/coin").Coin>]: never; }) | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } & { [K_1 in Exclude<keyof I["contract"], keyof Contract>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "contract">]: never; }>(object: I): QueryFetchContractResponse;
};
export declare const QueryAllContractRequest: {
    encode(message: QueryAllContractRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryAllContractRequest;
    fromJSON(object: any): QueryAllContractRequest;
    toJSON(message: QueryAllContractRequest): unknown;
    fromPartial<I extends {
        pagination?: {
            key?: Uint8Array | undefined;
            offset?: number | undefined;
            limit?: number | undefined;
            countTotal?: boolean | undefined;
            reverse?: boolean | undefined;
        } | undefined;
    } & {
        pagination?: ({
            key?: Uint8Array | undefined;
            offset?: number | undefined;
            limit?: number | undefined;
            countTotal?: boolean | undefined;
            reverse?: boolean | undefined;
        } & {
            key?: Uint8Array | undefined;
            offset?: number | undefined;
            limit?: number | undefined;
            countTotal?: boolean | undefined;
            reverse?: boolean | undefined;
        } & { [K in Exclude<keyof I["pagination"], keyof PageRequest>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, "pagination">]: never; }>(object: I): QueryAllContractRequest;
};
export declare const QueryAllContractResponse: {
    encode(message: QueryAllContractResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryAllContractResponse;
    fromJSON(object: any): QueryAllContractResponse;
    toJSON(message: QueryAllContractResponse): unknown;
    fromPartial<I extends {
        contract?: {
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        }[] | undefined;
        pagination?: {
            nextKey?: Uint8Array | undefined;
            total?: number | undefined;
        } | undefined;
    } & {
        contract?: ({
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        }[] & ({
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } & {
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & { [K in Exclude<keyof I["contract"][number]["rate"], keyof import("../../cosmos/base/v1beta1/coin").Coin>]: never; }) | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } & { [K_1 in Exclude<keyof I["contract"][number], keyof Contract>]: never; })[] & { [K_2 in Exclude<keyof I["contract"], keyof {
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        }[]>]: never; }) | undefined;
        pagination?: ({
            nextKey?: Uint8Array | undefined;
            total?: number | undefined;
        } & {
            nextKey?: Uint8Array | undefined;
            total?: number | undefined;
        } & { [K_3 in Exclude<keyof I["pagination"], keyof PageResponse>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, keyof QueryAllContractResponse>]: never; }>(object: I): QueryAllContractResponse;
};
export declare const QueryActiveContractRequest: {
    encode(message: QueryActiveContractRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryActiveContractRequest;
    fromJSON(object: any): QueryActiveContractRequest;
    toJSON(message: QueryActiveContractRequest): unknown;
    fromPartial<I extends {
        provider?: string | undefined;
        service?: string | undefined;
        spender?: string | undefined;
    } & {
        provider?: string | undefined;
        service?: string | undefined;
        spender?: string | undefined;
    } & { [K in Exclude<keyof I, keyof QueryActiveContractRequest>]: never; }>(object: I): QueryActiveContractRequest;
};
export declare const QueryActiveContractResponse: {
    encode(message: QueryActiveContractResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): QueryActiveContractResponse;
    fromJSON(object: any): QueryActiveContractResponse;
    toJSON(message: QueryActiveContractResponse): unknown;
    fromPartial<I extends {
        contract?: {
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } | undefined;
    } & {
        contract?: ({
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: {
                denom?: string | undefined;
                amount?: string | undefined;
            } | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } & {
            provider?: Uint8Array | undefined;
            service?: number | undefined;
            client?: Uint8Array | undefined;
            delegate?: Uint8Array | undefined;
            type?: import("./keeper").ContractType | undefined;
            height?: number | undefined;
            duration?: number | undefined;
            rate?: ({
                denom?: string | undefined;
                amount?: string | undefined;
            } & {
                denom?: string | undefined;
                amount?: string | undefined;
            } & { [K in Exclude<keyof I["contract"]["rate"], keyof import("../../cosmos/base/v1beta1/coin").Coin>]: never; }) | undefined;
            deposit?: string | undefined;
            paid?: string | undefined;
            nonce?: number | undefined;
            settlementHeight?: number | undefined;
            id?: number | undefined;
            settlementDuration?: number | undefined;
            authorization?: import("./keeper").ContractAuthorization | undefined;
        } & { [K_1 in Exclude<keyof I["contract"], keyof Contract>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "contract">]: never; }>(object: I): QueryActiveContractResponse;
};
/** Query defines the gRPC querier service. */
export interface Query {
    /** Parameters queries the parameters of the module. */
    Params(request: QueryParamsRequest): Promise<QueryParamsResponse>;
    FetchProvider(request: QueryFetchProviderRequest): Promise<QueryFetchProviderResponse>;
    ProviderAll(request: QueryAllProviderRequest): Promise<QueryAllProviderResponse>;
    FetchContract(request: QueryFetchContractRequest): Promise<QueryFetchContractResponse>;
    ContractAll(request: QueryAllContractRequest): Promise<QueryAllContractResponse>;
    /** Queries an active contract by spender, provider and service. */
    ActiveContract(request: QueryActiveContractRequest): Promise<QueryActiveContractResponse>;
}
export declare class QueryClientImpl implements Query {
    private readonly rpc;
    constructor(rpc: Rpc);
    Params(request: QueryParamsRequest): Promise<QueryParamsResponse>;
    FetchProvider(request: QueryFetchProviderRequest): Promise<QueryFetchProviderResponse>;
    ProviderAll(request: QueryAllProviderRequest): Promise<QueryAllProviderResponse>;
    FetchContract(request: QueryFetchContractRequest): Promise<QueryFetchContractResponse>;
    ContractAll(request: QueryAllContractRequest): Promise<QueryAllContractResponse>;
    ActiveContract(request: QueryActiveContractRequest): Promise<QueryActiveContractResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
