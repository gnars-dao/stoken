import { BIP32Path, HDWallet, HDWalletInfo, PathDescription } from "./wallet";
export interface OsmosisGetAddress {
    addressNList: BIP32Path;
    showDisplay?: boolean;
}
export declare namespace Osmosis {
    export interface Msg {
        type: string;
        value: any;
    }
    export type Coins = Coin[];
    export interface Coin {
        denom: string;
        amount: string;
    }
    export interface StdFee {
        amount: Coins;
        gas: string;
    }
    namespace crypto {
        interface PubKey {
            type: string;
            value: string;
        }
    }
    export interface StdSignature {
        pub_key?: crypto.PubKey;
        signature: string;
    }
    export interface StdTx {
        msg: Msg[];
        fee: StdFee;
        signatures: null | StdSignature[];
        memo: string;
    }
    export {};
}
export interface OsmosisTx {
    msg: Osmosis.Msg[];
    fee: Osmosis.StdFee;
    signatures: null | Osmosis.StdSignature[];
    memo: string;
}
export interface OsmosisSignTx {
    addressNList: BIP32Path;
    tx: Osmosis.StdTx;
    chain_id: string;
    account_number: string;
    sequence: string;
    fee?: number;
}
export declare type OsmosisSignedTx = OsmosisTx;
export interface OsmosisGetAccountPaths {
    accountIdx: number;
}
export interface OsmosisAccountPath {
    addressNList: BIP32Path;
}
export interface OsmosisWalletInfo extends HDWalletInfo {
    readonly _supportsOsmosisInfo: boolean;
    /**
     * Returns a list of bip32 paths for a given account index in preferred order
     * from most to least preferred.
     */
    osmosisGetAccountPaths(msg: OsmosisGetAccountPaths): Array<OsmosisAccountPath>;
    /**
     * Returns the "next" account path, if any.
     */
    osmosisNextAccountPath(msg: OsmosisAccountPath): OsmosisAccountPath | undefined;
}
export interface OsmosisWallet extends OsmosisWalletInfo, HDWallet {
    readonly _supportsOsmosis: boolean;
    osmosisGetAddress(msg: OsmosisGetAddress): Promise<string | null>;
    osmosisSignTx(msg: OsmosisSignTx): Promise<OsmosisSignedTx | null>;
}
export declare function osmosisDescribePath(path: BIP32Path): PathDescription;
//# sourceMappingURL=osmosis.d.ts.map