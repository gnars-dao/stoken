import { Json, JsonRpcSuccess, AssertionErrorConstructor } from '@metamask/utils';
import { Infer } from 'superstruct';
export declare const RpcOriginsStruct: import("superstruct").Struct<{
    dapps?: boolean | undefined;
    snaps?: boolean | undefined;
}, {
    dapps: import("superstruct").Struct<boolean | undefined, null>;
    snaps: import("superstruct").Struct<boolean | undefined, null>;
}>;
export declare type RpcOrigins = Infer<typeof RpcOriginsStruct>;
/**
 * Asserts that the given value is a valid {@link RpcOrigins} object.
 *
 * @param value - The value to assert.
 * @param ErrorWrapper - An optional error wrapper to use. Defaults to
 * {@link AssertionError}.
 * @throws If the value is not a valid {@link RpcOrigins} object.
 */
export declare function assertIsRpcOrigins(value: unknown, ErrorWrapper?: AssertionErrorConstructor): asserts value is RpcOrigins;
/**
 * Assert that the given value is a successful JSON-RPC response. If the value
 * is not a success response, an error is thrown. If the value is an JSON-RPC
 * error, the error message is included in the thrown error.
 *
 * @param value - The value to check.
 * @throws If the value is not a JSON-RPC success response.
 */
export declare function assertIsJsonRpcSuccess(value: unknown): asserts value is JsonRpcSuccess<Json>;
