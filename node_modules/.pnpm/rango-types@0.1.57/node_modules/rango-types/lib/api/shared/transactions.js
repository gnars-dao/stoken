/**
 * The type of transaction
 */
export var TransactionType;
(function (TransactionType) {
    TransactionType["EVM"] = "EVM";
    TransactionType["TRANSFER"] = "TRANSFER";
    TransactionType["COSMOS"] = "COSMOS";
    TransactionType["SOLANA"] = "SOLANA";
    TransactionType["TRON"] = "TRON";
    TransactionType["STARKNET"] = "STARKNET";
    TransactionType["TON"] = "TON";
})(TransactionType || (TransactionType = {}));
/**
 * The type of transaction
 * @deprecated use TransactionType instead
 */
export var GenericTransactionType;
(function (GenericTransactionType) {
    GenericTransactionType["EVM"] = "EVM";
    GenericTransactionType["TRANSFER"] = "TRANSFER";
    GenericTransactionType["COSMOS"] = "COSMOS";
    GenericTransactionType["SOLANA"] = "SOLANA";
})(GenericTransactionType || (GenericTransactionType = {}));
/**
 * The function checks if a given string value is a valid API error code.
 * @param {string} value - a string that represents a possible API error code.
 * @returns A boolean value is being returned, indicating whether the input `value` is of type
 * `APIErrorCode` or not.
 */
export function isAPIErrorCode(value) {
    return [
        'TX_FAIL',
        'TX_EXPIRED',
        'FETCH_TX_FAILED',
        'USER_REJECT',
        'USER_CANCEL',
        'USER_CANCELED_TX',
        'CALL_WALLET_FAILED',
        'SEND_TX_FAILED',
        'CALL_OR_SEND_FAILED',
        'TX_FAILED_IN_BLOCKCHAIN',
        'CLIENT_UNEXPECTED_BEHAVIOUR',
        'INSUFFICIENT_APPROVE',
    ].includes(value);
}
/**
 * The status of transaction in tracking
 */
export var TransactionStatus;
(function (TransactionStatus) {
    TransactionStatus["FAILED"] = "failed";
    TransactionStatus["RUNNING"] = "running";
    TransactionStatus["SUCCESS"] = "success";
})(TransactionStatus || (TransactionStatus = {}));
//# sourceMappingURL=transactions.js.map