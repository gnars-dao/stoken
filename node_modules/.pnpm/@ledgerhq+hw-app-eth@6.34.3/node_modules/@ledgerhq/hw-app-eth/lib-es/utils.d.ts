/// <reference types="node" />
import { BigNumber } from "bignumber.js";
import { LedgerEthTransactionResolution } from "./services/types";
export declare function splitPath(path: string): number[];
export declare function hexBuffer(str: string): Buffer;
export declare function maybeHexBuffer(str: string | null | undefined): Buffer | null | undefined;
export declare const decodeTxInfo: (rawTx: Buffer) => {
    decodedTx: any;
    txType: number | null;
    chainId: BigNumber;
    chainIdTruncated: number;
    vrsOffset: number;
};
/**
 * @ignore for the README
 *
 * Helper to convert an integer as a hexadecimal string with the right amount of digits
 * to respect the number of bytes given as parameter
 *
 * @param int Integer
 * @param bytes Number of bytes it should be represented as (1 byte = 2 caraters)
 * @returns The given integer as an hexa string padded with the right number of 0
 */
export declare const intAsHexBytes: (int: number, bytes: number) => string;
/**
 * @ignore for the README
 *
 * List of selectors (hexadecimal representation of the used method's signature) related to
 * ERC20 (Tokens), ERC721/ERC1155 (NFT).
 * You can verify and/or get more info about them on http://4byte.directory
 */
export declare enum ERC20_CLEAR_SIGNED_SELECTORS {
    APPROVE = "0x095ea7b3",
    TRANSFER = "0xa9059cbb"
}
export declare enum ERC721_CLEAR_SIGNED_SELECTORS {
    APPROVE = "0x095ea7b3",
    SET_APPROVAL_FOR_ALL = "0xa22cb465",
    TRANSFER_FROM = "0x23b872dd",
    SAFE_TRANSFER_FROM = "0x42842e0e",
    SAFE_TRANSFER_FROM_WITH_DATA = "0xb88d4fde"
}
export declare enum ERC1155_CLEAR_SIGNED_SELECTORS {
    SET_APPROVAL_FOR_ALL = "0xa22cb465",
    SAFE_TRANSFER_FROM = "0xf242432a",
    SAFE_BATCH_TRANSFER_FROM = "0x2eb2c2d6"
}
export declare const tokenSelectors: ERC20_CLEAR_SIGNED_SELECTORS[];
export declare const nftSelectors: (ERC721_CLEAR_SIGNED_SELECTORS | ERC1155_CLEAR_SIGNED_SELECTORS)[];
export declare const mergeResolutions: (resolutionsArray: Partial<LedgerEthTransactionResolution>[]) => LedgerEthTransactionResolution;
//# sourceMappingURL=utils.d.ts.map