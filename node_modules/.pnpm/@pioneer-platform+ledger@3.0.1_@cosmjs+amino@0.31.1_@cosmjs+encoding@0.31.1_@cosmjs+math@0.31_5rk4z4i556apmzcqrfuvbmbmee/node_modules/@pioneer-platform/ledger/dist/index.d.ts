import { Chain } from '@pioneer-platform/types';
import type { ConnectWalletParams } from '@pioneer-platform/types';
import type { DerivationPathArray } from '@pioneer-platform/types';

export declare const getDerivationPathFor: ({ chain, index, type }: Params) => number[];

declare const LEDGER_SUPPORTED_CHAINS: readonly [Chain.Avalanche, Chain.Binance, Chain.Bitcoin, Chain.BitcoinCash, Chain.Cosmos, Chain.Dogecoin, Chain.Ethereum, Chain.Litecoin, Chain.THORChain];

export declare const ledgerWallet: {
    connectMethodName: "connectLedger";
    connect: ({ addChain, config: { covalentApiKey, ethplorerApiKey, utxoApiKey, stagenet }, apis, rpcUrls, }: ConnectWalletParams) => (chain: (typeof LEDGER_SUPPORTED_CHAINS)[number], derivationPath?: DerivationPathArray) => Promise<true | undefined>;
};

declare type Params = {
    index: number;
    chain: Chain;
    type?: 'legacy' | 'ledgerLive' | 'nativeSegwitMiddleAccount' | 'segwit';
};

export { }
