export declare enum HDWalletErrorType {
    ActionCancelled = "ActionCancelled",
    DeviceDisconnected = "DeviceDisconnected",
    DisconnectedDeviceDuringOperation = "DisconnectedDeviceDuringOperation",
    DeviceLocked = "DeviceLocked",
    PopupClosedError = "PopupClosedError",
    ConflictingApp = "ConflictingApp",
    SelectApp = "SelectApp",
    WrongApp = "WrongApp",
    FirmwareUpdateRequired = "FirmwareUpdateRequired",
    WebHIDNotAvailable = "WebHIDNotAvailable",
    WebHIDCouldNotInitialize = "WebHIDCouldNotInitialize",
    WebHIDCouldNotPair = "WebHIDCouldNotPair",
    WebUSBNotAvailable = "WebUSBNotAvailable",
    WebUSBCouldNotInitialize = "WebUSBCouldNotInitialize",
    WebUSBCouldNotPair = "WebUSBCouldNotPair",
    NavigateToDashboard = "NavigateToDashboard"
}
export declare class HDWalletError extends Error {
    type: HDWalletErrorType;
    constructor(message: string, type: HDWalletErrorType);
}
export declare class ActionCancelled extends HDWalletError {
    constructor();
}
export declare class DeviceDisconnected extends HDWalletError {
    constructor();
}
export declare class DisconnectedDeviceDuringOperation extends HDWalletError {
    constructor();
}
export declare class DeviceLocked extends HDWalletError {
    constructor();
}
export declare class PopupClosedError extends HDWalletError {
    constructor();
}
export declare class ConflictingApp extends HDWalletError {
    model: string;
    constructor(model: string);
}
export declare class SelectApp extends HDWalletError {
    constructor(model: string, app: string);
}
export declare class WrongApp extends HDWalletError {
    constructor(model: string, app: string);
}
export declare class FirmwareUpdateRequired extends HDWalletError {
    constructor(model: string, minVer: string);
}
export declare class WebHIDNotAvailable extends HDWalletError {
    constructor();
}
export declare class WebUSBNotAvailable extends HDWalletError {
    constructor();
}
export declare class WebHIDCouldNotInitialize extends HDWalletError {
    constructor(model: string, message: string);
}
export declare class WebUSBCouldNotInitialize extends HDWalletError {
    constructor(model: string, message: string);
}
export declare class WebHIDCouldNotPair extends HDWalletError {
    constructor(model: string, message: string);
}
export declare class WebUSBCouldNotPair extends HDWalletError {
    constructor(model: string, message: string);
}
export declare class NavigateToDashboard extends HDWalletError {
    constructor(model: string);
}
//# sourceMappingURL=exceptions.d.ts.map