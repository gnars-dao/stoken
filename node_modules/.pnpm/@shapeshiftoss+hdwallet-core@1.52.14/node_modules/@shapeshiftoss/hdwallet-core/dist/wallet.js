"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.supportsDebugLink = exports.infoBinance = exports.supportsBinance = exports.infoRipple = exports.supportsRipple = exports.infoKava = exports.supportsKava = exports.infoTerra = exports.supportsTerra = exports.infoSecret = exports.supportsSecret = exports.infoFio = exports.supportsFio = exports.infoEos = exports.supportsEos = exports.infoThorchain = exports.supportsThorchain = exports.infoArkeo = exports.supportsArkeo = exports.infoOsmosis = exports.supportsOsmosis = exports.infoCosmos = exports.supportsArbitrumNova = exports.supportsArbitrum = exports.supportsGnosis = exports.supportsPolygon = exports.supportsBSC = exports.supportsOptimism = exports.supportsAvalanche = exports.supportsEthSwitchChain = exports.supportsCosmos = exports.infoETH = exports.supportsETH = exports.infoBTC = exports.supportsBTC = void 0;
const isObject_1 = __importDefault(require("lodash/isObject"));
/**
 * Type guards
 *
 * Example Usage:
 ```typescript
 const wallet: HDWallet = ...
 if (supportsBTC(wallet)) {
   wallet.btcGetAddress(...)
 }
 ```
 */
function supportsBTC(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsBTC;
}
exports.supportsBTC = supportsBTC;
function infoBTC(info) {
    return (0, isObject_1.default)(info) && info._supportsBTCInfo;
}
exports.infoBTC = infoBTC;
function supportsETH(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsETH;
}
exports.supportsETH = supportsETH;
function infoETH(info) {
    return (0, isObject_1.default)(info) && info._supportsETHInfo;
}
exports.infoETH = infoETH;
function supportsCosmos(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsCosmos;
}
exports.supportsCosmos = supportsCosmos;
function supportsEthSwitchChain(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsEthSwitchChain;
}
exports.supportsEthSwitchChain = supportsEthSwitchChain;
function supportsAvalanche(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsAvalanche;
}
exports.supportsAvalanche = supportsAvalanche;
function supportsOptimism(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsOptimism;
}
exports.supportsOptimism = supportsOptimism;
function supportsBSC(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsBSC;
}
exports.supportsBSC = supportsBSC;
function supportsPolygon(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsPolygon;
}
exports.supportsPolygon = supportsPolygon;
function supportsGnosis(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsGnosis;
}
exports.supportsGnosis = supportsGnosis;
function supportsArbitrum(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsArbitrum;
}
exports.supportsArbitrum = supportsArbitrum;
function supportsArbitrumNova(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsArbitrumNova;
}
exports.supportsArbitrumNova = supportsArbitrumNova;
function infoCosmos(info) {
    return (0, isObject_1.default)(info) && info._supportsCosmosInfo;
}
exports.infoCosmos = infoCosmos;
function supportsOsmosis(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsOsmosis;
}
exports.supportsOsmosis = supportsOsmosis;
function infoOsmosis(info) {
    return (0, isObject_1.default)(info) && info._supportsOsmosisInfo;
}
exports.infoOsmosis = infoOsmosis;
function supportsArkeo(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsArkeo;
}
exports.supportsArkeo = supportsArkeo;
function infoArkeo(info) {
    return (0, isObject_1.default)(info) && info._supportsArkeoInfo;
}
exports.infoArkeo = infoArkeo;
function supportsThorchain(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsThorchain;
}
exports.supportsThorchain = supportsThorchain;
function infoThorchain(info) {
    return (0, isObject_1.default)(info) && info._supportsThorchainInfo;
}
exports.infoThorchain = infoThorchain;
function supportsEos(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsEos;
}
exports.supportsEos = supportsEos;
function infoEos(info) {
    return (0, isObject_1.default)(info) && info._supportsEosInfo;
}
exports.infoEos = infoEos;
function supportsFio(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsFio;
}
exports.supportsFio = supportsFio;
function infoFio(info) {
    return (0, isObject_1.default)(info) && info._supportsFioInfo;
}
exports.infoFio = infoFio;
function supportsSecret(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsSecret;
}
exports.supportsSecret = supportsSecret;
function infoSecret(info) {
    return (0, isObject_1.default)(info) && info._supportsSecretInfo;
}
exports.infoSecret = infoSecret;
function supportsTerra(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsTerra;
}
exports.supportsTerra = supportsTerra;
function infoTerra(info) {
    return (0, isObject_1.default)(info) && info._supportsTerraInfo;
}
exports.infoTerra = infoTerra;
function supportsKava(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsKava;
}
exports.supportsKava = supportsKava;
function infoKava(info) {
    return (0, isObject_1.default)(info) && info._supportsKavaInfo;
}
exports.infoKava = infoKava;
function supportsRipple(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsRipple;
}
exports.supportsRipple = supportsRipple;
function infoRipple(info) {
    return (0, isObject_1.default)(info) && info._supportsRippleInfo;
}
exports.infoRipple = infoRipple;
function supportsBinance(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsBinance;
}
exports.supportsBinance = supportsBinance;
function infoBinance(info) {
    return (0, isObject_1.default)(info) && info._supportsBinanceInfo;
}
exports.infoBinance = infoBinance;
function supportsDebugLink(wallet) {
    return (0, isObject_1.default)(wallet) && wallet._supportsDebugLink;
}
exports.supportsDebugLink = supportsDebugLink;
//# sourceMappingURL=wallet.js.map