import { AssetReference } from '../../assetId/assetId';
export declare type OsmosisCoin = {
    price: number;
    denom: string;
    symbol: string;
    liquidity: number;
    liquidity_24h_change: number;
    volume_24h: number;
    volume_24h_change: number;
    name: string;
    price_24h_change: number;
};
export declare type OsmosisPool = {
    symbol: string;
    amount: number;
    denom: string;
    coingecko_id: string;
    liquidity: number;
    liquidity_24h_change: number;
    volume_24h: number;
    volume_24h_change: number;
    volume_7d: number;
    price: number;
    fees: string;
    main: boolean;
};
export declare const writeFiles: (data: Record<string, Record<string, string>>) => Promise<void>;
export declare const fetchData: ({ tokensUrl, lpTokensUrl, }: {
    tokensUrl: string;
    lpTokensUrl: string;
}) => Promise<OsmosisCoin[]>;
export declare const parseOsmosisData: (data: OsmosisCoin[]) => Record<string, string>;
export declare const parseData: (d: OsmosisCoin[]) => {
    [x: string]: Record<string, string>;
};
export declare const isOsmosisLpAsset: (assetReference: AssetReference | string) => boolean;
export declare const isNumeric: (s: string) => boolean;
