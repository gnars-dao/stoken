import { ChainId, ChainNamespace, ChainReference } from '../chainId/chainId';
import { ASSET_NAMESPACE, ASSET_REFERENCE } from '../constants';
import { Nominal } from '../utils';
export declare type AssetId = Nominal<string, 'AssetId'>;
export declare type AssetNamespace = typeof ASSET_NAMESPACE[keyof typeof ASSET_NAMESPACE];
export declare type AssetReference = typeof ASSET_REFERENCE[keyof typeof ASSET_REFERENCE];
declare type ToAssetIdWithChainId = {
    chainNamespace?: never;
    chainReference?: never;
    chainId: ChainId;
    assetNamespace: AssetNamespace;
    assetReference: AssetReference | string;
};
declare type ToAssetIdWithChainIdParts = {
    chainNamespace: ChainNamespace;
    chainReference: ChainReference;
    chainId?: never;
    assetNamespace: AssetNamespace;
    assetReference: AssetReference | string;
};
export declare type ToAssetIdArgs = ToAssetIdWithChainId | ToAssetIdWithChainIdParts;
declare type ToAssetId = (args: ToAssetIdArgs) => AssetId;
export declare const toAssetId: ToAssetId;
declare type FromAssetIdReturn = {
    chainNamespace: ChainNamespace;
    chainReference: ChainReference;
    chainId: ChainId;
    assetNamespace: AssetNamespace;
    assetReference: AssetReference | string;
};
export declare type FromAssetId = (assetId: AssetId) => FromAssetIdReturn;
export declare const fromAssetId: FromAssetId;
export declare const toCAIP19: ToAssetId;
export declare const fromCAIP19: FromAssetId;
export {};
