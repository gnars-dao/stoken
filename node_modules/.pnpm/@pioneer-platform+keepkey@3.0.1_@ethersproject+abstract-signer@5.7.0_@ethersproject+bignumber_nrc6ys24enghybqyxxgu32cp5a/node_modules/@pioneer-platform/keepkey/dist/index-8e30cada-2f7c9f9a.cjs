"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const b=require("./index-005ea00d-074aa45d.cjs"),w=require("./index-c3de7b97.cjs");require("fs");require("path");require("buffer");require("events");require("util");require("string_decoder");require("assert");function pe(e,t){for(var r=0;r<t.length;r++){const n=t[r];if(typeof n!="string"&&!Array.isArray(n)){for(const o in n)if(o!=="default"&&!(o in e)){const i=Object.getOwnPropertyDescriptor(n,o);i&&Object.defineProperty(e,o,i.get?i:{enumerable:!0,get:()=>n[o]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}var $={},y={},d={},M={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.isMultisigThresholdPubkey=e.isSinglePubkey=e.pubkeyType=e.isSecp256k1Pubkey=e.isEd25519Pubkey=void 0;function t(i){return i.type==="tendermint/PubKeyEd25519"}e.isEd25519Pubkey=t;function r(i){return i.type==="tendermint/PubKeySecp256k1"}e.isSecp256k1Pubkey=r,e.pubkeyType={secp256k1:"tendermint/PubKeySecp256k1",ed25519:"tendermint/PubKeyEd25519",sr25519:"tendermint/PubKeySr25519",multisigThreshold:"tendermint/PubKeyMultisigThreshold"};function n(i){return[e.pubkeyType.ed25519,e.pubkeyType.secp256k1,e.pubkeyType.sr25519].includes(i.type)}e.isSinglePubkey=n;function o(i){return i.type==="tendermint/PubKeyMultisigThreshold"}e.isMultisigThresholdPubkey=o})(M);Object.defineProperty(d,"__esModule",{value:!0});d.encodeBech32Pubkey=d.encodeAminoPubkey=d.decodeBech32Pubkey=d.decodeAminoPubkey=d.encodeEd25519Pubkey=d.encodeSecp256k1Pubkey=void 0;const p=w.build,ye=b.a,j=b.b,m=M;function le(e){if(e.length!==33||e[0]!==2&&e[0]!==3)throw new Error("Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03");return{type:m.pubkeyType.secp256k1,value:(0,p.toBase64)(e)}}d.encodeSecp256k1Pubkey=le;function fe(e){if(e.length!==32)throw new Error("Ed25519 public key must be 32 bytes long");return{type:m.pubkeyType.ed25519,value:(0,p.toBase64)(e)}}d.encodeEd25519Pubkey=fe;const I=(0,p.fromHex)("eb5ae98721"),W=(0,p.fromHex)("1624de6420"),Z=(0,p.fromHex)("0dfb100520"),_=(0,p.fromHex)("22c1f7e2");function L(e){if((0,j.arrayContentStartsWith)(e,I)){const t=e.slice(I.length);if(t.length!==33)throw new Error("Invalid rest data length. Expected 33 bytes (compressed secp256k1 pubkey).");return{type:m.pubkeyType.secp256k1,value:(0,p.toBase64)(t)}}else if((0,j.arrayContentStartsWith)(e,W)){const t=e.slice(W.length);if(t.length!==32)throw new Error("Invalid rest data length. Expected 32 bytes (Ed25519 pubkey).");return{type:m.pubkeyType.ed25519,value:(0,p.toBase64)(t)}}else if((0,j.arrayContentStartsWith)(e,Z)){const t=e.slice(Z.length);if(t.length!==32)throw new Error("Invalid rest data length. Expected 32 bytes (Sr25519 pubkey).");return{type:m.pubkeyType.sr25519,value:(0,p.toBase64)(t)}}else{if((0,j.arrayContentStartsWith)(e,_))return he(e);throw new Error("Unsupported public key type. Amino data starts with: "+(0,p.toHex)(e.slice(0,5)))}}d.decodeAminoPubkey=L;function be(e){const{data:t}=(0,p.fromBech32)(e);return L(t)}d.decodeBech32Pubkey=be;function X(e){if(e.length<1)throw new Error("Can't decode varint. EOF");if(e[0]>127)throw new Error("Decoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.Varint implementation from the Go standard library and write some tests.");return[e[0],1]}function he(e){const t=Array.from(e),r=t.splice(0,_.length);if(!(0,j.arrayContentStartsWith)(r,_))throw new Error("Invalid multisig prefix.");if(t.shift()!=8)throw new Error("Invalid multisig data. Expecting 0x08 prefix before threshold.");const[n,o]=X(t);t.splice(0,o);const i=[];for(;t.length>0;){if(t.shift()!=18)throw new Error("Invalid multisig data. Expecting 0x12 prefix before participant pubkey length.");const[a,u]=X(t);if(t.splice(0,u),t.length<a)throw new Error("Invalid multisig data length.");const s=t.splice(0,a),c=L(Uint8Array.from(s));i.push(c)}return{type:m.pubkeyType.multisigThreshold,value:{threshold:n.toString(),pubkeys:i}}}function Q(e){const t=ye.Uint53.fromString(e.toString()).toNumber();if(t>127)throw new Error("Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.");return[t]}function G(e){if((0,m.isMultisigThresholdPubkey)(e)){const t=Array.from(_);t.push(8),t.push(...Q(e.value.threshold));for(const r of e.value.pubkeys.map(n=>G(n)))t.push(18),t.push(...Q(r.length)),t.push(...r);return new Uint8Array(t)}else{if((0,m.isEd25519Pubkey)(e))return new Uint8Array([...W,...(0,p.fromBase64)(e.value)]);if((0,m.isSecp256k1Pubkey)(e))return new Uint8Array([...I,...(0,p.fromBase64)(e.value)]);throw new Error("Unsupported pubkey type")}}d.encodeAminoPubkey=G;function me(e,t){return(0,p.toBech32)(t,G(e))}d.encodeBech32Pubkey=me;Object.defineProperty(y,"__esModule",{value:!0});y.pubkeyToAddress=y.pubkeyToRawAddress=y.rawSecp256k1PubkeyToRawAddress=y.rawEd25519PubkeyToRawAddress=void 0;const U=b.d,D=w.build,ge=d,z=M;function ne(e){if(e.length!==32)throw new Error(`Invalid Ed25519 pubkey length: ${e.length}`);return(0,U.sha256)(e).slice(0,20)}y.rawEd25519PubkeyToRawAddress=ne;function oe(e){if(e.length!==33)throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${e.length}`);return(0,U.ripemd160)((0,U.sha256)(e))}y.rawSecp256k1PubkeyToRawAddress=oe;function ie(e){if((0,z.isSecp256k1Pubkey)(e)){const t=(0,D.fromBase64)(e.value);return oe(t)}else if((0,z.isEd25519Pubkey)(e)){const t=(0,D.fromBase64)(e.value);return ne(t)}else if((0,z.isMultisigThresholdPubkey)(e)){const t=(0,ge.encodeAminoPubkey)(e);return(0,U.sha256)(t).slice(0,20)}else throw new Error("Unsupported public key type")}y.pubkeyToRawAddress=ie;function ke(e,t){return(0,D.toBech32)(t,ie(e))}y.pubkeyToAddress=ke;var h={};Object.defineProperty(h,"__esModule",{value:!0});h.addCoins=h.parseCoins=h.coins=h.coin=void 0;const J=b.a;function se(e,t){let r;if(typeof e=="number")try{r=new J.Uint53(e).toString()}catch{throw new Error("Given amount is not a safe integer. Consider using a string instead to overcome the limitations of JS numbers.")}else{if(!e.match(/^[0-9]+$/))throw new Error("Invalid unsigned integer string format");r=e.replace(/^0*/,"")||"0"}return{amount:r,denom:t}}h.coin=se;function we(e,t){return[se(e,t)]}h.coins=we;function Pe(e){return e.replace(/\s/g,"").split(",").filter(Boolean).map(t=>{const r=t.match(/^([0-9]+)([a-zA-Z]+)/);if(!r)throw new Error("Got an invalid coin string");return{amount:r[1].replace(/^0+/,"")||"0",denom:r[2]}})}h.parseCoins=Pe;function Se(e,t){if(e.denom!==t.denom)throw new Error("Trying to add two coins with different denoms");return{amount:J.Decimal.fromAtomics(e.amount,0).plus(J.Decimal.fromAtomics(t.amount,0)).atomics,denom:e.denom}}h.addCoins=Se;var v={};Object.defineProperty(v,"__esModule",{value:!0});v.createMultisigThresholdPubkey=v.compareArrays=void 0;const Y=w.build,ve=b.a,ee=y;function ae(e,t){const r=(0,Y.toHex)(e),n=(0,Y.toHex)(t);return r===n?0:r<n?-1:1}v.compareArrays=ae;function Ae(e,t,r=!1){const n=new ve.Uint53(t);if(n.toNumber()>e.length)throw new Error(`Threshold k = ${n.toNumber()} exceeds number of keys n = ${e.length}`);const o=r?e:Array.from(e).sort((i,a)=>{const u=(0,ee.pubkeyToRawAddress)(i),s=(0,ee.pubkeyToRawAddress)(a);return ae(u,s)});return{type:"tendermint/PubKeyMultisigThreshold",value:{threshold:n.toString(),pubkeys:o}}}v.createMultisigThresholdPubkey=Ae;var B={};Object.defineProperty(B,"__esModule",{value:!0});B.makeCosmoshubPath=void 0;const E=b.d;function Te(e){return[E.Slip10RawIndex.hardened(44),E.Slip10RawIndex.hardened(118),E.Slip10RawIndex.hardened(0),E.Slip10RawIndex.normal(0),E.Slip10RawIndex.normal(e)]}B.makeCosmoshubPath=Te;var A={},k={};Object.defineProperty(k,"__esModule",{value:!0});k.decodeSignature=k.encodeSecp256k1Signature=void 0;const H=w.build,Ee=d,xe=M;function Oe(e,t){if(t.length!==64)throw new Error("Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.");return{pub_key:(0,Ee.encodeSecp256k1Pubkey)(e),signature:(0,H.toBase64)(t)}}k.encodeSecp256k1Signature=Oe;function je(e){switch(e.pub_key.type){case xe.pubkeyType.secp256k1:return{pubkey:(0,H.fromBase64)(e.pub_key.value),signature:(0,H.fromBase64)(e.signature)};default:throw new Error("Unsupported pubkey type")}}k.decodeSignature=je;var f={};Object.defineProperty(f,"__esModule",{value:!0});f.serializeSignDoc=f.escapeCharacters=f.makeSignDoc=f.sortedJsonStringify=void 0;const Me=w.build,te=b.a;function q(e){if(typeof e!="object"||e===null)return e;if(Array.isArray(e))return e.map(q);const t=Object.keys(e).sort(),r={};return t.forEach(n=>{r[n]=q(e[n])}),r}function ue(e){return JSON.stringify(q(e))}f.sortedJsonStringify=ue;function Be(e,t,r,n,o,i){return{chain_id:r,account_number:te.Uint53.fromString(o.toString()).toString(),sequence:te.Uint53.fromString(i.toString()).toString(),fee:t,msgs:e,memo:n||""}}f.makeSignDoc=Be;function ce(e){const t=/&/g,r=/</g,n=/>/g;return e.replace(t,"\\u0026").replace(r,"\\u003c").replace(n,"\\u003e")}f.escapeCharacters=ce;function Ce(e){const t=ce(ue(e));return(0,Me.toUtf8)(t)}f.serializeSignDoc=Ce;var V={};(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.decrypt=e.encrypt=e.supportedAlgorithms=e.executeKdf=e.cosmjsSalt=void 0;const t=b.d,r=w.build;e.cosmjsSalt=(0,r.toAscii)("The CosmJS salt.");async function n(a,u){switch(u.algorithm){case"argon2id":{const s=u.params;if(!(0,t.isArgon2idOptions)(s))throw new Error("Invalid format of argon2id params");return t.Argon2id.execute(a,e.cosmjsSalt,s)}default:throw new Error("Unsupported KDF algorithm")}}e.executeKdf=n,e.supportedAlgorithms={xchacha20poly1305Ietf:"xchacha20poly1305-ietf"};async function o(a,u,s){switch(s.algorithm){case e.supportedAlgorithms.xchacha20poly1305Ietf:{const c=t.Random.getBytes(t.xchacha20NonceLength);return new Uint8Array([...c,...await t.Xchacha20poly1305Ietf.encrypt(a,u,c)])}default:throw new Error(`Unsupported encryption algorithm: '${s.algorithm}'`)}}e.encrypt=o;async function i(a,u,s){switch(s.algorithm){case e.supportedAlgorithms.xchacha20poly1305Ietf:{const c=a.slice(0,t.xchacha20NonceLength);return t.Xchacha20poly1305Ietf.decrypt(a.slice(t.xchacha20NonceLength),u,c)}default:throw new Error(`Unsupported encryption algorithm: '${s.algorithm}'`)}}e.decrypt=i})(V);Object.defineProperty(A,"__esModule",{value:!0});A.Secp256k1HdWallet=A.extractKdfConfiguration=void 0;const l=b.d,x=w.build,S=b.b,Ke=y,Re=B,_e=k,Ue=f,O=V,R="secp256k1wallet-v1",Ne={algorithm:"argon2id",params:{outputLength:32,opsLimit:24,memLimitKib:12*1024}};function ze(e){return!(!(0,S.isNonNullObject)(e)||typeof e.hdPath!="string"||typeof e.prefix!="string")}function Ie(e){return e.kdf}function We(e){const t=JSON.parse(e);if(!(0,S.isNonNullObject)(t))throw new Error("Root document is not an object.");switch(t.type){case R:return Ie(t);default:throw new Error("Unsupported serialization type")}}A.extractKdfConfiguration=We;const re={bip39Password:"",hdPaths:[(0,Re.makeCosmoshubPath)(0)],prefix:"cosmos"};class P{static async fromMnemonic(t,r={}){const n=new l.EnglishMnemonic(t),o=await l.Bip39.mnemonicToSeed(n,r.bip39Password);return new P(n,{...r,seed:o})}static async generate(t=12,r={}){const n=4*Math.floor(11*t/33),o=l.Random.getBytes(n),i=l.Bip39.encode(o);return P.fromMnemonic(i.toString(),r)}static async deserialize(t,r){const n=JSON.parse(t);if(!(0,S.isNonNullObject)(n))throw new Error("Root document is not an object.");switch(n.type){case R:return P.deserializeTypeV1(t,r);default:throw new Error("Unsupported serialization type")}}static async deserializeWithEncryptionKey(t,r){const n=JSON.parse(t);if(!(0,S.isNonNullObject)(n))throw new Error("Root document is not an object.");const o=n;switch(o.type){case R:{const i=await(0,O.decrypt)((0,x.fromBase64)(o.data),r,o.encryption),a=JSON.parse((0,x.fromUtf8)(i)),{mnemonic:u,accounts:s}=a;if((0,S.assert)(typeof u=="string"),!Array.isArray(s))throw new Error("Property 'accounts' is not an array");if(!s.every(g=>ze(g)))throw new Error("Account is not in the correct format.");const c=s[0].prefix;if(!s.every(({prefix:g})=>g===c))throw new Error("Accounts do not all have the same prefix");const C=s.map(({hdPath:g})=>(0,l.stringToPath)(g));return P.fromMnemonic(u,{hdPaths:C,prefix:c})}default:throw new Error("Unsupported serialization type")}}static async deserializeTypeV1(t,r){const n=JSON.parse(t);if(!(0,S.isNonNullObject)(n))throw new Error("Root document is not an object.");const o=await(0,O.executeKdf)(r,n.kdf);return P.deserializeWithEncryptionKey(t,o)}constructor(t,r){const n=r.hdPaths??re.hdPaths,o=r.prefix??re.prefix;this.secret=t,this.seed=r.seed,this.accounts=n.map(i=>({hdPath:i,prefix:o}))}get mnemonic(){return this.secret.toString()}async getAccounts(){return(await this.getAccountsWithPrivkeys()).map(({algo:t,pubkey:r,address:n})=>({algo:t,pubkey:r,address:n}))}async signAmino(t,r){const n=(await this.getAccountsWithPrivkeys()).find(({address:c})=>c===t);if(n===void 0)throw new Error(`Address ${t} not found in wallet`);const{privkey:o,pubkey:i}=n,a=(0,l.sha256)((0,Ue.serializeSignDoc)(r)),u=await l.Secp256k1.createSignature(a,o),s=new Uint8Array([...u.r(32),...u.s(32)]);return{signed:r,signature:(0,_e.encodeSecp256k1Signature)(i,s)}}async serialize(t){const r=Ne,n=await(0,O.executeKdf)(t,r);return this.serializeWithEncryptionKey(n,r)}async serializeWithEncryptionKey(t,r){const n={mnemonic:this.mnemonic,accounts:this.accounts.map(({hdPath:s,prefix:c})=>({hdPath:(0,l.pathToString)(s),prefix:c}))},o=(0,x.toUtf8)(JSON.stringify(n)),i={algorithm:O.supportedAlgorithms.xchacha20poly1305Ietf},a=await(0,O.encrypt)(o,t,i),u={type:R,kdf:r,encryption:i,data:(0,x.toBase64)(a)};return JSON.stringify(u)}async getKeyPair(t){const{privkey:r}=l.Slip10.derivePath(l.Slip10Curve.Secp256k1,this.seed,t),{pubkey:n}=await l.Secp256k1.makeKeypair(r);return{privkey:r,pubkey:l.Secp256k1.compressPubkey(n)}}async getAccountsWithPrivkeys(){return Promise.all(this.accounts.map(async({hdPath:t,prefix:r})=>{const{privkey:n,pubkey:o}=await this.getKeyPair(t),i=(0,x.toBech32)(r,(0,Ke.rawSecp256k1PubkeyToRawAddress)(o));return{algo:"secp256k1",privkey:n,pubkey:o,address:i}}))}}A.Secp256k1HdWallet=P;var N={};Object.defineProperty(N,"__esModule",{value:!0});N.Secp256k1Wallet=void 0;const K=b.d,De=w.build,Je=y,He=k,qe=f;class F{static async fromKey(t,r="cosmos"){const n=(await K.Secp256k1.makeKeypair(t)).pubkey;return new F(t,K.Secp256k1.compressPubkey(n),r)}constructor(t,r,n){this.privkey=t,this.pubkey=r,this.prefix=n}get address(){return(0,De.toBech32)(this.prefix,(0,Je.rawSecp256k1PubkeyToRawAddress)(this.pubkey))}async getAccounts(){return[{algo:"secp256k1",address:this.address,pubkey:this.pubkey}]}async signAmino(t,r){if(t!==this.address)throw new Error(`Address ${t} not found in wallet`);const n=new K.Sha256((0,qe.serializeSignDoc)(r)).digest(),o=await K.Secp256k1.createSignature(n,this.privkey),i=new Uint8Array([...o.r(32),...o.s(32)]);return{signed:r,signature:(0,He.encodeSecp256k1Signature)(this.pubkey,i)}}}N.Secp256k1Wallet=F;var T={};Object.defineProperty(T,"__esModule",{value:!0});T.makeStdTx=T.isStdTx=void 0;function $e(e){const{memo:t,msg:r,fee:n,signatures:o}=e;return typeof t=="string"&&Array.isArray(r)&&typeof n=="object"&&Array.isArray(o)}T.isStdTx=$e;function Le(e,t){return{msg:e.msgs,fee:e.fee,memo:e.memo,signatures:Array.isArray(t)?t:[t]}}T.makeStdTx=Le;(function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.executeKdf=e.makeStdTx=e.isStdTx=e.serializeSignDoc=e.makeSignDoc=e.encodeSecp256k1Signature=e.decodeSignature=e.Secp256k1Wallet=e.Secp256k1HdWallet=e.extractKdfConfiguration=e.pubkeyType=e.isSinglePubkey=e.isSecp256k1Pubkey=e.isMultisigThresholdPubkey=e.isEd25519Pubkey=e.makeCosmoshubPath=e.createMultisigThresholdPubkey=e.encodeSecp256k1Pubkey=e.encodeEd25519Pubkey=e.encodeBech32Pubkey=e.encodeAminoPubkey=e.decodeBech32Pubkey=e.decodeAminoPubkey=e.parseCoins=e.coins=e.coin=e.addCoins=e.rawSecp256k1PubkeyToRawAddress=e.rawEd25519PubkeyToRawAddress=e.pubkeyToRawAddress=e.pubkeyToAddress=void 0;var t=y;Object.defineProperty(e,"pubkeyToAddress",{enumerable:!0,get:function(){return t.pubkeyToAddress}}),Object.defineProperty(e,"pubkeyToRawAddress",{enumerable:!0,get:function(){return t.pubkeyToRawAddress}}),Object.defineProperty(e,"rawEd25519PubkeyToRawAddress",{enumerable:!0,get:function(){return t.rawEd25519PubkeyToRawAddress}}),Object.defineProperty(e,"rawSecp256k1PubkeyToRawAddress",{enumerable:!0,get:function(){return t.rawSecp256k1PubkeyToRawAddress}});var r=h;Object.defineProperty(e,"addCoins",{enumerable:!0,get:function(){return r.addCoins}}),Object.defineProperty(e,"coin",{enumerable:!0,get:function(){return r.coin}}),Object.defineProperty(e,"coins",{enumerable:!0,get:function(){return r.coins}}),Object.defineProperty(e,"parseCoins",{enumerable:!0,get:function(){return r.parseCoins}});var n=d;Object.defineProperty(e,"decodeAminoPubkey",{enumerable:!0,get:function(){return n.decodeAminoPubkey}}),Object.defineProperty(e,"decodeBech32Pubkey",{enumerable:!0,get:function(){return n.decodeBech32Pubkey}}),Object.defineProperty(e,"encodeAminoPubkey",{enumerable:!0,get:function(){return n.encodeAminoPubkey}}),Object.defineProperty(e,"encodeBech32Pubkey",{enumerable:!0,get:function(){return n.encodeBech32Pubkey}}),Object.defineProperty(e,"encodeEd25519Pubkey",{enumerable:!0,get:function(){return n.encodeEd25519Pubkey}}),Object.defineProperty(e,"encodeSecp256k1Pubkey",{enumerable:!0,get:function(){return n.encodeSecp256k1Pubkey}});var o=v;Object.defineProperty(e,"createMultisigThresholdPubkey",{enumerable:!0,get:function(){return o.createMultisigThresholdPubkey}});var i=B;Object.defineProperty(e,"makeCosmoshubPath",{enumerable:!0,get:function(){return i.makeCosmoshubPath}});var a=M;Object.defineProperty(e,"isEd25519Pubkey",{enumerable:!0,get:function(){return a.isEd25519Pubkey}}),Object.defineProperty(e,"isMultisigThresholdPubkey",{enumerable:!0,get:function(){return a.isMultisigThresholdPubkey}}),Object.defineProperty(e,"isSecp256k1Pubkey",{enumerable:!0,get:function(){return a.isSecp256k1Pubkey}}),Object.defineProperty(e,"isSinglePubkey",{enumerable:!0,get:function(){return a.isSinglePubkey}}),Object.defineProperty(e,"pubkeyType",{enumerable:!0,get:function(){return a.pubkeyType}});var u=A;Object.defineProperty(e,"extractKdfConfiguration",{enumerable:!0,get:function(){return u.extractKdfConfiguration}}),Object.defineProperty(e,"Secp256k1HdWallet",{enumerable:!0,get:function(){return u.Secp256k1HdWallet}});var s=N;Object.defineProperty(e,"Secp256k1Wallet",{enumerable:!0,get:function(){return s.Secp256k1Wallet}});var c=k;Object.defineProperty(e,"decodeSignature",{enumerable:!0,get:function(){return c.decodeSignature}}),Object.defineProperty(e,"encodeSecp256k1Signature",{enumerable:!0,get:function(){return c.encodeSecp256k1Signature}});var C=f;Object.defineProperty(e,"makeSignDoc",{enumerable:!0,get:function(){return C.makeSignDoc}}),Object.defineProperty(e,"serializeSignDoc",{enumerable:!0,get:function(){return C.serializeSignDoc}});var g=T;Object.defineProperty(e,"isStdTx",{enumerable:!0,get:function(){return g.isStdTx}}),Object.defineProperty(e,"makeStdTx",{enumerable:!0,get:function(){return g.makeStdTx}});var de=V;Object.defineProperty(e,"executeKdf",{enumerable:!0,get:function(){return de.executeKdf}})})($);const Ge=pe({__proto__:null},[$]);exports.b=$;exports.i=Ge;
