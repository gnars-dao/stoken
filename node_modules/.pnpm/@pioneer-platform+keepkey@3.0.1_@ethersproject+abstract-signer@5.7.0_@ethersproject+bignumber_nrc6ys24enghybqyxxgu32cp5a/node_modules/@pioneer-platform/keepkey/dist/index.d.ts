import { Chain } from '@pioneer-platform/types';
import type { ConnectWalletParams } from '@pioneer-platform/types';
import { KeepKeySdk } from '@keepkey/keepkey-sdk';

export declare const checkKeepkeyAvailability: (spec: string) => Promise<boolean>;

export declare const KEEPKEY_SUPPORTED_CHAINS: readonly [Chain.Arbitrum, Chain.Avalanche, Chain.Binance, Chain.BinanceSmartChain, Chain.Bitcoin, Chain.BitcoinCash, Chain.Cosmos, Chain.Dogecoin, Chain.Ethereum, Chain.Litecoin, Chain.Optimism, Chain.Polygon, Chain.THORChain];

declare type KeepKeyOptions = {
    ethplorerApiKey?: string;
    utxoApiKey?: string;
    covalentApiKey?: string;
};

export declare type KeepKeyParams = KeepKeyOptions & {
    sdk: KeepKeySdk;
    chain: Chain;
    rpcUrl?: string;
    api?: any;
};

export declare const keepkeyWallet: {
    connectMethodName: "connectKeepKey";
    connect: ({ apis, rpcUrls, addChain, config: { covalentApiKey, ethplorerApiKey, utxoApiKey }, }: ConnectWalletParams) => (chains: any) => Promise<boolean>;
    isDetected: () => boolean;
};

export { }
