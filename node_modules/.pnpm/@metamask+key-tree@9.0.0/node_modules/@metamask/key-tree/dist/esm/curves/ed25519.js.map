{"version":3,"sources":["../../../src/curves/ed25519.ts"],"sourcesContent":["import { concatBytes, stringToBytes } from '@metamask/utils';\nimport { getPublicKey as getEd25519PublicKey } from '@noble/ed25519';\n\nexport { CURVE as curve } from '@noble/ed25519';\n\nexport const name = 'ed25519';\n\n// Secret is defined in SLIP-10:\n// https://github.com/satoshilabs/slips/blob/133ea52a8e43d338b98be208907e144277e44c0e/slip-0010.md#master-key-generation\nexport const secret = stringToBytes('ed25519 seed');\n\n// All private keys are valid for ed25519:\n// https://github.com/satoshilabs/slips/blob/133ea52a8e43d338b98be208907e144277e44c0e/slip-0010.md#master-key-generation\nexport const isValidPrivateKey = (_privateKey: Uint8Array | string | bigint) =>\n  true;\n\nexport const deriveUnhardenedKeys = false;\n\nexport const publicKeyLength = 33;\n\nexport const getPublicKey = async (\n  privateKey: Uint8Array,\n  _compressed?: boolean,\n): Promise<Uint8Array> => {\n  const publicKey = await getEd25519PublicKey(privateKey);\n  return concatBytes([new Uint8Array([0]), publicKey]);\n};\n\nexport const publicAdd = (\n  _publicKey: Uint8Array,\n  _tweak: Uint8Array,\n): Uint8Array => {\n  throw new Error('Ed25519 does not support public key derivation.');\n};\n\nexport const compressPublicKey = (publicKey: Uint8Array): Uint8Array => {\n  // Ed25519 public keys don't have a compressed form.\n  return publicKey;\n};\n\nexport const decompressPublicKey = (publicKey: Uint8Array): Uint8Array => {\n  // Ed25519 public keys don't have a compressed form.\n  return publicKey;\n};\n"],"names":["concatBytes","stringToBytes","getPublicKey","getEd25519PublicKey","CURVE","curve","name","secret","isValidPrivateKey","_privateKey","deriveUnhardenedKeys","publicKeyLength","privateKey","_compressed","publicKey","Uint8Array","publicAdd","_publicKey","_tweak","Error","compressPublicKey","decompressPublicKey"],"mappings":"AAAA,SAASA,WAAW,EAAEC,aAAa,QAAQ,kBAAkB;AAC7D,SAASC,gBAAgBC,mBAAmB,QAAQ,iBAAiB;AAErE,SAASC,SAASC,KAAK,QAAQ,iBAAiB;AAEhD,OAAO,MAAMC,OAAO,UAAU;AAE9B,gCAAgC;AAChC,wHAAwH;AACxH,OAAO,MAAMC,SAASN,cAAc,gBAAgB;AAEpD,0CAA0C;AAC1C,wHAAwH;AACxH,OAAO,MAAMO,oBAAoB,CAACC,cAChC,KAAK;AAEP,OAAO,MAAMC,uBAAuB,MAAM;AAE1C,OAAO,MAAMC,kBAAkB,GAAG;AAElC,OAAO,MAAMT,eAAe,OAC1BU,YACAC;IAEA,MAAMC,YAAY,MAAMX,oBAAoBS;IAC5C,OAAOZ,YAAY;QAAC,IAAIe,WAAW;YAAC;SAAE;QAAGD;KAAU;AACrD,EAAE;AAEF,OAAO,MAAME,YAAY,CACvBC,YACAC;IAEA,MAAM,IAAIC,MAAM;AAClB,EAAE;AAEF,OAAO,MAAMC,oBAAoB,CAACN;IAChC,oDAAoD;IACpD,OAAOA;AACT,EAAE;AAEF,OAAO,MAAMO,sBAAsB,CAACP;IAClC,oDAAoD;IACpD,OAAOA;AACT,EAAE"}