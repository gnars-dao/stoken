{"version":3,"sources":["../../../src/derivers/index.ts"],"sourcesContent":["import type { Curve } from '../curves';\nimport type { SLIP10Node } from '../SLIP10Node';\nimport * as bip32 from './bip32';\nimport * as bip39 from './bip39';\nimport * as slip10 from './slip10';\n\nexport type DerivedKeys = {\n  /**\n   * The derived private key, can be undefined if public key derivation was used.\n   */\n  privateKey?: Uint8Array;\n  publicKey: Uint8Array;\n  chainCode: Uint8Array;\n};\n\nexport type DeriveChildKeyArgs = {\n  path: Uint8Array | string;\n  curve: Curve;\n  node?: SLIP10Node;\n};\n\nexport type Deriver = {\n  deriveChildKey: (args: DeriveChildKeyArgs) => Promise<SLIP10Node>;\n};\n\nexport const derivers = {\n  bip32,\n  bip39,\n  slip10,\n};\n\nexport { createBip39KeyFromSeed } from './bip39';\n"],"names":["derivers","createBip39KeyFromSeed","bip32","bip39","slip10"],"mappings":";;;;;;;;;;;IAyBaA,QAAQ;eAARA;;IAMJC,sBAAsB;eAAtBA,6BAAsB;;;+DA7BR;+DACA;gEACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBjB,MAAMD,WAAW;IACtBE,OAAAA;IACAC,OAAAA;IACAC,QAAAA;AACF"}