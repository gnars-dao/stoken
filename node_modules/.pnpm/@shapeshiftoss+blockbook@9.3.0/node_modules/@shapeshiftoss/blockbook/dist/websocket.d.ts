import { Tx } from './models';
import { NewBlock } from '.';
export interface Subscription {
    id: string;
    jsonrpc: string;
    method: string;
    params?: Array<string>;
}
export interface Args {
    transactionHandler: TransactionHandler;
    blockHandler: BlockHandler;
}
export interface Options {
    pingInterval?: number;
}
declare type TransactionHandler = (data: Tx) => Promise<void>;
declare type BlockHandler = (data: NewBlock) => Promise<void>;
export declare class WebsocketClient {
    private socket;
    private url;
    private pingTimeout?;
    private interval?;
    private retries;
    private handleTransaction;
    private handleBlock;
    private readonly pingInterval;
    private readonly retryAttempts;
    private logger;
    constructor(url: string, args: Args, opts?: Options);
    private initialize;
    private close;
    private heartbeat;
    private onOpen;
    private onMessage;
}
export {};
//# sourceMappingURL=websocket.d.ts.map