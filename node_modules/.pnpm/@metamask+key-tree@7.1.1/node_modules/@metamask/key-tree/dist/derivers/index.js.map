{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/derivers/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,+CAAiC;AACjC,+CAAiC;AACjC,iDAAmC;AAqBtB,QAAA,QAAQ,GAAG;IACtB,KAAK;IACL,KAAK;IACL,MAAM;CACP,CAAC","sourcesContent":["import { Curve } from '../curves';\nimport { SLIP10Node } from '../SLIP10Node';\nimport * as bip32 from './bip32';\nimport * as bip39 from './bip39';\nimport * as slip10 from './slip10';\n\nexport type DerivedKeys = {\n  /**\n   * The derived private key, can be undefined if public key derivation was used.\n   */\n  privateKey?: Uint8Array;\n  publicKey: Uint8Array;\n  chainCode: Uint8Array;\n};\n\nexport type DeriveChildKeyArgs = {\n  path: Uint8Array | string;\n  curve: Curve;\n  node?: SLIP10Node;\n};\n\nexport type Deriver = {\n  deriveChildKey: (args: DeriveChildKeyArgs) => Promise<SLIP10Node>;\n};\n\nexport const derivers = {\n  bip32,\n  bip39,\n  slip10,\n};\n"]}