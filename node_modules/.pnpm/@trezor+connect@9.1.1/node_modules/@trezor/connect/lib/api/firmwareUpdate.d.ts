import { AbstractMethod } from '../core/AbstractMethod';
import { IntermediaryVersion } from '../types';
type Params = {
    binary?: ArrayBuffer;
    version?: number[];
    btcOnly?: boolean;
    baseUrl: string;
    intermediaryVersion?: IntermediaryVersion;
};
export default class FirmwareUpdate extends AbstractMethod<'firmwareUpdate', Params> {
    init(): void;
    confirmation(): Promise<boolean>;
    run(): Promise<{
        hash: string;
        challenge: string;
    }>;
}
export {};
//# sourceMappingURL=firmwareUpdate.d.ts.map