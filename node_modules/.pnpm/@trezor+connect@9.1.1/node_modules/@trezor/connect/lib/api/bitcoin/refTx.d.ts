import type { TypedRawTransaction } from '@trezor/blockchain-link';
import type { CoinInfo, AccountAddresses } from '../../types';
import type { RefTransaction, TransactionOptions } from '../../types/api/bitcoin';
import type { PROTO } from '../../constants';
export declare const requireReferencedTransactions: (inputs: PROTO.TxInputType[], options?: TransactionOptions, coinInfo?: CoinInfo) => boolean;
export declare const getReferencedTransactions: (inputs: PROTO.TxInputType[]) => string[];
export declare const getOrigTransactions: (inputs: PROTO.TxInputType[], outputs: PROTO.TxOutputType[]) => string[];
export declare const transformOrigTransactions: (txs: TypedRawTransaction[], coinInfo: CoinInfo, addresses?: AccountAddresses) => RefTransaction[];
export declare const transformReferencedTransactions: (txs: TypedRawTransaction[], coinInfo: CoinInfo) => RefTransaction[];
export declare const validateReferencedTransactions: (txs: RefTransaction[] | typeof undefined, inputs: PROTO.TxInputType[], outputs: PROTO.TxOutputType[]) => RefTransaction[] | undefined;
//# sourceMappingURL=refTx.d.ts.map