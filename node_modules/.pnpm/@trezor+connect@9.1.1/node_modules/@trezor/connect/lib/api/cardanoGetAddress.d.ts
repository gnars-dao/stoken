import { AbstractMethod } from '../core/AbstractMethod';
import { PROTO } from '../constants';
type Params = PROTO.CardanoGetAddress & {
    address?: string;
};
export default class CardanoGetAddress extends AbstractMethod<'cardanoGetAddress', Params[]> {
    hasBundle?: boolean;
    progress: number;
    confirmed?: boolean;
    init(): void;
    getButtonRequestData(code: string): {
        type: "address";
        serializedPath: string;
        address: string;
    } | undefined;
    confirmation(): Promise<boolean>;
    noBackupConfirmation(): Promise<boolean>;
    _call({ address_parameters, protocol_magic, network_id, derivation_type, show_display, }: Params): Promise<PROTO.CardanoAddress>;
    _ensureFirmwareSupportsBatch(batch: Params): void;
    run(): Promise<import("..").CardanoAddress | import("..").CardanoAddress[]>;
}
export {};
//# sourceMappingURL=cardanoGetAddress.d.ts.map