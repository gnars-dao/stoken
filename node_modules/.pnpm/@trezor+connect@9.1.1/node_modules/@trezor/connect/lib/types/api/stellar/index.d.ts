/// <reference types="node" />
import type { PROTO } from '../../../constants';
export interface StellarAsset {
    type: PROTO.StellarAssetType;
    code?: string;
    issuer?: string;
}
export interface StellarCreateAccountOperation {
    type: 'createAccount';
    source?: string;
    destination: string;
    startingBalance: string;
}
export interface StellarPaymentOperation {
    type: 'payment';
    source?: string;
    destination: string;
    asset: StellarAsset;
    amount: string;
}
export interface StellarPathPaymentStrictReceiveOperation {
    type: 'pathPaymentStrictReceive';
    source?: string;
    sendAsset: StellarAsset;
    sendMax: string;
    destination: string;
    destAsset: StellarAsset;
    destAmount: string;
    path?: StellarAsset[];
}
export interface StellarPathPaymentStrictSendOperation {
    type: 'pathPaymentStrictSend';
    source?: string;
    sendAsset: StellarAsset;
    sendAmount: string;
    destination: string;
    destAsset: StellarAsset;
    destMin: string;
    path?: StellarAsset[];
}
export interface StellarPassiveSellOfferOperation {
    type: 'createPassiveSellOffer';
    source?: string;
    buying: StellarAsset;
    selling: StellarAsset;
    amount: string;
    price: {
        n: number;
        d: number;
    };
}
export interface StellarManageSellOfferOperation {
    type: 'manageSellOffer';
    source?: string;
    buying: StellarAsset;
    selling: StellarAsset;
    amount: string;
    offerId?: string;
    price: {
        n: number;
        d: number;
    };
}
export interface StellarManageBuyOfferOperation {
    type: 'manageBuyOffer';
    source?: string;
    buying: StellarAsset;
    selling: StellarAsset;
    amount: string;
    offerId?: string;
    price: {
        n: number;
        d: number;
    };
}
export interface StellarSetOptionsOperation {
    type: 'setOptions';
    source?: string;
    signer?: {
        type: PROTO.StellarSignerType;
        key: string | Buffer;
        weight?: number;
    };
    inflationDest?: string;
    clearFlags?: number;
    setFlags?: number;
    masterWeight?: PROTO.UintType;
    lowThreshold?: PROTO.UintType;
    medThreshold?: PROTO.UintType;
    highThreshold?: PROTO.UintType;
    homeDomain?: string;
}
export interface StellarChangeTrustOperation {
    type: 'changeTrust';
    source?: string;
    line: StellarAsset;
    limit: string;
}
export interface StellarAllowTrustOperation {
    type: 'allowTrust';
    source?: string;
    trustor: string;
    assetCode: string;
    assetType: PROTO.StellarAssetType;
    authorize?: boolean | typeof undefined;
}
export interface StellarAccountMergeOperation {
    type: 'accountMerge';
    source?: string;
    destination: string;
}
export interface StellarManageDataOperation {
    type: 'manageData';
    source?: string;
    name: string;
    value?: string | Buffer;
}
export interface StellarBumpSequenceOperation {
    type: 'bumpSequence';
    source?: string;
    bumpTo: string;
}
export interface StellarInflationOperation {
    type: 'inflation';
    source?: string;
}
export type StellarOperation = StellarCreateAccountOperation | StellarPaymentOperation | StellarPathPaymentStrictReceiveOperation | StellarPathPaymentStrictSendOperation | StellarPassiveSellOfferOperation | StellarManageSellOfferOperation | StellarManageBuyOfferOperation | StellarSetOptionsOperation | StellarChangeTrustOperation | StellarAllowTrustOperation | StellarAccountMergeOperation | StellarInflationOperation | StellarManageDataOperation | StellarBumpSequenceOperation;
export interface StellarTransaction {
    source: string;
    fee: number;
    sequence: PROTO.UintType;
    timebounds?: {
        minTime: number;
        maxTime: number;
    };
    memo?: {
        type: PROTO.StellarMemoType;
        id?: string;
        text?: string;
        hash?: string | Buffer;
    };
    operations: StellarOperation[];
}
export interface StellarSignTransaction {
    path: string | number[];
    networkPassphrase: string;
    transaction: StellarTransaction;
}
export interface StellarSignedTx {
    publicKey: string;
    signature: string;
}
export type StellarOperationMessage = ({
    type: 'StellarCreateAccountOp';
} & PROTO.StellarCreateAccountOp) | ({
    type: 'StellarPaymentOp';
} & PROTO.StellarPaymentOp) | ({
    type: 'StellarPathPaymentStrictReceiveOp';
} & PROTO.StellarPathPaymentStrictReceiveOp) | ({
    type: 'StellarPathPaymentStrictSendOp';
} & PROTO.StellarPathPaymentStrictSendOp) | ({
    type: 'StellarManageSellOfferOp';
} & PROTO.StellarManageSellOfferOp) | ({
    type: 'StellarManageBuyOfferOp';
} & PROTO.StellarManageBuyOfferOp) | ({
    type: 'StellarCreatePassiveSellOfferOp';
} & PROTO.StellarCreatePassiveSellOfferOp) | ({
    type: 'StellarSetOptionsOp';
} & PROTO.StellarSetOptionsOp) | ({
    type: 'StellarChangeTrustOp';
} & PROTO.StellarChangeTrustOp) | ({
    type: 'StellarAllowTrustOp';
} & PROTO.StellarAllowTrustOp) | ({
    type: 'StellarAccountMergeOp';
} & PROTO.StellarAccountMergeOp) | ({
    type: 'StellarManageDataOp';
} & PROTO.StellarManageDataOp) | ({
    type: 'StellarBumpSequenceOp';
} & PROTO.StellarBumpSequenceOp);
//# sourceMappingURL=index.d.ts.map