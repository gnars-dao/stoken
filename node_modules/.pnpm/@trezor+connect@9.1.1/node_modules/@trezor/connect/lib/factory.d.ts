/// <reference types="node" />
import type { EventEmitter } from 'events';
import type { TrezorConnect } from './types';
import type { CallMethod } from './events/call';
interface Dependencies {
    call: CallMethod;
    eventEmitter: EventEmitter;
    manifest: TrezorConnect['manifest'];
    init: TrezorConnect['init'];
    requestLogin: TrezorConnect['requestLogin'];
    uiResponse: TrezorConnect['uiResponse'];
    renderWebUSBButton: TrezorConnect['renderWebUSBButton'];
    disableWebUSB: TrezorConnect['disableWebUSB'];
    requestWebUSBDevice: TrezorConnect['requestWebUSBDevice'];
    cancel: TrezorConnect['cancel'];
    dispose: TrezorConnect['dispose'];
}
export declare const factory: ({ eventEmitter, manifest, init, call, requestLogin, uiResponse, renderWebUSBButton, disableWebUSB, requestWebUSBDevice, cancel, dispose, }: Dependencies) => TrezorConnect;
export {};
//# sourceMappingURL=factory.d.ts.map