"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-sdk-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StdTxMsgTransferValueToJSON = exports.StdTxMsgTransferValueFromJSONTyped = exports.StdTxMsgTransferValueFromJSON = exports.instanceOfStdTxMsgTransferValue = void 0;
const runtime_1 = require("../runtime");
const TypesCosmosCoin_1 = require("./TypesCosmosCoin");
const TypesCosmosMessagesIbcGoTransferHeight_1 = require("./TypesCosmosMessagesIbcGoTransferHeight");
/**
 * Check if a given object implements the StdTxMsgTransferValue interface.
 */
function instanceOfStdTxMsgTransferValue(value) {
    let isInstance = true;
    isInstance = isInstance && "receiver" in value;
    isInstance = isInstance && "sender" in value;
    isInstance = isInstance && "source_channel" in value;
    isInstance = isInstance && "source_port" in value;
    isInstance = isInstance && "timeout_height" in value;
    isInstance = isInstance && "token" in value;
    return isInstance;
}
exports.instanceOfStdTxMsgTransferValue = instanceOfStdTxMsgTransferValue;
function StdTxMsgTransferValueFromJSON(json) {
    return StdTxMsgTransferValueFromJSONTyped(json, false);
}
exports.StdTxMsgTransferValueFromJSON = StdTxMsgTransferValueFromJSON;
function StdTxMsgTransferValueFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'memo': !(0, runtime_1.exists)(json, 'memo') ? undefined : json['memo'],
        'receiver': json['receiver'],
        'sender': json['sender'],
        'source_channel': json['source_channel'],
        'source_port': json['source_port'],
        'timeout_height': (0, TypesCosmosMessagesIbcGoTransferHeight_1.TypesCosmosMessagesIbcGoTransferHeightFromJSON)(json['timeout_height']),
        'token': (0, TypesCosmosCoin_1.TypesCosmosCoinFromJSON)(json['token']),
    };
}
exports.StdTxMsgTransferValueFromJSONTyped = StdTxMsgTransferValueFromJSONTyped;
function StdTxMsgTransferValueToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'memo': value.memo,
        'receiver': value.receiver,
        'sender': value.sender,
        'source_channel': value.source_channel,
        'source_port': value.source_port,
        'timeout_height': (0, TypesCosmosMessagesIbcGoTransferHeight_1.TypesCosmosMessagesIbcGoTransferHeightToJSON)(value.timeout_height),
        'token': (0, TypesCosmosCoin_1.TypesCosmosCoinToJSON)(value.token),
    };
}
exports.StdTxMsgTransferValueToJSON = StdTxMsgTransferValueToJSON;
