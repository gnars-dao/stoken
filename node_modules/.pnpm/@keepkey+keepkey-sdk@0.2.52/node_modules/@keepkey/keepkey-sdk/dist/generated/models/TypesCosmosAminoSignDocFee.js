"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-sdk-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypesCosmosAminoSignDocFeeToJSON = exports.TypesCosmosAminoSignDocFeeFromJSONTyped = exports.TypesCosmosAminoSignDocFeeFromJSON = exports.instanceOfTypesCosmosAminoSignDocFee = void 0;
const TypesCosmosCoin_1 = require("./TypesCosmosCoin");
/**
 * Check if a given object implements the TypesCosmosAminoSignDocFee interface.
 */
function instanceOfTypesCosmosAminoSignDocFee(value) {
    let isInstance = true;
    isInstance = isInstance && "gas" in value;
    isInstance = isInstance && "amount" in value;
    return isInstance;
}
exports.instanceOfTypesCosmosAminoSignDocFee = instanceOfTypesCosmosAminoSignDocFee;
function TypesCosmosAminoSignDocFeeFromJSON(json) {
    return TypesCosmosAminoSignDocFeeFromJSONTyped(json, false);
}
exports.TypesCosmosAminoSignDocFeeFromJSON = TypesCosmosAminoSignDocFeeFromJSON;
function TypesCosmosAminoSignDocFeeFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'gas': json['gas'],
        'amount': (json['amount'].map(TypesCosmosCoin_1.TypesCosmosCoinFromJSON)),
    };
}
exports.TypesCosmosAminoSignDocFeeFromJSONTyped = TypesCosmosAminoSignDocFeeFromJSONTyped;
function TypesCosmosAminoSignDocFeeToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'gas': value.gas,
        'amount': (value.amount.map(TypesCosmosCoin_1.TypesCosmosCoinToJSON)),
    };
}
exports.TypesCosmosAminoSignDocFeeToJSON = TypesCosmosAminoSignDocFeeToJSON;
