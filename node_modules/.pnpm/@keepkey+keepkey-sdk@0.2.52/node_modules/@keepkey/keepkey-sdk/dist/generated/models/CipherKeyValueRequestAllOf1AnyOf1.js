"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-sdk-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CipherKeyValueRequestAllOf1AnyOf1ToJSON = exports.CipherKeyValueRequestAllOf1AnyOf1FromJSONTyped = exports.CipherKeyValueRequestAllOf1AnyOf1FromJSON = exports.instanceOfCipherKeyValueRequestAllOf1AnyOf1 = exports.CipherKeyValueRequestAllOf1AnyOf1DecryptEnum = void 0;
/**
 * @export
 */
exports.CipherKeyValueRequestAllOf1AnyOf1DecryptEnum = {
    true: true
};
/**
 * Check if a given object implements the CipherKeyValueRequestAllOf1AnyOf1 interface.
 */
function instanceOfCipherKeyValueRequestAllOf1AnyOf1(value) {
    let isInstance = true;
    isInstance = isInstance && "decrypt" in value;
    isInstance = isInstance && "value" in value;
    return isInstance;
}
exports.instanceOfCipherKeyValueRequestAllOf1AnyOf1 = instanceOfCipherKeyValueRequestAllOf1AnyOf1;
function CipherKeyValueRequestAllOf1AnyOf1FromJSON(json) {
    return CipherKeyValueRequestAllOf1AnyOf1FromJSONTyped(json, false);
}
exports.CipherKeyValueRequestAllOf1AnyOf1FromJSON = CipherKeyValueRequestAllOf1AnyOf1FromJSON;
function CipherKeyValueRequestAllOf1AnyOf1FromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'decrypt': json['decrypt'],
        'value': json['value'],
    };
}
exports.CipherKeyValueRequestAllOf1AnyOf1FromJSONTyped = CipherKeyValueRequestAllOf1AnyOf1FromJSONTyped;
function CipherKeyValueRequestAllOf1AnyOf1ToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'decrypt': value.decrypt,
        'value': value.value,
    };
}
exports.CipherKeyValueRequestAllOf1AnyOf1ToJSON = CipherKeyValueRequestAllOf1AnyOf1ToJSON;
