"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-sdk-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignIdentityRequestToJSON = exports.SignIdentityRequestFromJSONTyped = exports.SignIdentityRequestFromJSON = exports.instanceOfSignIdentityRequest = void 0;
const runtime_1 = require("../runtime");
const SignIdentityRequestChallengeHidden_1 = require("./SignIdentityRequestChallengeHidden");
const SignIdentityRequestIndex_1 = require("./SignIdentityRequestIndex");
/**
 * Check if a given object implements the SignIdentityRequest interface.
 */
function instanceOfSignIdentityRequest(value) {
    let isInstance = true;
    isInstance = isInstance && "challenge_hidden" in value;
    isInstance = isInstance && "url" in value;
    return isInstance;
}
exports.instanceOfSignIdentityRequest = instanceOfSignIdentityRequest;
function SignIdentityRequestFromJSON(json) {
    return SignIdentityRequestFromJSONTyped(json, false);
}
exports.SignIdentityRequestFromJSON = SignIdentityRequestFromJSON;
function SignIdentityRequestFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'ecdsa_curve_name': !(0, runtime_1.exists)(json, 'ecdsa_curve_name') ? undefined : json['ecdsa_curve_name'],
        'challenge_hidden': (0, SignIdentityRequestChallengeHidden_1.SignIdentityRequestChallengeHiddenFromJSON)(json['challenge_hidden']),
        'challenge_visual': !(0, runtime_1.exists)(json, 'challenge_visual') ? undefined : json['challenge_visual'],
        'index': !(0, runtime_1.exists)(json, 'index') ? undefined : (0, SignIdentityRequestIndex_1.SignIdentityRequestIndexFromJSON)(json['index']),
        'url': json['url'],
    };
}
exports.SignIdentityRequestFromJSONTyped = SignIdentityRequestFromJSONTyped;
function SignIdentityRequestToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'ecdsa_curve_name': value.ecdsa_curve_name,
        'challenge_hidden': (0, SignIdentityRequestChallengeHidden_1.SignIdentityRequestChallengeHiddenToJSON)(value.challenge_hidden),
        'challenge_visual': value.challenge_visual,
        'index': (0, SignIdentityRequestIndex_1.SignIdentityRequestIndexToJSON)(value.index),
        'url': value.url,
    };
}
exports.SignIdentityRequestToJSON = SignIdentityRequestToJSON;
