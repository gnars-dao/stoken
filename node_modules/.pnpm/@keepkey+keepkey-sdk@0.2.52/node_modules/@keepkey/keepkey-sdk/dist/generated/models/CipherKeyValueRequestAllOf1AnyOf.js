"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * keepkey-sdk-server
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CipherKeyValueRequestAllOf1AnyOfToJSON = exports.CipherKeyValueRequestAllOf1AnyOfFromJSONTyped = exports.CipherKeyValueRequestAllOf1AnyOfFromJSON = exports.instanceOfCipherKeyValueRequestAllOf1AnyOf = exports.CipherKeyValueRequestAllOf1AnyOfDecryptEnum = void 0;
const runtime_1 = require("../runtime");
/**
 * @export
 */
exports.CipherKeyValueRequestAllOf1AnyOfDecryptEnum = {
    false: false
};
/**
 * Check if a given object implements the CipherKeyValueRequestAllOf1AnyOf interface.
 */
function instanceOfCipherKeyValueRequestAllOf1AnyOf(value) {
    let isInstance = true;
    isInstance = isInstance && "value" in value;
    return isInstance;
}
exports.instanceOfCipherKeyValueRequestAllOf1AnyOf = instanceOfCipherKeyValueRequestAllOf1AnyOf;
function CipherKeyValueRequestAllOf1AnyOfFromJSON(json) {
    return CipherKeyValueRequestAllOf1AnyOfFromJSONTyped(json, false);
}
exports.CipherKeyValueRequestAllOf1AnyOfFromJSON = CipherKeyValueRequestAllOf1AnyOfFromJSON;
function CipherKeyValueRequestAllOf1AnyOfFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'decrypt': !(0, runtime_1.exists)(json, 'decrypt') ? undefined : json['decrypt'],
        'value': json['value'],
    };
}
exports.CipherKeyValueRequestAllOf1AnyOfFromJSONTyped = CipherKeyValueRequestAllOf1AnyOfFromJSONTyped;
function CipherKeyValueRequestAllOf1AnyOfToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'decrypt': value.decrypt,
        'value': value.value,
    };
}
exports.CipherKeyValueRequestAllOf1AnyOfToJSON = CipherKeyValueRequestAllOf1AnyOfToJSON;
