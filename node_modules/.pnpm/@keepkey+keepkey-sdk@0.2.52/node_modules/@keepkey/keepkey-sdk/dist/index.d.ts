import type { PairingInfo } from './generated';
import { Configuration } from './generated';
import * as apis from './generated/apis';
export * from './generated';
export declare class KeepKeySdk {
    readonly address: apis.AddressApi;
    readonly auth: apis.AuthApi;
    readonly bnb: apis.BNBApi;
    readonly cosmos: apis.CosmosApi;
    readonly osmosis: apis.OsmosisApi;
    readonly thorchain: apis.ThorchainApi;
    readonly eth: apis.ETHApi;
    readonly raw: apis.RawApi;
    readonly utxo: apis.UTXOApi;
    readonly system: apis.SystemApi & {
        readonly debug: apis.DebugApi;
        readonly info: apis.InfoApi;
        readonly initialize: apis.InitializeApi;
        readonly manufacturing: apis.ManufacturingApi;
    };
    readonly xrp: apis.XRPApi;
    protected constructor(configuration?: Configuration);
    static create(config: {
        basePath?: string;
        get apiKey(): string | undefined;
        set apiKey(value: string | undefined);
        pairingInfo?: PairingInfo;
    }): Promise<KeepKeySdk>;
}
