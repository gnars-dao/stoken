import type { BlockfrostUtxos, BlockfrostTransaction, BlockfrostAccountInfo, ParseAssetResult } from '@trezor/blockchain-link-types/lib/blockfrost';
import type { VinVout } from '@trezor/blockchain-link-types/lib/blockbook';
import type { Utxo, Transaction, AccountInfo, AccountAddresses, TokenInfo, TokenTransfer, TransferType } from '@trezor/blockchain-link-types/lib/common';
export declare const transformUtxos: (utxos: BlockfrostUtxos[]) => Utxo[];
export declare const getSubtype: (tx: BlockfrostTransaction) => "withdrawal" | "stake_registration" | "stake_deregistration" | "stake_delegation" | null;
export declare const parseAsset: (hex: string) => ParseAssetResult;
export declare const transformTokenInfo: (tokens: BlockfrostAccountInfo['tokens']) => TokenInfo[] | undefined;
export declare const transformInputOutput: (data: BlockfrostTransaction['txUtxos']['inputs'] | BlockfrostTransaction['txUtxos']['outputs'], asset?: string) => VinVout[];
export declare const filterTokenTransfers: (accountAddress: AccountAddresses, tx: BlockfrostTransaction, type: TransferType) => TokenTransfer[];
export declare const transformTransaction: (descriptor: string, accountAddress: AccountAddresses | undefined, blockfrostTxData: BlockfrostTransaction) => Transaction;
export declare const transformAccountInfo: (info: BlockfrostAccountInfo) => AccountInfo;
//# sourceMappingURL=blockfrost.d.ts.map