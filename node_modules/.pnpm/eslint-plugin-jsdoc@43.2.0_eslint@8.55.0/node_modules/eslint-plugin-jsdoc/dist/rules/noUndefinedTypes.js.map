{"version":3,"file":"noUndefinedTypes.js","names":["_jsdoccomment","require","_iterateJsdoc","_interopRequireWildcard","_jsdocUtils","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","extraTypes","typescriptGlobals","stripPseudoTypes","str","replace","_default","iterateJsdoc","context","node","report","settings","sourceCode","utils","_globalScope$childSco","_globalScope$childSco2","scopeManager","globalScope","definedTypes","options","definedPreferredTypes","preferredTypes","structuredTags","mode","keys","length","values","map","preferredType","undefined","reportSettings","replacement","filter","typedefDeclarations","getAllComments","comment","test","value","commentNode","parseComment","flatMap","doc","tags","tag","isNamepathDefiningTag","name","ancestorNodes","currentNode","_currentNode","parent","push","getTemplateTags","ancestorNode","getJSDocComment","jsdoc","jsdocUtils","filterTags","templateTags","getPresentTags","closureGenericTypes","parseClosureTemplateTag","cjsOrESMScope","childScopes","block","type","allDefinedTypes","Set","variables","concat","jsdocTagsWithPossibleType","tagMightHaveTypePosition","parsedType","tryParseType","parseType","traverse","_structuredTags$tag$t","structuredTypes","Array","isArray","includes","markVariableAsUsed","iterateAllJsdocs","meta","docs","description","url","schema","additionalProperties","properties","items","exports","module"],"sources":["../../src/rules/noUndefinedTypes.js"],"sourcesContent":["import {\n  getJSDocComment,\n\n  traverse,\n  parse as parseType,\n  tryParse as tryParseType,\n} from '@es-joy/jsdoccomment';\nimport iterateJsdoc, {\n  parseComment,\n} from '../iterateJsdoc';\nimport jsdocUtils from '../jsdocUtils';\n\nconst extraTypes = [\n  'null', 'undefined', 'void', 'string', 'boolean', 'object',\n  'function', 'symbol',\n  'number', 'bigint', 'NaN', 'Infinity',\n  'any', '*', 'never', 'unknown', 'const',\n  'this', 'true', 'false',\n  'Array', 'Object', 'RegExp', 'Date', 'Function',\n];\n\nconst typescriptGlobals = [\n  // https://www.typescriptlang.org/docs/handbook/utility-types.html\n  'Partial',\n  'Required',\n  'Readonly',\n  'Record',\n  'Pick',\n  'Omit',\n  'Exclude',\n  'Extract',\n  'NonNullable',\n  'Parameters',\n  'ConstructorParameters',\n  'ReturnType',\n  'InstanceType',\n  'ThisParameterType',\n  'OmitThisParameter',\n  'ThisType',\n  'Uppercase',\n  'Lowercase',\n  'Capitalize',\n  'Uncapitalize',\n];\n\nconst stripPseudoTypes = (str) => {\n  return str && str.replace(/(?:\\.|<>|\\.<>|\\[\\])$/u, '');\n};\n\nexport default iterateJsdoc(({\n  context,\n  node,\n  report,\n  settings,\n  sourceCode,\n  utils,\n}) => {\n  const {\n    scopeManager,\n  } = sourceCode;\n  const {\n    globalScope,\n  } = scopeManager;\n\n  const {\n    definedTypes = [],\n  } = context.options[0] || {};\n\n  let definedPreferredTypes = [];\n  const {\n    preferredTypes,\n    structuredTags,\n    mode,\n  } = settings;\n  if (Object.keys(preferredTypes).length) {\n    definedPreferredTypes = Object.values(preferredTypes).map((preferredType) => {\n      if (typeof preferredType === 'string') {\n        // May become an empty string but will be filtered out below\n        return stripPseudoTypes(preferredType);\n      }\n\n      if (!preferredType) {\n        return undefined;\n      }\n\n      if (typeof preferredType !== 'object') {\n        utils.reportSettings(\n          'Invalid `settings.jsdoc.preferredTypes`. Values must be falsy, a string, or an object.',\n        );\n      }\n\n      return stripPseudoTypes(preferredType.replacement);\n    })\n      .filter((preferredType) => {\n        return preferredType;\n      });\n  }\n\n  const typedefDeclarations = context.getAllComments()\n    .filter((comment) => {\n      return (/^\\*\\s/u).test(comment.value);\n    })\n    .map((commentNode) => {\n      return parseComment(commentNode, '');\n    })\n    .flatMap((doc) => {\n      return doc.tags.filter(({\n        tag,\n      }) => {\n        return utils.isNamepathDefiningTag(tag);\n      });\n    })\n    .map((tag) => {\n      return tag.name;\n    });\n\n  const ancestorNodes = [];\n\n  let currentNode = node;\n  // No need for Program node?\n  while (currentNode?.parent) {\n    ancestorNodes.push(currentNode);\n    currentNode = currentNode.parent;\n  }\n\n  const getTemplateTags = function (ancestorNode) {\n    const commentNode = getJSDocComment(sourceCode, ancestorNode, settings);\n    if (!commentNode) {\n      return [];\n    }\n\n    const jsdoc = parseComment(commentNode, '');\n\n    return jsdocUtils.filterTags(jsdoc.tags, (tag) => {\n      return tag.tag === 'template';\n    });\n  };\n\n  // `currentScope` may be `null` or `Program`, so in such a case,\n  //  we look to present tags instead\n  const templateTags = ancestorNodes.length ?\n    ancestorNodes.flatMap((ancestorNode) => {\n      return getTemplateTags(ancestorNode);\n    }) :\n    utils.getPresentTags('template');\n\n  const closureGenericTypes = templateTags.flatMap((tag) => {\n    return utils.parseClosureTemplateTag(tag);\n  });\n\n  // In modules, including Node, there is a global scope at top with the\n  //  Program scope inside\n  const cjsOrESMScope = globalScope.childScopes[0]?.block?.type === 'Program';\n\n  const allDefinedTypes = new Set(globalScope.variables.map(({\n    name,\n  }) => {\n    return name;\n  })\n\n    // If the file is a module, concat the variables from the module scope.\n    .concat(\n      cjsOrESMScope ?\n        globalScope.childScopes.flatMap(({\n          variables,\n        }) => {\n          return variables;\n        }).map(({\n          name,\n        }) => {\n          return name;\n        }) : [],\n    )\n    .concat(extraTypes)\n    .concat(typedefDeclarations)\n    .concat(definedTypes)\n    .concat(definedPreferredTypes)\n    .concat(\n      settings.mode === 'jsdoc' ?\n        [] :\n        [\n          ...settings.mode === 'typescript' ? typescriptGlobals : [],\n          ...closureGenericTypes,\n        ],\n    ));\n\n  const jsdocTagsWithPossibleType = utils.filterTags(({\n    tag,\n  }) => {\n    return utils.tagMightHaveTypePosition(tag) && (tag !== 'suppress' || settings.mode !== 'closure');\n  });\n\n  for (const tag of jsdocTagsWithPossibleType) {\n    let parsedType;\n\n    try {\n      parsedType = mode === 'permissive' ? tryParseType(tag.type) : parseType(tag.type, mode);\n    } catch {\n      // On syntax error, will be handled by valid-types.\n      continue;\n    }\n\n    traverse(parsedType, ({\n      type,\n      value,\n    }) => {\n      if (type === 'JsdocTypeName') {\n        const structuredTypes = structuredTags[tag.tag]?.type;\n        if (!allDefinedTypes.has(value) &&\n          (!Array.isArray(structuredTypes) || !structuredTypes.includes(value))\n        ) {\n          report(`The type '${value}' is undefined.`, null, tag);\n        } else if (!extraTypes.includes(value)) {\n          context.markVariableAsUsed(value);\n        }\n      }\n    });\n  }\n}, {\n  iterateAllJsdocs: true,\n  meta: {\n    docs: {\n      description: 'Checks that types in jsdoc comments are defined.',\n      url: 'https://github.com/gajus/eslint-plugin-jsdoc#eslint-plugin-jsdoc-rules-no-undefined-types',\n    },\n    schema: [\n      {\n        additionalProperties: false,\n        properties: {\n          definedTypes: {\n            items: {\n              type: 'string',\n            },\n            type: 'array',\n          },\n        },\n        type: 'object',\n      },\n    ],\n    type: 'suggestion',\n  },\n});\n"],"mappings":"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"}