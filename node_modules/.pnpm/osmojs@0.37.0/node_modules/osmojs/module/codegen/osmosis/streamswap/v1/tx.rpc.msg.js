import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import * as _m0 from "protobufjs/minimal";
import { MsgCreateSale, MsgCreateSaleResponse, MsgSubscribe, MsgWithdraw, MsgExitSale, MsgExitSaleResponse, MsgFinalizeSale, MsgFinalizeSaleResponse } from "./tx";
import { Empty } from "../../../google/protobuf/empty";
export class MsgClientImpl {
  constructor(rpc) {
    _defineProperty(this, "rpc", void 0);

    this.rpc = rpc;
    this.createSale = this.createSale.bind(this);
    this.subscribe = this.subscribe.bind(this);
    this.withdraw = this.withdraw.bind(this);
    this.exitSale = this.exitSale.bind(this);
    this.finalizeSale = this.finalizeSale.bind(this);
  }

  createSale(request) {
    const data = MsgCreateSale.encode(request).finish();
    const promise = this.rpc.request("osmosis.streamswap.v1.Msg", "CreateSale", data);
    return promise.then(data => MsgCreateSaleResponse.decode(new _m0.Reader(data)));
  }

  subscribe(request) {
    const data = MsgSubscribe.encode(request).finish();
    const promise = this.rpc.request("osmosis.streamswap.v1.Msg", "Subscribe", data);
    return promise.then(data => Empty.decode(new _m0.Reader(data)));
  }

  withdraw(request) {
    const data = MsgWithdraw.encode(request).finish();
    const promise = this.rpc.request("osmosis.streamswap.v1.Msg", "Withdraw", data);
    return promise.then(data => Empty.decode(new _m0.Reader(data)));
  }

  exitSale(request) {
    const data = MsgExitSale.encode(request).finish();
    const promise = this.rpc.request("osmosis.streamswap.v1.Msg", "ExitSale", data);
    return promise.then(data => MsgExitSaleResponse.decode(new _m0.Reader(data)));
  }

  finalizeSale(request) {
    const data = MsgFinalizeSale.encode(request).finish();
    const promise = this.rpc.request("osmosis.streamswap.v1.Msg", "FinalizeSale", data);
    return promise.then(data => MsgFinalizeSaleResponse.decode(new _m0.Reader(data)));
  }

}