"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createRPCQueryClient = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _tendermintRpc = require("@cosmjs/tendermint-rpc");

var _stargate = require("@cosmjs/stargate");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var createRPCQueryClient = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(_ref) {
    var rpcEndpoint, tmClient, client;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            rpcEndpoint = _ref.rpcEndpoint;
            _context.next = 3;
            return _tendermintRpc.Tendermint34Client.connect(rpcEndpoint);

          case 3:
            tmClient = _context.sent;
            client = new _stargate.QueryClient(tmClient);
            _context.next = 7;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/authz/v1beta1/query.rpc.Query"));
            });

          case 7:
            _context.t0 = _context.sent.createRpcQueryExtension(client);
            _context.t1 = {
              v1beta1: _context.t0
            };
            _context.next = 11;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/bank/v1beta1/query.rpc.Query"));
            });

          case 11:
            _context.t2 = _context.sent.createRpcQueryExtension(client);
            _context.t3 = {
              v1beta1: _context.t2
            };
            _context.next = 15;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/distribution/v1beta1/query.rpc.Query"));
            });

          case 15:
            _context.t4 = _context.sent.createRpcQueryExtension(client);
            _context.t5 = {
              v1beta1: _context.t4
            };
            _context.next = 19;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/gov/v1/query.rpc.Query"));
            });

          case 19:
            _context.t6 = _context.sent.createRpcQueryExtension(client);
            _context.next = 22;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/gov/v1beta1/query.rpc.Query"));
            });

          case 22:
            _context.t7 = _context.sent.createRpcQueryExtension(client);
            _context.t8 = {
              v1: _context.t6,
              v1beta1: _context.t7
            };
            _context.next = 26;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/staking/v1beta1/query.rpc.Query"));
            });

          case 26:
            _context.t9 = _context.sent.createRpcQueryExtension(client);
            _context.t10 = {
              v1beta1: _context.t9
            };
            _context.next = 30;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/tx/v1beta1/service.rpc.Service"));
            });

          case 30:
            _context.t11 = _context.sent.createRpcQueryExtension(client);
            _context.t12 = {
              v1beta1: _context.t11
            };
            _context.next = 34;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("../cosmos/upgrade/v1beta1/query.rpc.Query"));
            });

          case 34:
            _context.t13 = _context.sent.createRpcQueryExtension(client);
            _context.t14 = {
              v1beta1: _context.t13
            };
            _context.t15 = {
              authz: _context.t1,
              bank: _context.t3,
              distribution: _context.t5,
              gov: _context.t8,
              staking: _context.t10,
              tx: _context.t12,
              upgrade: _context.t14
            };
            _context.next = 39;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./epochs/query.rpc.Query"));
            });

          case 39:
            _context.t16 = _context.sent.createRpcQueryExtension(client);
            _context.t17 = {
              v1beta1: _context.t16
            };
            _context.next = 43;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./gamm/v1beta1/query.rpc.Query"));
            });

          case 43:
            _context.t18 = _context.sent.createRpcQueryExtension(client);
            _context.t19 = {
              v1beta1: _context.t18
            };
            _context.next = 47;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./incentives/query.rpc.Query"));
            });

          case 47:
            _context.t20 = _context.sent.createRpcQueryExtension(client);
            _context.next = 50;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./lockup/query.rpc.Query"));
            });

          case 50:
            _context.t21 = _context.sent.createRpcQueryExtension(client);
            _context.next = 53;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./mint/v1beta1/query.rpc.Query"));
            });

          case 53:
            _context.t22 = _context.sent.createRpcQueryExtension(client);
            _context.t23 = {
              v1beta1: _context.t22
            };
            _context.next = 57;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./pool-incentives/v1beta1/query.rpc.Query"));
            });

          case 57:
            _context.t24 = _context.sent.createRpcQueryExtension(client);
            _context.t25 = {
              v1beta1: _context.t24
            };
            _context.next = 61;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./streamswap/v1/query.rpc.Query"));
            });

          case 61:
            _context.t26 = _context.sent.createRpcQueryExtension(client);
            _context.t27 = {
              v1: _context.t26
            };
            _context.next = 65;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./superfluid/query.rpc.Query"));
            });

          case 65:
            _context.t28 = _context.sent.createRpcQueryExtension(client);
            _context.next = 68;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./tokenfactory/v1beta1/query.rpc.Query"));
            });

          case 68:
            _context.t29 = _context.sent.createRpcQueryExtension(client);
            _context.t30 = {
              v1beta1: _context.t29
            };
            _context.next = 72;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./twap/v1beta1/query.rpc.Query"));
            });

          case 72:
            _context.t31 = _context.sent.createRpcQueryExtension(client);
            _context.t32 = {
              v1beta1: _context.t31
            };
            _context.next = 76;
            return Promise.resolve().then(function () {
              return _interopRequireWildcard(require("./txfees/v1beta1/query.rpc.Query"));
            });

          case 76:
            _context.t33 = _context.sent.createRpcQueryExtension(client);
            _context.t34 = {
              v1beta1: _context.t33
            };
            _context.t35 = {
              epochs: _context.t17,
              gamm: _context.t19,
              incentives: _context.t20,
              lockup: _context.t21,
              mint: _context.t23,
              poolincentives: _context.t25,
              streamswap: _context.t27,
              superfluid: _context.t28,
              tokenfactory: _context.t30,
              twap: _context.t32,
              txfees: _context.t34
            };
            return _context.abrupt("return", {
              cosmos: _context.t15,
              osmosis: _context.t35
            });

          case 80:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function createRPCQueryClient(_x) {
    return _ref2.apply(this, arguments);
  };
}();

exports.createRPCQueryClient = createRPCQueryClient;