"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EventWithdraw = exports.EventSubscribe = exports.EventFinalizeSale = exports.EventExit = exports.EventCreateSale = void 0;

var _coin = require("../../../cosmos/base/v1beta1/coin");

var _m0 = _interopRequireWildcard(require("protobufjs/minimal"));

var _helpers = require("../../../helpers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function createBaseEventCreateSale() {
  return {
    id: _helpers.Long.UZERO,
    creator: "",
    tokenIn: "",
    tokenOut: undefined
  };
}

var EventCreateSale = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (!message.id.isZero()) {
      writer.uint32(8).uint64(message.id);
    }

    if (message.creator !== "") {
      writer.uint32(18).string(message.creator);
    }

    if (message.tokenIn !== "") {
      writer.uint32(26).string(message.tokenIn);
    }

    if (message.tokenOut !== undefined) {
      _coin.Coin.encode(message.tokenOut, writer.uint32(34).fork()).ldelim();
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseEventCreateSale();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.id = reader.uint64();
          break;

        case 2:
          message.creator = reader.string();
          break;

        case 3:
          message.tokenIn = reader.string();
          break;

        case 4:
          message.tokenOut = _coin.Coin.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$creator, _object$tokenIn;

    var message = createBaseEventCreateSale();
    message.id = object.id !== undefined && object.id !== null ? _helpers.Long.fromValue(object.id) : _helpers.Long.UZERO;
    message.creator = (_object$creator = object.creator) !== null && _object$creator !== void 0 ? _object$creator : "";
    message.tokenIn = (_object$tokenIn = object.tokenIn) !== null && _object$tokenIn !== void 0 ? _object$tokenIn : "";
    message.tokenOut = object.tokenOut !== undefined && object.tokenOut !== null ? _coin.Coin.fromPartial(object.tokenOut) : undefined;
    return message;
  }
};
exports.EventCreateSale = EventCreateSale;

function createBaseEventSubscribe() {
  return {
    sender: "",
    saleId: _helpers.Long.UZERO,
    amount: ""
  };
}

var EventSubscribe = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.sender !== "") {
      writer.uint32(10).string(message.sender);
    }

    if (!message.saleId.isZero()) {
      writer.uint32(16).uint64(message.saleId);
    }

    if (message.amount !== "") {
      writer.uint32(26).string(message.amount);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseEventSubscribe();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;

        case 2:
          message.saleId = reader.uint64();
          break;

        case 3:
          message.amount = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender, _object$amount;

    var message = createBaseEventSubscribe();
    message.sender = (_object$sender = object.sender) !== null && _object$sender !== void 0 ? _object$sender : "";
    message.saleId = object.saleId !== undefined && object.saleId !== null ? _helpers.Long.fromValue(object.saleId) : _helpers.Long.UZERO;
    message.amount = (_object$amount = object.amount) !== null && _object$amount !== void 0 ? _object$amount : "";
    return message;
  }
};
exports.EventSubscribe = EventSubscribe;

function createBaseEventWithdraw() {
  return {
    sender: "",
    saleId: _helpers.Long.UZERO,
    amount: ""
  };
}

var EventWithdraw = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.sender !== "") {
      writer.uint32(10).string(message.sender);
    }

    if (!message.saleId.isZero()) {
      writer.uint32(16).uint64(message.saleId);
    }

    if (message.amount !== "") {
      writer.uint32(26).string(message.amount);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseEventWithdraw();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;

        case 2:
          message.saleId = reader.uint64();
          break;

        case 3:
          message.amount = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender2, _object$amount2;

    var message = createBaseEventWithdraw();
    message.sender = (_object$sender2 = object.sender) !== null && _object$sender2 !== void 0 ? _object$sender2 : "";
    message.saleId = object.saleId !== undefined && object.saleId !== null ? _helpers.Long.fromValue(object.saleId) : _helpers.Long.UZERO;
    message.amount = (_object$amount2 = object.amount) !== null && _object$amount2 !== void 0 ? _object$amount2 : "";
    return message;
  }
};
exports.EventWithdraw = EventWithdraw;

function createBaseEventExit() {
  return {
    sender: "",
    saleId: _helpers.Long.UZERO,
    purchased: ""
  };
}

var EventExit = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (message.sender !== "") {
      writer.uint32(10).string(message.sender);
    }

    if (!message.saleId.isZero()) {
      writer.uint32(16).uint64(message.saleId);
    }

    if (message.purchased !== "") {
      writer.uint32(26).string(message.purchased);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseEventExit();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.sender = reader.string();
          break;

        case 2:
          message.saleId = reader.uint64();
          break;

        case 3:
          message.purchased = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$sender3, _object$purchased;

    var message = createBaseEventExit();
    message.sender = (_object$sender3 = object.sender) !== null && _object$sender3 !== void 0 ? _object$sender3 : "";
    message.saleId = object.saleId !== undefined && object.saleId !== null ? _helpers.Long.fromValue(object.saleId) : _helpers.Long.UZERO;
    message.purchased = (_object$purchased = object.purchased) !== null && _object$purchased !== void 0 ? _object$purchased : "";
    return message;
  }
};
exports.EventExit = EventExit;

function createBaseEventFinalizeSale() {
  return {
    saleId: _helpers.Long.UZERO,
    income: ""
  };
}

var EventFinalizeSale = {
  encode: function encode(message) {
    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _m0.Writer.create();

    if (!message.saleId.isZero()) {
      writer.uint32(8).uint64(message.saleId);
    }

    if (message.income !== "") {
      writer.uint32(26).string(message.income);
    }

    return writer;
  },
  decode: function decode(input, length) {
    var reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
    var end = length === undefined ? reader.len : reader.pos + length;
    var message = createBaseEventFinalizeSale();

    while (reader.pos < end) {
      var tag = reader.uint32();

      switch (tag >>> 3) {
        case 1:
          message.saleId = reader.uint64();
          break;

        case 3:
          message.income = reader.string();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  },
  fromPartial: function fromPartial(object) {
    var _object$income;

    var message = createBaseEventFinalizeSale();
    message.saleId = object.saleId !== undefined && object.saleId !== null ? _helpers.Long.fromValue(object.saleId) : _helpers.Long.UZERO;
    message.income = (_object$income = object.income) !== null && _object$income !== void 0 ? _object$income : "";
    return message;
  }
};
exports.EventFinalizeSale = EventFinalizeSale;