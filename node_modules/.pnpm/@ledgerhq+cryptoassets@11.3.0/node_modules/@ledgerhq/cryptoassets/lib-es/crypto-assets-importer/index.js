var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import path from "path";
import { importEIP712 } from "./importers/eip712";
import { importERC20 } from "./importers/erc20";
import { importEVMTokens } from "./importers/evm";
import { importBEP20 } from "./importers/bep20";
import { importPolygonTokens } from "./importers/polygon";
import { importAsaTokens } from "./importers/asa";
import { importCardanoNativeTokens } from "./importers/cardanoNative";
import { importESDTTokens } from "./importers/esdt";
import { importSPLTokens } from "./importers/spl";
import { importStellarTokens } from "./importers/stellar";
import { importTRC10Tokens } from "./importers/trc10";
import { importTRC20Tokens } from "./importers/trc20";
import { importBEP20Exchange } from "./exchange/bep20";
import { importERC20Exchange } from "./exchange/erc20";
import { importCoinsExchange } from "./exchange/coins";
import { importERC20Signatures } from "./importers/erc20-signature";
const outputFolder = path.join(__dirname, "../data");
const importTokens = () => __awaiter(void 0, void 0, void 0, function* () {
    const promises = [
        importEIP712(outputFolder),
        importERC20(outputFolder),
        importEVMTokens(outputFolder),
        importBEP20(outputFolder),
        importPolygonTokens(outputFolder),
        importAsaTokens(outputFolder),
        importCardanoNativeTokens(outputFolder),
        importESDTTokens(outputFolder),
        importSPLTokens(outputFolder),
        importStellarTokens(outputFolder),
        importTRC10Tokens(outputFolder),
        importTRC20Tokens(outputFolder),
    ];
    yield Promise.allSettled(promises);
});
const importExchangeTokens = () => __awaiter(void 0, void 0, void 0, function* () {
    const promises = [
        importBEP20Exchange(outputFolder),
        importERC20Exchange(outputFolder),
        importCoinsExchange(outputFolder),
    ];
    yield Promise.allSettled(promises);
});
const importSignatures = () => __awaiter(void 0, void 0, void 0, function* () {
    const promises = [importERC20Signatures(outputFolder)];
    yield Promise.allSettled(promises);
});
const main = () => __awaiter(void 0, void 0, void 0, function* () {
    console.log("Starting importing cryptoassets from CDN...");
    yield importTokens();
    yield importExchangeTokens();
    yield importSignatures();
    console.log("Import of cryptoassets finished successfully");
});
main();
//# sourceMappingURL=index.js.map