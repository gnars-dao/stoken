"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const eip712_1 = require("./importers/eip712");
const erc20_1 = require("./importers/erc20");
const evm_1 = require("./importers/evm");
const bep20_1 = require("./importers/bep20");
const polygon_1 = require("./importers/polygon");
const asa_1 = require("./importers/asa");
const cardanoNative_1 = require("./importers/cardanoNative");
const esdt_1 = require("./importers/esdt");
const spl_1 = require("./importers/spl");
const stellar_1 = require("./importers/stellar");
const trc10_1 = require("./importers/trc10");
const trc20_1 = require("./importers/trc20");
const bep20_2 = require("./exchange/bep20");
const erc20_2 = require("./exchange/erc20");
const coins_1 = require("./exchange/coins");
const erc20_signature_1 = require("./importers/erc20-signature");
const outputFolder = path_1.default.join(__dirname, "../data");
const importTokens = () => __awaiter(void 0, void 0, void 0, function* () {
    const promises = [
        (0, eip712_1.importEIP712)(outputFolder),
        (0, erc20_1.importERC20)(outputFolder),
        (0, evm_1.importEVMTokens)(outputFolder),
        (0, bep20_1.importBEP20)(outputFolder),
        (0, polygon_1.importPolygonTokens)(outputFolder),
        (0, asa_1.importAsaTokens)(outputFolder),
        (0, cardanoNative_1.importCardanoNativeTokens)(outputFolder),
        (0, esdt_1.importESDTTokens)(outputFolder),
        (0, spl_1.importSPLTokens)(outputFolder),
        (0, stellar_1.importStellarTokens)(outputFolder),
        (0, trc10_1.importTRC10Tokens)(outputFolder),
        (0, trc20_1.importTRC20Tokens)(outputFolder),
    ];
    yield Promise.allSettled(promises);
});
const importExchangeTokens = () => __awaiter(void 0, void 0, void 0, function* () {
    const promises = [
        (0, bep20_2.importBEP20Exchange)(outputFolder),
        (0, erc20_2.importERC20Exchange)(outputFolder),
        (0, coins_1.importCoinsExchange)(outputFolder),
    ];
    yield Promise.allSettled(promises);
});
const importSignatures = () => __awaiter(void 0, void 0, void 0, function* () {
    const promises = [(0, erc20_signature_1.importERC20Signatures)(outputFolder)];
    yield Promise.allSettled(promises);
});
const main = () => __awaiter(void 0, void 0, void 0, function* () {
    console.log("Starting importing cryptoassets from CDN...");
    yield importTokens();
    yield importExchangeTokens();
    yield importSignatures();
    console.log("Import of cryptoassets finished successfully");
});
main();
//# sourceMappingURL=index.js.map