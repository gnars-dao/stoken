"use strict";
exports.__esModule = true;
exports.RegisterRoutes = void 0;
/* tslint:disable */
/* eslint-disable */
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var runtime_1 = require("@tsoa/runtime");
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var _0_index_controller_1 = require("./../controllers/0-index.controller");
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var _1_pioneer_public_controller_1 = require("./../controllers/1-pioneer-public.controller");
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var pioneer_private_controller_1 = require("./../controllers/pioneer-private.controller");
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var x_apps_controller_1 = require("./../controllers/x-apps.controller");
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var y_invocation_controller_1 = require("./../controllers/y-invocation.controller");
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var z_fio_public_controller_1 = require("./../controllers/z-fio-public.controller");
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
var models = {
    "Health": {
        "dataType": "refObject",
        "properties": {
            "online": { "dataType": "boolean", "required": true },
            "name": { "dataType": "string", "required": true },
            "version": { "dataType": "string", "required": true },
            "system": { "dataType": "any", "required": true },
            "hostname": { "dataType": "string", "required": true },
            "uptime": { "dataType": "any", "required": true },
            "loadavg": { "dataType": "any", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "BodyAllowance": {
        "dataType": "refObject",
        "properties": {
            "token": { "dataType": "string", "required": true },
            "spender": { "dataType": "string", "required": true },
            "sender": { "dataType": "string", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "EstimateFeeBody": {
        "dataType": "refObject",
        "properties": {
            "coin": { "dataType": "string", "required": true },
            "amount": { "dataType": "string", "required": true },
            "contract": { "dataType": "string", "required": true },
            "recipient": { "dataType": "string", "required": true },
            "memo": { "dataType": "string", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "GetFeesWithMemoBody": {
        "dataType": "refObject",
        "properties": {
            "coin": { "dataType": "string", "required": true },
            "memo": { "dataType": "string", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "BroadcastBody": {
        "dataType": "refObject",
        "properties": {
            "coin": { "dataType": "string" },
            "isTestnet": { "dataType": "boolean" },
            "serialized": { "dataType": "string", "required": true },
            "signature": { "dataType": "string" },
            "type": { "dataType": "string" },
            "txid": { "dataType": "string" },
            "broadcastBody": { "dataType": "any" },
            "noBroadcast": { "dataType": "boolean" },
            "dscription": { "dataType": "any" },
            "invocationId": { "dataType": "string" }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "PairBody": {
        "dataType": "refObject",
        "properties": {
            "code": { "dataType": "string", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "createPairingCodeBody": {
        "dataType": "refObject",
        "properties": {
            "service": { "dataType": "string" },
            "url": { "dataType": "string" },
            "data": { "dataType": "any" }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "createApiKeyBody": {
        "dataType": "refObject",
        "properties": {
            "account": { "dataType": "string", "required": true },
            "data": { "dataType": "any" }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "TransactionsBody": {
        "dataType": "refObject",
        "properties": {
            "coin": { "dataType": "string", "required": true },
            "startTime": { "dataType": "double" },
            "endTime": { "dataType": "double" },
            "startBlock": { "dataType": "double" },
            "endBlock": { "dataType": "double" }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "RegisterBodyData": {
        "dataType": "refObject",
        "properties": {
            "pubkeys": { "dataType": "any", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "AuthProviders": {
        "dataType": "refEnum",
        "enums": ["shapeshift", "bitcoin"]
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "RegisterBody": {
        "dataType": "refObject",
        "properties": {
            "isTestnet": { "dataType": "boolean" },
            "blockchains": { "dataType": "any", "required": true },
            "username": { "dataType": "string", "required": true },
            "data": { "ref": "RegisterBodyData", "required": true },
            "auth": { "dataType": "string", "required": true },
            "walletName": { "dataType": "string", "required": true },
            "queryKey": { "dataType": "string" },
            "provider": { "ref": "AuthProviders", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "importBody": {
        "dataType": "refObject",
        "properties": {
            "source": { "dataType": "string", "required": true },
            "coin": { "dataType": "string", "required": true },
            "pubkeys": { "dataType": "any", "required": true }
        },
        "additionalProperties": false
    },
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    "createAppBody": {
        "dataType": "refObject",
        "properties": {
            "name": { "dataType": "string", "required": true },
            "image": { "dataType": "string", "required": true },
            "version": { "dataType": "string", "required": true },
            "description": { "dataType": "string", "required": true }
        },
        "additionalProperties": false
    }
};
var validationService = new runtime_1.ValidationService(models);
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
function RegisterRoutes(app) {
    // ###########################################################################################################
    //  NOTE: If you do not see routes for all of your controllers in this file, then you might not have informed tsoa of where to look
    //      Please look into the "controllerPathGlobs" config option described in the readme: https://github.com/lukeautry/tsoa
    // ###########################################################################################################
    app.get('/api/v1/health', function IndexController_health(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _0_index_controller_1.IndexController();
        var promise = controller.health.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/globals', function pioneerPublicController_globals(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.globals.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/online', function pioneerPublicController_online(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.online.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/coins', function pioneerPublicController_coins(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.coins.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/blockHeights', function pioneerPublicController_blockHeights(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.blockHeights.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/blockHeight/:coin', function pioneerPublicController_blockHeight(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.blockHeight.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/blocks/:coin/:height', function pioneerPublicController_getBlockHash(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" },
            height: { "in": "path", "name": "height", "required": true, "dataType": "double" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getBlockHash.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/user/:username', function pioneerPublicController_user(request, response, next) {
        var args = {
            username: { "in": "path", "name": "username", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.user.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/getPubkeyBalance/:coin/:pubkey', function pioneerPublicController_getPubkeyBalance(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" },
            pubkey: { "in": "path", "name": "pubkey", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getPubkeyBalance.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/:coin/getTransaction/:txid', function pioneerPublicController_getTransaction(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" },
            txid: { "in": "path", "name": "txid", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getTransaction.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/getFeeInfo/:coin', function pioneerPublicController_getFeeInfo(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getFeeInfo.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/getValidators', function pioneerPublicController_getValidators(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getValidators.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/listUnspent/:coin/:xpub', function pioneerPublicController_listUnspent(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" },
            xpub: { "in": "path", "name": "xpub", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.listUnspent.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/getAccountInfo/:coin/:address', function pioneerPublicController_getAccountInfo(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" },
            address: { "in": "path", "name": "address", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getAccountInfo.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eos/accountsFromPubkey/:pubkey', function pioneerPublicController_accountsFromEosPubkey(request, response, next) {
        var args = {
            pubkey: { "in": "path", "name": "pubkey", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.accountsFromEosPubkey.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eos/accountInfo/:username', function pioneerPublicController_eosAccountInfo(request, response, next) {
        var args = {
            username: { "in": "path", "name": "username", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.eosAccountInfo.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eth/getBalanceToken/:address/:token', function pioneerPublicController_getBalanceToken(request, response, next) {
        var args = {
            address: { "in": "path", "name": "address", "required": true, "dataType": "string" },
            token: { "in": "path", "name": "token", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getBalanceToken.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eth/getNonce/:address', function pioneerPublicController_getNonce(request, response, next) {
        var args = {
            address: { "in": "path", "name": "address", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getNonce.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eth/getGasPrice', function pioneerPublicController_getGasPrice(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getGasPrice.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eth/getTransferData/:coin/:address/:amount', function pioneerPublicController_getTransferData(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" },
            address: { "in": "path", "name": "address", "required": true, "dataType": "string" },
            amount: { "in": "path", "name": "amount", "required": true, "dataType": "double" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getTransferData.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eth/getTokens/:address', function pioneerPublicController_getTokenInfo(request, response, next) {
        var args = {
            address: { "in": "path", "name": "address", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getTokenInfo.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eos/validateEosUsername/:username', function pioneerPublicController_validateEosUsername(request, response, next) {
        var args = {
            username: { "in": "path", "name": "username", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.validateEosUsername.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/eos/getEosAccountsByPubkey/:pubkey', function pioneerPublicController_getEosAccountsByPubkey(request, response, next) {
        var args = {
            pubkey: { "in": "path", "name": "pubkey", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getEosAccountsByPubkey.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/eth/getAllowance', function pioneerPublicController_getAllowance(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "ref": "BodyAllowance" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getAllowance.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/getFee', function pioneerPublicController_getFee(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getFee.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/estimateFeesWithGasPricesAndLimits', function pioneerPublicController_estimateFeesWithGasPricesAndLimits(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.estimateFeesWithGasPricesAndLimits.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/estimateFee', function pioneerPublicController_estimateFee(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "ref": "EstimateFeeBody" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.estimateFee.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/getThorchainMemoEncoded', function pioneerPublicController_getThorchainMemoEncoded(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getThorchainMemoEncoded.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/getFeesWithMemo', function pioneerPublicController_getFeesWithMemo(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "ref": "GetFeesWithMemoBody" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.getFeesWithMemo.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/pushTx', function pioneerPublicController_pushTx(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.pushTx.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/broadcast', function pioneerPublicController_broadcast(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "ref": "BroadcastBody" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new _1_pioneer_public_controller_1.pioneerPublicController();
        var promise = controller.broadcast.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/forget', function pioneerPrivateController_forget(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.forget.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/info/:walletId', function pioneerPrivateController_info(request, response, next) {
        var args = {
            walletId: { "in": "path", "name": "walletId", "required": true, "dataType": "string" },
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.info.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/user', function pioneerPrivateController_user(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.user.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/context', function pioneerPrivateController_context(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.context.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/balance/:coin', function pioneerPrivateController_balance(request, response, next) {
        var args = {
            coin: { "in": "path", "name": "coin", "required": true, "dataType": "string" },
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.balance.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/pair', function pioneerPrivateController_pair(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "ref": "PairBody" },
            Authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.pair.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/createPairingCode', function pioneerPrivateController_createPairingCode(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "ref": "createPairingCodeBody" },
            Authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.createPairingCode.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/createApiKey', function pioneerPrivateController_createApiKey(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "ref": "createApiKeyBody" },
            Authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.createApiKey.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/utxos', function pioneerPrivateController_getUtxos(request, response, next) {
        var args = {
            body: { "in": "body", "name": "body", "required": true, "dataType": "any" },
            Authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.getUtxos.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/transactions', function pioneerPrivateController_transactions(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" },
            body: { "in": "body", "name": "body", "required": true, "ref": "TransactionsBody" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.transactions.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/register', function pioneerPrivateController_register(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" },
            body: { "in": "body", "name": "body", "required": true, "ref": "RegisterBody" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller.register.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/import', function pioneerPrivateController_import(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" },
            body: { "in": "body", "name": "body", "required": true, "ref": "importBody" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new pioneer_private_controller_1.pioneerPrivateController();
        var promise = controller["import"].apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/create', function XAppsController_createApp(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" },
            body: { "in": "body", "name": "body", "required": true, "ref": "createAppBody" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new x_apps_controller_1.XAppsController();
        var promise = controller.createApp.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/apps', function XAppsController_listApps(request, response, next) {
        var args = {};
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new x_apps_controller_1.XAppsController();
        var promise = controller.listApps.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.post('/api/v1/invocation', function pioneerInvocationController_invocation(request, response, next) {
        var args = {
            authorization: { "in": "header", "name": "Authorization", "required": true, "dataType": "string" },
            body: { "in": "body", "name": "body", "required": true, "dataType": "any" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new y_invocation_controller_1.pioneerInvocationController();
        var promise = controller.invocation.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/fio/accountsFromPubkey/:pubkey', function ZFioPublicController_accountsFromFioPubkey(request, response, next) {
        var args = {
            pubkey: { "in": "path", "name": "pubkey", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new z_fio_public_controller_1.ZFioPublicController();
        var promise = controller.accountsFromFioPubkey.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/fio/getPubkey/:username', function ZFioPublicController_getFioPubkey(request, response, next) {
        var args = {
            username: { "in": "path", "name": "username", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new z_fio_public_controller_1.ZFioPublicController();
        var promise = controller.getFioPubkey.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    app.get('/api/v1/fio/accountInfo/:username', function ZFioPublicController_getFioAccountInfo(request, response, next) {
        var args = {
            username: { "in": "path", "name": "username", "required": true, "dataType": "string" }
        };
        // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
        var validatedArgs = [];
        try {
            validatedArgs = getValidatedArgs(args, request, response);
        }
        catch (err) {
            return next(err);
        }
        var controller = new z_fio_public_controller_1.ZFioPublicController();
        var promise = controller.getFioAccountInfo.apply(controller, validatedArgs);
        promiseHandler(controller, promise, response, undefined, next);
    });
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    function isController(object) {
        return 'getHeaders' in object && 'getStatus' in object && 'setStatus' in object;
    }
    function promiseHandler(controllerObj, promise, response, successStatus, next) {
        return Promise.resolve(promise)
            .then(function (data) {
            var statusCode = successStatus;
            var headers;
            if (isController(controllerObj)) {
                headers = controllerObj.getHeaders();
                statusCode = controllerObj.getStatus() || statusCode;
            }
            // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
            returnHandler(response, statusCode, data, headers);
        })["catch"](function (error) { return next(error); });
    }
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    function returnHandler(response, statusCode, data, headers) {
        if (headers === void 0) { headers = {}; }
        if (response.headersSent) {
            return;
        }
        Object.keys(headers).forEach(function (name) {
            response.set(name, headers[name]);
        });
        if (data && typeof data.pipe === 'function' && data.readable && typeof data._read === 'function') {
            data.pipe(response);
        }
        else if (data !== null && data !== undefined) {
            response.status(statusCode || 200).json(data);
        }
        else {
            response.status(statusCode || 204).end();
        }
    }
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    function responder(response) {
        return function (status, data, headers) {
            returnHandler(response, status, data, headers);
        };
    }
    ;
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
    function getValidatedArgs(args, request, response) {
        var fieldErrors = {};
        var values = Object.keys(args).map(function (key) {
            var name = args[key].name;
            switch (args[key]["in"]) {
                case 'request':
                    return request;
                case 'query':
                    return validationService.ValidateParam(args[key], request.query[name], name, fieldErrors, undefined, { "noImplicitAdditionalProperties": "silently-remove-extras" });
                case 'path':
                    return validationService.ValidateParam(args[key], request.params[name], name, fieldErrors, undefined, { "noImplicitAdditionalProperties": "silently-remove-extras" });
                case 'header':
                    return validationService.ValidateParam(args[key], request.header(name), name, fieldErrors, undefined, { "noImplicitAdditionalProperties": "silently-remove-extras" });
                case 'body':
                    return validationService.ValidateParam(args[key], request.body, name, fieldErrors, undefined, { "noImplicitAdditionalProperties": "silently-remove-extras" });
                case 'body-prop':
                    return validationService.ValidateParam(args[key], request.body[name], name, fieldErrors, 'body.', { "noImplicitAdditionalProperties": "silently-remove-extras" });
                case 'formData':
                    if (args[key].dataType === 'file') {
                        return validationService.ValidateParam(args[key], request.file, name, fieldErrors, undefined, { "noImplicitAdditionalProperties": "silently-remove-extras" });
                    }
                    else if (args[key].dataType === 'array' && args[key].array.dataType === 'file') {
                        return validationService.ValidateParam(args[key], request.files, name, fieldErrors, undefined, { "noImplicitAdditionalProperties": "silently-remove-extras" });
                    }
                    else {
                        return validationService.ValidateParam(args[key], request.body[name], name, fieldErrors, undefined, { "noImplicitAdditionalProperties": "silently-remove-extras" });
                    }
                case 'res':
                    return responder(response);
            }
        });
        if (Object.keys(fieldErrors).length > 0) {
            throw new runtime_1.ValidateError(fieldErrors, '');
        }
        return values;
    }
    // WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
}
exports.RegisterRoutes = RegisterRoutes;
// WARNING: This file was auto-generated with tsoa. Please do not modify it. Re-run tsoa to re-generate this file: https://github.com/lukeautry/tsoa
