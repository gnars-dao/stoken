"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.HIDKeepKeyAdapter = void 0;
var hdwallet_core_1 = require("@bithighlander/hdwallet-core");
var hdwallet_keepkey_1 = require("@shapeshiftoss/hdwallet-keepkey");
var transport_1 = require("./transport");
var HID = __importStar(require("node-hid"));
var utils_1 = require("./utils");
var HIDKeepKeyAdapter = /** @class */ (function () {
    // public usbDetect = new USBDetect() // Must call keyring.usbDetect.stopMonitoring() for app to exit cleanly
    function HIDKeepKeyAdapter(keyring) {
        this.keyring = keyring;
    }
    HIDKeepKeyAdapter.useKeyring = function (keyring) {
        return new HIDKeepKeyAdapter(keyring);
    };
    HIDKeepKeyAdapter.prototype.initialize = function (devices, autoConnect) {
        if (autoConnect === void 0) { autoConnect = true; }
        return __awaiter(this, void 0, void 0, function () {
            var devicesToInitialize, i, hidDevice, wallet;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        devicesToInitialize = devices || HID.devices().filter(function (d) { return d.vendorId === utils_1.VENDOR_ID && d.productId === utils_1.PRODUCT_ID; });
                        i = 0;
                        _a.label = 1;
                    case 1:
                        if (!(i < devicesToInitialize.length)) return [3 /*break*/, 7];
                        hidDevice = devicesToInitialize[i];
                        if (!this.keyring.wallets[hidDevice.serialNumber]) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.keyring.remove(hidDevice.serialNumber)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3:
                        wallet = hdwallet_keepkey_1.create(new transport_1.HIDKeepKeyTransport(hidDevice, this.keyring));
                        if (!autoConnect) return [3 /*break*/, 5];
                        return [4 /*yield*/, wallet.initialize()];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        // @ts-ignore
                        this.keyring.add(wallet, hidDevice.serialNumber);
                        _a.label = 6;
                    case 6:
                        i++;
                        return [3 /*break*/, 1];
                    case 7: return [2 /*return*/, Object.keys(this.keyring.wallets).length];
                }
            });
        });
    };
    HIDKeepKeyAdapter.prototype.handleConnectKeepKey = function (device) {
        var _this = this;
        var deviceID = device.serialNumber;
        var devices = HID.devices().filter(function (d) { return d.serialNumber === device.serialNumber; });
        this.initialize(devices)
            .then(function () { return function () { return _this.keyring.emit([device.product, deviceID, hdwallet_core_1.Events.CONNECT], deviceID); }; })
            .catch(console.error);
    };
    HIDKeepKeyAdapter.prototype.handleDisconnectKeepKey = function (device) {
        var _this = this;
        this.keyring
            .remove(device.serialNumber)
            .then(function () { return _this.keyring.emit([device.product, device.serialNumber, hdwallet_core_1.Events.DISCONNECT], device.serialNumber); })
            .catch(function () { return _this.keyring.emit([device.product, device.serialNumber, hdwallet_core_1.Events.DISCONNECT], device.serialNumber); });
    };
    return HIDKeepKeyAdapter;
}());
exports.HIDKeepKeyAdapter = HIDKeepKeyAdapter;
