/// <reference types="node" />
import { Keyring } from "@shapeshiftoss/hdwallet-core";
import { KeepKeyTransport } from "@shapeshiftoss/hdwallet-keepkey";
import * as ByteBuffer from "bytebuffer";
import { Device as NodeHIDDevice, HID } from "node-hid";
export declare function requestPair(): HID;
export declare class HIDKeepKeyTransport extends KeepKeyTransport {
    hidRef: HID | undefined;
    hidDevice: NodeHIDDevice;
    private bufferQueue;
    constructor(hidDevice: NodeHIDDevice, keyring: Keyring, hidRef?: HID);
    getDeviceID(): string;
    getVendor(): string;
    getFirmwareHash(firmware: Buffer): Promise<Buffer>;
    get isOpened(): boolean;
    connect(): Promise<void>;
    disconnect(): void;
    getEntropy(length?: number): Uint8Array;
    protected write(buff: ByteBuffer): Promise<void>;
    private readChunk;
    protected read(debugLink: boolean): Promise<ByteBuffer>;
    private writeChunk;
    private enqueueBuffer;
}
