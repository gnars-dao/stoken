export interface SendToAddress {
    blockchain: string;
    asset: string;
    amount: number;
    address: string;
    memo?: string;
    noBroadcast?: boolean;
}
export interface config {
    spec: string;
    env: string;
    mode: string;
    username: string;
    addresses?: [];
    wallet?: any;
    pubkeys?: any;
    auth?: string;
    paths?: any;
    privWallet?: any;
    mnemonic?: string;
    queryKey?: string;
    offline?: boolean;
    pioneerApi?: boolean;
}
export interface Invocation {
    coin: string;
    addressFrom?: string;
    addressTo: string;
    amount: string;
    memo: string;
    nonce?: number;
}
export declare class SDK {
    private spec;
    private pioneerApi;
    private init;
    private config;
    private clients;
    private createPairingCode;
    private queryKey;
    private service;
    private isTestnet;
    private getUserParams;
    private sendToAddress;
    private url;
    private events;
    private wss;
    private username;
    private blockchains;
    private startSocket;
    private isPaired;
    private context;
    private info;
    private wallets;
    private totalValueUsd;
    private getUserInfo;
    private getWalletInfo;
    constructor(spec: string, config: any, isTestnet?: boolean);
}
