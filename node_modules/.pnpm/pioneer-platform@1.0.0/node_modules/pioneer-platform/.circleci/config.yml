version: 2.1


orbs:
  win: circleci/windows@2.2.0 # The Windows orb give you everything you need to start using the Windows executor.

executors:
  pulumi:
    docker:
      - image: circleci/node:10

jobs:
  build:
    resource_class: xlarge
    executor: pulumi
    parameters:
      env:
        description: stage or prod
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          command: "curl -sL https://github.com/digitalocean/doctl/releases/download/v1.56.0/doctl-1.56.0-linux-amd64.tar.gz | tar -xzv"
      - run:
          command: "sudo mv doctl /usr/local/bin"
      - run:
          command: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      - run:
          name: build
          command: "doctl auth init -t $DIGITALOCEAN_TOKEN && doctl registry login && npm run build:rest"
  deploy:
    executor: pulumi
    parameters:
      env:
        description: stage or prod
        type: string
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: update
          command: "cd deploy && npm i && node leeroy-sdk.js"
  build-native-mac:
    macos:
      xcode: 11.5.0
    steps:
      - checkout
      - run:
          command: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
      - run: npm install -g @quasar/cli
      - run: node --version
      - run: quasar --version
      - run: cd platform && npm i
      - run: cd platform && GH_TOKEN=$GH_TOKEN npm run build-electron-publish-mac

#TODO
#  build-native-linux:
#    macos:
#      xcode: 11.5.0
#    steps:
#      - checkout
#      - run:
#          command: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
#      - run: node --version
#      - run: brew update && brew upgrade
#      - run: brew install snapcraft
#      - run: npm install -g @quasar/cli
#      - run: cd apps/pioneer-platform/platform && npm i
#      - run: cd apps/pioneer-platform/platform && npm run fix
#      - run: cd apps/pioneer-platform/platform && GH_TOKEN=$GH_TOKEN npm run build-electron-publish-linux
#
#  build-native-windows:
#    executor:
#      name: win/default # executor type
#      size: "medium" # resource class, can be "medium", "large", "xlarge", "2xlarge", defaults to "medium"
#    steps:
#      - checkout
#      - run:
#          command: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
#          shell: bash.exe
#          name: set env
#      - run:
#          command: cd apps/pioneer-platform/platform && npm i
#          shell: bash.exe
#          name: npm install
#      - run:
#          command: cd apps/pioneer-platform/platform && GH_TOKEN=$GH_TOKEN npm run build-electron-publish-windows
#          shell: bash.exe
#          name: npm install

not_master: &not_master
  filters:
    branches:
      ignore: master

only_master: &only_master
  filters:
    branches:
      only:
        - master

only_develop: &only_develop
  filters:
    branches:
      only:
        - develop

# Blue* deployment
only_release_canidate: &only_release_canidate
  filters:
    branches:
      only:
        - release-canidate

workflows:
  version: 2
  pioneer-native:
    jobs:
      - build-native-mac
#      - build-native-windows
#      - build-native-linux
  build-master:
    jobs:
      - build:
          <<: *only_master
          name: push image
          env: prod
      - deploy:
          <<: *only_master
          name: deploy image
          env: prod
          requires:
            - push image
