import * as core from "@bithighlander/hdwallet-core";
import { NativeHDWalletBase } from "./native";
import * as Isolation from "./crypto/isolation";
export declare function MixinNativeTerraWalletInfo<TBase extends core.Constructor<core.HDWalletInfo>>(Base: TBase): {
    new (...args: any[]): {
        readonly _supportsTerraInfo: true;
        terraSupportsNetwork(): Promise<boolean>;
        terraSupportsSecureTransfer(): Promise<boolean>;
        terraGetAccountPaths(msg: core.TerraGetAccountPaths): Array<core.TerraAccountPath>;
        terraNextAccountPath(msg: core.TerraAccountPath): core.TerraAccountPath | undefined;
        getVendor(): string;
        hasOnDevicePinEntry(): boolean;
        hasOnDevicePassphrase(): boolean;
        hasOnDeviceDisplay(): boolean;
        hasOnDeviceRecovery(): boolean;
        describePath(msg: core.DescribePath): core.PathDescription;
    };
} & TBase;
export declare function MixinNativeTerraWallet<TBase extends core.Constructor<NativeHDWalletBase>>(Base: TBase): {
    new (...args: any[]): {
        readonly _supportsTerra: true;
        "__#12@#seed": Isolation.Core.BIP32.Seed | undefined;
        terraInitializeWallet(seed: Isolation.Core.BIP32.Seed): Promise<void>;
        terraWipe(): void;
        terraBech32ify(address: ArrayLike<number>, prefix: string): string;
        createTerraAddress(publicKey: string): string;
        terraGetAddress(msg: core.TerraGetAddress): Promise<string | null>;
        terraSignTx(msg: core.TerraSignTx): Promise<any | null>;
        readonly "__#14@#events": import("eventemitter2").EventEmitter2;
        readonly events: import("eventemitter2").EventEmitter2;
        needsMnemonic<T>(hasMnemonic: boolean, callback: () => T): T | null;
        getVendor(): string;
        hasOnDevicePinEntry(): boolean;
        hasOnDevicePassphrase(): boolean;
        hasOnDeviceDisplay(): boolean;
        hasOnDeviceRecovery(): boolean;
        describePath(msg: core.DescribePath): core.PathDescription;
    };
} & TBase;
//# sourceMappingURL=terra.d.ts.map