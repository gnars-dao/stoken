import * as ethers from "ethers";
import { SecP256K1 } from "../core";
export declare class SignerAdapter extends ethers.Signer {
    protected readonly _isolatedKey: SecP256K1.ECDSAKey & SecP256K1.ECDHKey;
    readonly provider?: ethers.providers.Provider;
    constructor(isolatedKey: SecP256K1.ECDSAKey & SecP256K1.ECDHKey, provider?: ethers.providers.Provider);
    connect(provider: ethers.providers.Provider): SignerAdapter;
    getAddress(): Promise<string>;
    signDigest(digest: ethers.BytesLike): Promise<ethers.Signature>;
    signTransaction(transaction: ethers.utils.Deferrable<ethers.providers.TransactionRequest>): Promise<string>;
    signMessage(messageData: ethers.Bytes | string): Promise<string>;
}
export default SignerAdapter;
//# sourceMappingURL=ethereum.d.ts.map